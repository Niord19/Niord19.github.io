<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>硬件知识复习笔记2</title>
      <link href="/2023/11/02/%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A02/"/>
      <url>/2023/11/02/%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A02/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A023(Article023) --><div class="note info flat"><p>本文知识来源于牛客-硬件开发工程师面试题库，记录了一些电子器件选型的基础知识。</p></div><h3 id="1-电阻、电容、电感的品牌"><a href="#1-电阻、电容、电感的品牌" class="headerlink" title="1. 电阻、电容、电感的品牌"></a>1. 电阻、电容、电感的品牌</h3><div class="table-container"><table><thead><tr><th>器件</th><th>品牌</th><th>国内品牌</th></tr></thead><tbody><tr><td>【电阻】</td><td>威世、松下、罗姆、厚声、国巨</td><td>风华、捷比信</td></tr><tr><td>【电容】</td><td>威世、松下、村田、太诱、东信、三星、凯普松、华新科、国巨</td><td>风华、艾华</td></tr><tr><td>【电感】</td><td>威世、松下、村田、太诱、台庆、华新科、国巨</td><td>风华、科达嘉</td></tr></tbody></table></div><h3 id="2-封装型号的含义"><a href="#2-封装型号的含义" class="headerlink" title="2. 封装型号的含义"></a>2. 封装型号的含义</h3><p>表示的是尺寸参数。<br>0402：40 <em> 20mil<br>0603：60 </em> 30mil<br>0805：80 * 50mil</p><p>【mil是什么单位？】<br>1mil=1/1000inch=0.0254mm<br>1mm=39.37mil</p><h3 id="3-请说明以下字母所代表的电容的精度：J、K、M、Z"><a href="#3-请说明以下字母所代表的电容的精度：J、K、M、Z" class="headerlink" title="3. 请说明以下字母所代表的电容的精度：J、K、M、Z"></a>3. 请说明以下字母所代表的电容的精度：J、K、M、Z</h3><p>J：±5%<br>K：±10%<br>M：±20%<br>Z：+80%~-20%</p><h3 id="4-请问电阻、电容、电感的封装大小分别与什么参数有关？"><a href="#4-请问电阻、电容、电感的封装大小分别与什么参数有关？" class="headerlink" title="4. 请问电阻、电容、电感的封装大小分别与什么参数有关？"></a>4. 请问电阻、电容、电感的封装大小分别与什么参数有关？</h3><p>电阻R封装大小与: 电阻值R、额定功率Pe有关；<br>电容C封装大小与: 电容值C、额定电压Ue有关；<br>电感L封装大小与: 电感量L、额定电流Ie有关。</p><h3 id="5-什么叫上下拉电阻？"><a href="#5-什么叫上下拉电阻？" class="headerlink" title="5. 什么叫上下拉电阻？"></a>5. 什么叫上下拉电阻？</h3><p><code>上下拉</code>是指将不确定/不稳定的信号输入通过一个电阻，把引脚钳制在一个高/低的稳定电平，其中电阻起限流保护作用。<br><img src="https://s2.loli.net/2023/11/02/n3jrP6lfW7eNtB1.png" alt="A023-上下拉电阻的定义与作用.png"></p><h4 id="5-1-上拉电阻"><a href="#5-1-上拉电阻" class="headerlink" title="5.1 上拉电阻"></a>5.1 上拉电阻</h4><p>上拉电阻在引脚外建立了一套额外的电路。这里的电阻只是简单的固定值电阻，连接在电源和适当的引脚之间。</p><blockquote><p>当开关断开时，引脚电压被上拉至VCC；（常态）<br>当开关闭合时，引脚电压被下拉到GND。</p></blockquote><p>如果不使用上拉电阻，会直接导致电路短路。因为引脚不能直接接地或电源，这样会造成电路的损坏。</p><h4 id="5-2-下拉电阻"><a href="#5-2-下拉电阻" class="headerlink" title="5.2 下拉电阻"></a>5.2 下拉电阻</h4><blockquote><p>当开关断开时，引脚电压下拉至GND。（常态）<br>当开关闭合时，引脚电压上拉至VCC。</p></blockquote><p>如果不使用下拉电阻，闭合时会导致引脚与5V电源短路。</p><h4 id="5-3-上下拉电阻的选择"><a href="#5-3-上下拉电阻的选择" class="headerlink" title="5.3 上下拉电阻的选择"></a>5.3 上下拉电阻的选择</h4><p>Q: 如果某CPU有很多IO端口需要接上下拉电阻，电阻范围1~10K 欧姆均可。以下规格的电阻，您会选择哪一种：1K/1%、4.99K/1%、10K/1%、1K/5%、2.2K/5%、4.7K/5%、8.2K/5%、10K/5%、3.9K/10%、5.6K/10%、4.7K/20%？说明你选择该电阻的理由。<br>A: 从理论上来说，1~10K的电阻都可以采用，但如果从价格上考虑，当然是4.7K/20%的最合算。(尊嘟假嘟?)</p><h4 id="5-4-为什么OD-开漏-门和OC-开集-门输出必须加上拉电阻？"><a href="#5-4-为什么OD-开漏-门和OC-开集-门输出必须加上拉电阻？" class="headerlink" title="5.4 为什么OD(开漏)门和OC(开集)门输出必须加上拉电阻？"></a>5.4 为什么OD(开漏)门和OC(开集)门输出必须加上拉电阻？</h4><p>因为MOS管和三极管关闭时，漏极D和集电极C是高阻态，输出无确定电平，必须提供上拉电平，确定高电平时的输出电压。</p><h4 id="6-浪涌电压是什么？"><a href="#6-浪涌电压是什么？" class="headerlink" title="6. 浪涌电压是什么？"></a>6. 浪涌电压是什么？</h4><p><code>浪涌电压</code>是指瞬间电压升高的现象。</p><h4 id="7-压敏电阻的工作原理？"><a href="#7-压敏电阻的工作原理？" class="headerlink" title="7. 压敏电阻的工作原理？"></a>7. 压敏电阻的工作原理？</h4><p>当<code>压敏电阻</code>上的电压超过一定幅度时，电阻的阻值降低，从而将<code>浪涌能量</code>泄放掉，并将<code>浪涌电压</code>限制在一定的幅度。</p><h4 id="8-TVS瞬态电压抑制器-的定义与工作原理？"><a href="#8-TVS瞬态电压抑制器-的定义与工作原理？" class="headerlink" title="8. TVS瞬态电压抑制器 的定义与工作原理？"></a>8. TVS瞬态电压抑制器 的定义与工作原理？</h4><p>【定义】<code>TVS(瞬态电压抑制器)</code>，又称<code>雪崩击穿二极管</code>。有单向与双向之分，单向用于直流电路，双向用于交流电路。常用于泄放浪涌电压以保护电路。<br><img src="https://s2.loli.net/2023/11/02/8PA7bd1mXgkoG5V.png" alt="A023-014-TVS工作原理.png"></p><p>【工作原理】<br>1.当电路正常工作时，TVS 处于截止状态（高阻态），不影响电路正常工作。<br>2.当电路出现异常过电压并达到TVS（雪崩）击穿电压时，TVS 迅速由高电阻状态突变为低电阻状态，泄放由异常过电压导致的瞬时过电流到地，同时把异常过电压钳制在较低的水平，从而保护后级电路免遭异常过电压的损坏。<br>3.当异常过电压消失后，TVS 阻值又恢复为高阻态。</p><p>【作用】<br>当TVS上的电压超过一定幅度时，器件迅速导通，从而将浪涌能量泄放掉，并将浪涌电压限制在一定的幅度。</p><h4 id="9-请问电容值和介质损耗最稳定的贴片电容是哪一种？"><a href="#9-请问电容值和介质损耗最稳定的贴片电容是哪一种？" class="headerlink" title="9. 请问电容值和介质损耗最稳定的贴片电容是哪一种？"></a>9. 请问电容值和介质损耗最稳定的贴片电容是哪一种？</h4><p>常见<code>贴片电容的材质</code>有：X7R、X5R、Y5V、NPO(COG)、Z5U。<br>其中，电容值和介质损耗最稳定的是<code>NPO(COG)材质电容</code>。</p><h4 id="10-磁珠是什么？"><a href="#10-磁珠是什么？" class="headerlink" title="10. 磁珠是什么？"></a>10. 磁珠是什么？</h4><p><code>磁珠</code>是一种被动组件，利用其<code>高频电流产生的热耗散</code>来<code>抑制高频噪声</code>，常用于滤波。<br>参数100R@100MHz意为：在100MHz频率下的阻抗值是100欧姆。</p><h4 id="11-共模电感的作用？"><a href="#11-共模电感的作用？" class="headerlink" title="11. 共模电感的作用？"></a>11. 共模电感的作用？</h4><p>抑制共模干扰。</p><h4 id="12-差分放大电路的定义与作用？"><a href="#12-差分放大电路的定义与作用？" class="headerlink" title="12. 差分放大电路的定义与作用？"></a>12. 差分放大电路的定义与作用？</h4><p>【定义】差分放大电路是一种常用的放大电路，可以将两个输入信号之间的差异放大到输出端。通常由晶体管或运算放大器构成。<br>【作用】放大差模信号、抑制共模信号。</p><h4 id="13-发光二极管-LED-的定义与作用？"><a href="#13-发光二极管-LED-的定义与作用？" class="headerlink" title="13. 发光二极管(LED)的定义与作用？"></a>13. 发光二极管(LED)的定义与作用？</h4><p>当正向偏置时，发光二极管（LED）将发出特定光谱波长的彩色光。<br>长引脚为正极，短引脚为负极。</p><blockquote><p>【各种颜色的导通电压】<br>红光，橙光，黄光，黄绿光的点亮电压比较低，2伏左右。<br>翠绿光，蓝光，紫光，白光的点亮电压相对高，3伏左右。</p></blockquote><h4 id="14-LED指示灯的颜色怎么选择？"><a href="#14-LED指示灯的颜色怎么选择？" class="headerlink" title="14. LED指示灯的颜色怎么选择？"></a>14. LED指示灯的颜色怎么选择？</h4><p>电源指示灯用红色，信号指示灯用绿色，这两种颜色的LED 灯技术最成熟，价格最便宜。</p><h4 id="15-常见器件型号"><a href="#15-常见器件型号" class="headerlink" title="15. 常见器件型号"></a>15. 常见器件型号</h4><p>常见二极管型号：1N4148、1N5817、1N5819、1N5820、1N5822、1N4001、1N4007、SR160、SR360、BAT54A、BAT54C、BAT54S。<br>NPN三极管型号：2N2222、2N3904、2N5550、2N5551、M8050、S9013、S9014、S9018。<br>PNP三极管型号：2N3906、M8550、S9012、2SB1005、2SB1184、2SB1386、2SB1412、2N4403、2N4030。<br>P-MOS管型号：AO3415、Si2301DS、Si2305DS、AP4435M、AP9435M。<br>N-MOS管型号：IRF7809A、Si2302DS、BSS138。<br>LDO(低压差线性稳压器)的型号：AZ1084、AZ1085、AZ1086、AMS1117、AS1581、APL5102、BL8503、AP1184、AP1186、LM7805、 LM7812 、LM7905、R1114、RT9169、RT9172、TPS73701、XC6206、XC6210。<br>DC-DC控制器型号：AP34063、AAT1160、APW7102、APW7136、BL8530、AP1507、LM2576、LM2596、RT8008、SP6123、 XC9201。<br>复位IC型号：IMP809、IMP811。<br>51单片机型号：AT89C2051、AT89C51、AT89S52、W78E65、W78E516B。<br>ARM CPU型号：S3C4510B、S3C44B0、S3C2440、S3C2442、S3C2443、S3C2410、S3C2412、S3C2416、S3C 6400、OMAP3530、AM3517。</p><h4 id="16-请简述一下DC-DC和LDO的区别。"><a href="#16-请简述一下DC-DC和LDO的区别。" class="headerlink" title="16. 请简述一下DC-DC和LDO的区别。"></a>16. 请简述一下DC-DC和LDO的区别。</h4><p>这两个都是稳压电路。<br>DC-DC通过开关斩波、电感的磁电能量转换、电容滤波实现基本平滑的电压输出。关电源输出电流大，带负载能力强，转换效率高，但因为有开关动作，会有高频辐射。<br>LDO通过调整三极管或MOS管的输入输出电压差来实现固定的电压输出，基本元件是调整管和电压参考元件，电压转换的过程是连续平滑的，电路上没有开关动作。</p><p>LDO电路的特点是<code>输出电压纹波很小，带负载能力较弱，转换效率较低</code>，但是<code>没有开关动作，没有高频辐射</code>。</p><h4 id="17-电荷泵升压电路-一般应用在什么场合？"><a href="#17-电荷泵升压电路-一般应用在什么场合？" class="headerlink" title="17. 电荷泵升压电路 一般应用在什么场合？"></a>17. 电荷泵升压电路 一般应用在什么场合？</h4><p><code>电荷泵</code>通过<code>开关对电容充放电</code>实现升压，因为电路<code>没有电感元件储能</code>，驱动能力较弱，只可以用于<code>小电流</code>场合。</p><h4 id="18-WatchDog-看门狗-的工作原理"><a href="#18-WatchDog-看门狗-的工作原理" class="headerlink" title="18. WatchDog(看门狗)的工作原理"></a>18. WatchDog(看门狗)的工作原理</h4><p>WatchDog是一种定时器。在正常操作期间，计算机会定期重置看门狗计时器，以防止其丢失或“计时”。<br>如果由于硬件故障或程序错误而导致计算机无法重置看门狗，则计时器将丢失并生成超时信号，超时信号会被用于启动一个或多个纠正措施。纠正措施通常包括将计算机系统置于安全状态并恢复系统的正常运行。</p>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> 电子器件 </tag>
            
            <tag> 模拟电路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>每日一个小技巧</title>
      <link href="/2023/10/05/%E6%AF%8F%E6%97%A5%E4%B8%80%E4%B8%AA%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
      <url>/2023/10/05/%E6%AF%8F%E6%97%A5%E4%B8%80%E4%B8%AA%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A025(Article025) --><h1 id="1-如何破解Word文档的编辑限制"><a href="#1-如何破解Word文档的编辑限制" class="headerlink" title="1. 如何破解Word文档的编辑限制"></a>1. 如何破解Word文档的编辑限制</h1><p>在Word中，文本/图片/表格内容受到保护，没有权限/密码的话无法进行编辑，需要在审阅-限制编辑-输入密码以取消保护。<br>网上流传的一些小技巧和方法都会影响到文档的一些细节格式，所以这里给出一种普适的方法以破解编辑限制。<br>Step 1 打开Word文档，另存为html/mhtml格式。<br>Step 2 打开html/mhtml文件，用记事本打开，使用Ctrl+F检索找到<code>&lt;w:UnprotectPassword&gt;</code>标签，其中就是密码的密文（加密后的十六进制格式密码），例如：5B CE CF 7A。<br>Step 3 将有编辑限制的Word文档丢到Hex编辑器中（<code>https://hexed.it</code>），搜索<code>7A CF CE 5B</code>(密文的倒序)，替换为<code>00 00 00 00</code>，并另存下载为doc文件。<br>Step 4 打开破解密码的doc文件，打开审阅-限制编辑-取消保护。<br>Step 5 此时Word文档已经破解，不再限制编辑。</p><h1 id="2-如何获取bilibili视频-直播的封面"><a href="#2-如何获取bilibili视频-直播的封面" class="headerlink" title="2. 如何获取bilibili视频/直播的封面"></a>2. 如何获取bilibili视频/直播的封面</h1><p>直接在链接的<code>bilibili</code>后面加上<code>q</code>即可，因为有大佬做了个bilibiliq的网站，输入链接即可获取封面。</p><h1 id="3-前端代码AI生成"><a href="#3-前端代码AI生成" class="headerlink" title="3. 前端代码AI生成"></a>3. 前端代码AI生成</h1><p>截图生成代码<br>【Screenshot to Code】<a href="https://github.com/abi/screenshot-to-code">https://github.com/abi/screenshot-to-code</a><br>草图生成代码<br>【draw-A-UI】<a href="https://www.draw-a-ui.com/">https://www.draw-a-ui.com/</a></p><h1 id="4-AI视频相关"><a href="#4-AI视频相关" class="headerlink" title="4. AI视频相关"></a>4. AI视频相关</h1><p>AI视频生成/修改<br>【pika】<a href="https://pika.art/login">https://pika.art/login</a><br>【pixels dance】<a href="https://makepixelsdance.github.io/">https://makepixelsdance.github.io/</a><br>无声视频AI讲解<br>【AI VoiceOver】gptv-app.vercel.app</p><h1 id="5-音乐生成"><a href="#5-音乐生成" class="headerlink" title="5. 音乐生成"></a>5. 音乐生成</h1><p>【musicfy AI】<a href="https://create.musicfy.lol/">https://create.musicfy.lol/</a></p>]]></content>
      
      
      <categories>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> AI </tag>
            
            <tag> 办公技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用开发工具捕获音视频</title>
      <link href="/2023/06/12/%E5%88%A9%E7%94%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E6%8D%95%E8%8E%B7%E9%9F%B3%E8%A7%86%E9%A2%91/"/>
      <url>/2023/06/12/%E5%88%A9%E7%94%A8%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E6%8D%95%E8%8E%B7%E9%9F%B3%E8%A7%86%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A022(Article022) --><div class="note info flat"><p>本文记录了如何捕获下载互联网上的音频/视频等资源。</p></div><h1 id="方法1-通过you-get库来下载"><a href="#方法1-通过you-get库来下载" class="headerlink" title="方法1. 通过you-get库来下载"></a>方法1. 通过you-get库来下载</h1><p>you-get是一个基于Python3的库，功能类似于“硕鼠”和“IDM”，只要在F12开发者模式下能够找到音视频图片的地址，就都能下载。</p><h2 id="准备步骤："><a href="#准备步骤：" class="headerlink" title="准备步骤："></a>准备步骤：</h2><ol><li>安装python3的环境</li><li>安装pip</li><li>使用pip安装you-get库<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install you-get</span><br></pre></td></tr></table></figure><h2 id="操作步骤："><a href="#操作步骤：" class="headerlink" title="操作步骤："></a>操作步骤：</h2></li><li>查询下载格式<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">you-get -i https://www.bilibili.com/video/BV</span><br></pre></td></tr></table></figure></li><li>开始下载<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">you-get --<span class="built_in">format</span>=(清晰度) -o 本地存放路径 -O 文件重命名名称 https://www.??????.com/??????</span><br></pre></td></tr></table></figure></li></ol><ul><li>例子：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">you-get --format=dash-flv480 -o D:\Download -O 230418 https://www.bilibili.com/video/BV</span><br></pre></td></tr></table></figure></li></ul><h1 id="方法2-通过开发工具去捕获下载"><a href="#方法2-通过开发工具去捕获下载" class="headerlink" title="方法2. 通过开发工具去捕获下载"></a>方法2. 通过开发工具去捕获下载</h1><p>这种方法或许更加通用，目前笔者已经成功利用该方法实现了某k歌平台和某瓜视频的捕获下载。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><ol><li>打开该音频视频的网页播放页面，并点击F12进入开发者模式。</li><li>点击左上角切换至移动端界面。（非必要，但建议）</li><li>点击Network菜单栏，并选中Media菜单选项，可以看见弹幕流视窗。</li><li>刷新页面并点击播放按钮使其缓存（必要时Ctrl+R）可以看见音视频元素列表。</li><li>选中并右键点击Copy—Copy link address，复制下载链接。</li><li>新建窗口并粘贴转向该链接，右下角3小点可以打开倍速/下载的渠道。</li></ol><p><img src="https://s2.loli.net/2023/07/03/btOVNJdM7awpK9c.png" alt="A022-02.png"><br><img src="https://s2.loli.net/2023/07/03/3vEzoy7nsgVrl9u.png" alt="A022-01.png"></p>]]></content>
      
      
      <categories>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 音频 </tag>
            
            <tag> 视频 </tag>
            
            <tag> 下载 </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硬件知识复习笔记1</title>
      <link href="/2023/06/12/%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0/"/>
      <url>/2023/06/12/%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A021(Article021) --><h1 id="1-与或非门"><a href="#1-与或非门" class="headerlink" title="1. 与或非门"></a>1. 与或非门</h1><p>逻辑门电路是现代电路的逻辑基础。基本的逻辑门有 <code>与或非门</code>、<code>与非、或非门</code>、<code>同或、异或门</code> 这几种。其图形表征如下图所示：<br><img src="https://s2.loli.net/2023/06/13/xd1oE4LGQy8TUjm.png" alt="A021-00.png"><br>其中，与门全为1则输出1，一假则假；或门有一个1则输出1，一真则真；非门即输出相反信号；<br>与非门即与门+非门；或非门即或门+非门；同或即相同为1；异或为不同为1。<br>通常情况下，我们会采用真值表或者逻辑函数来表达其中的逻辑。</p><p>在实际实现上，这些门电路采用了高电压和电路特性以及二极管等电子器件来实现，具体电路组成如下图所示：<br><img src="https://s2.loli.net/2023/06/13/bDdYFz2M6n47aec.jpg" alt="A021-001.jpg"></p><p>其中以<code>与门</code>举例：<br>(i)输入端全为1高电平，则二极管截止，右侧高电压直接输出1高电平。<br>(ii)输入端有一个为0低电平，则二极管单向导通，右侧输出0.7V低电压，视为0低电平。<br>其他的门电路都可以以此为例进行分析。</p><p>在现代实际使用中，一般使用<code>集成芯片</code>来搭建门电路的组合使用，因为集成电路芯片内置了数个门，方便使用且稳定。<br>具体的一些门电路集成芯片已经在图中给出。</p><h1 id="2-PN结与二极管"><a href="#2-PN结与二极管" class="headerlink" title="2. PN结与二极管"></a>2. PN结与二极管</h1><p>硅(Si)是4电子结构，故而纯硅是稳定8电子结构，不导电。<br>如果对硅进行掺杂，掺入少量磷原子(P)（5电子结构），就会有自由电子（负电），对这块硅我们叫他<code>N型半导体</code>(Negative)。<br>如果对硅进行掺杂，掺入少量硼原子(B)（3电子结构），就会有空穴 (空电子位，吸引外侧电子)（正电），对这块硅我们叫他<code>P型半导体</code>(Positive)。<br><img src="https://s2.loli.net/2023/06/12/vpYiBoPfhUjckXE.png" alt="A021-01.png"></p><p>因此，只要将N型半导体和P型半导体组合在一起，就构成了<code>二极管</code>。<br>我们给二极管通电（接上电源），就有了电场。<br>如果P端接电源正极，自由电子向空穴方向移动，从而形成电子移动，构成电流。<br>如果N端接电源正极，自由电子无法移动，从而不构成电流。<br>这就是二极管的<code>单向导通性</code><br><img src="https://s2.loli.net/2023/06/12/gyALSOf2CnMl7KN.png" alt="A021-02.png"></p><h1 id="3-三极管-BJT"><a href="#3-三极管-BJT" class="headerlink" title="3. 三极管 (BJT)"></a>3. 三极管 (BJT)</h1><p>承接上文，如果我们搭出一个N-P-N结构的PN结，再来一点点细节，就可以作为三极管BJT。<br><img src="https://s2.loli.net/2023/06/13/2IcEAzP3H8ljUYx.png" alt="A021-03.png"></p><p><code>BJT</code>, 全称<code>双极型三极管</code>，俗称<code>三极管</code>。它有3个极，分别是<code>集电极C</code>、<code>基电极B</code>、<code>发射极E</code>。<br>它属于<code>双极型晶体管</code>，人们也常常这么叫它。<br>它的工作特性是：<code>基极不通电，则电流不导通；基极通电，则电流导通</code>。</p><p>在具体的工艺实现上，NPN三块半导体的掺杂浓度、厚度都不相同。其中：<br>发射区掺杂浓度最高（自由电子多）<br>基区掺杂浓度最低、且薄（空穴少、且电子通过容易）</p><p>(i)当基极不接电源，则双向都是二极管截止，无法构成电流。<br>(ii)当基极接入电源，则引发电子移动，由于基区空穴少且薄，会有大量电子从发射区涌向集电区，形成集电极电流（三极管的输出电流）。<br>这就是三极管<code>用小电流控制大电流</code>的基本原理。</p><p>一般的三极管，它可以被分为4种状态：<code>截止状态</code>、<code>饱和状态</code>、<code>放大状态</code>、<code>击穿状态</code>。<br>具体的原理和数据如下图所示：<br><img src="https://s2.loli.net/2023/06/13/pYTBGR9bZgNVo8s.jpg" alt="A021-05.jpg"><br>【各个工作区工作的前提条件】<br>截止状态：发射结和集电结均反偏（Vc&gt;Ve&gt;Vb）（Vce=Vcc）<br>饱和状态：发射结和集电结均正偏（Vb&gt;Vc&gt;Ve）(Vce=0.?V)<br>放大状态：发射结正偏，集电极反偏(Vc&gt;Vb&gt;Ve)<br>(Tips: <code>正偏</code>就是 P 结点电势高, N 结点电势低)</p><h1 id="4-MOSFET-MOS管"><a href="#4-MOSFET-MOS管" class="headerlink" title="4. MOSFET (MOS管)"></a>4. MOSFET (MOS管)</h1><p><code>MOS</code>，全称<code>MOSFET</code>，俗称<code>场效应晶体管</code>。其本质也是由PN结的应用衍生而来。它也拥有3个电极，分别是：<code>栅极G</code>、<code>漏极D</code>、<code>源极S</code>。<br>由于其导通时只有一种极性的载流子(多子)参与导电，因此属于<code>单极型晶体管</code>。<br>它的工作特性是：<code>栅极没有电压时，则电流不导通；栅极有电压，则电流导通</code>。<br><img src="https://s2.loli.net/2023/06/13/rXY2PGxiSl6oqfd.jpg" alt="A021-06.jpg"><br>MOS管一般不会用来作为放大信号的器件，但是和BJT一样，可以作为<code>电子开关</code>。</p><h1 id="5-IGBT"><a href="#5-IGBT" class="headerlink" title="5. IGBT"></a>5. IGBT</h1><p><code>IGBT</code>, 全称为<code>绝缘栅极晶体管</code>。它<code>由BJT和MOS复合组成</code>，本质也是一个电子开关。<br>IGBT相较于BJT和MOS，他的优势是<code>可耐受的电压很高</code>，因此<code>功率高</code>，且<code>开关频率也很棒</code>。（参考数据：6500V、3600A、上万次开关/秒）<br>它有3个极，分别是<code>栅极G</code>、<code>集电极C</code>、<code>发射极E</code>。<br>它的工作特性是：<code>给栅极高电平则导通；给栅极低电平则截止</code>。<br><img src="https://s2.loli.net/2023/06/13/59mQgC7DJkPueIz.png" alt="A021-07.png"></p><p>IGBT的结构结合了MOS的低驱动电流（MOS是用了绝缘层，IGBT是用了电容）和BJT低导通电阻（三极管导通时低电阻，IGBT利用了这一点）的优势。<br>IGBT的主要应用有：高压直流电转为交流电（逆变器组件之一）、变频（PWM?）<br>涉及工业领域有：新能源汽车、太阳能、工业自动化等。<br>目前，IGBT基本作为模块组件出现，模块中还有散热器、续流二极管等。有些模块集成了一坨IGBT，还提供了相应的保护电路。</p><h1 id="6-示波器"><a href="#6-示波器" class="headerlink" title="6. 示波器"></a>6. 示波器</h1><p><img src="https://s2.loli.net/2023/06/15/A9so8teamfGxqBC.png" alt="A021-08-示波器.png"></p><h1 id="7-开关电源电路"><a href="#7-开关电源电路" class="headerlink" title="7. 开关电源电路"></a>7. 开关电源电路</h1><p>常见的开关电源电路有：Buck、Boost、LLC、全桥、正激、反激等。</p><h2 id="7-1-串联分压-线性降压电路"><a href="#7-1-串联分压-线性降压电路" class="headerlink" title="7.1 串联分压-线性降压电路"></a>7.1 串联分压-线性降压电路</h2><p>降压，如果是交流电（AC），一般就会采用变压器（线圈）来实现；如果是直流电（DC），一般就会采用包含二极管的复杂电路来实现。<br>如下图所示，是一个简单的<code>线性降压电路</code>（12V—&gt;5V）</p><p><img src="https://s2.loli.net/2023/09/22/TOryvLHc5pASfDx.png" alt="A021-07-01.png"><br>【电路分析】<br>其中使用了同相放大器来进行负反馈控制，从而稳住输出电压；<br>左侧是一个稳压管结构，用来稳住输入电压至3.3V，防止输入电压过高导致二极管烧坏；<br>因此同相放大器的参考电压Vf=3.3V。<br>输入电压12V，输出电压5V，7V由二极管承担，此时二极管在线性放大区间。<br>因此，当同相放大器的输出电压增大时，三极管的输出电流也增加，<br>当同相放大器的输出电压减小时，三极管的输出电流也减小。</p><p><img src="https://s2.loli.net/2023/09/22/bcyQVW2aRnlzpxZ.jpg" alt="A021-07-01-2.jpg"><br>【原理分析】</p><ol><li>输入电压 / 负载变化，导致输出电压 &gt; 5V，分压后Vs &gt; Vf，放大器 Ub 变小，三极管输出电流变小，输出电压下降到5V。</li><li>同理，输出电压 &lt; 5V，分压后Vs &lt; Vf，放大器 Ub 变大，三极管输出电流变大，输出电压上升到5V。<br>因此利用了三极管的放大性能，实现了降压稳压的需求。<br>构造的线性稳压电源有以下优缺点：输出纹波小、外围电子元件少、效率低（浪费7V&amp;发烫）</li></ol><h2 id="7-2-开关电源-DC降压稳压电路（Buck电路）"><a href="#7-2-开关电源-DC降压稳压电路（Buck电路）" class="headerlink" title="7.2 开关电源-DC降压稳压电路（Buck电路）"></a>7.2 开关电源-DC降压稳压电路（Buck电路）</h2><blockquote><p>由于上文中利用串联分压的原理来制作<code>降压稳压电路</code>过于浪费。因此诞生了另一套<code>开关电源</code>的方案——通过不停地开关电源，可以实现降压（利用PWM），如下图所示，是一个常见的开关电源-降压稳压电路原型（Buck电路）。</p></blockquote><p><img src="https://s2.loli.net/2023/10/08/gRUQq9e8mTwrby6.jpg" alt="A021-07-02开关电源-降压稳压电路.jpg"></p><ul><li>通过快速的开关，控制开关的频率（类似控制占空比），再利用电感的抗电压作用，以及电容的储能/滤波作用，可以生成一段低于额定电源电压的<code>低压波动波形</code>。<br>（Tips：如果没有电容，则波形会变得很尖锐/直直的折线。）</li><li>为了避免开关损耗，通常选用<code>IGBT</code>来作为开关控制（一秒上万次开关）。<blockquote><p>例如：12V—&gt;5V, 5/12=42%, 因此需要控制开关在一个周期时间中42%的时间是闭合的。</p></blockquote></li></ul><h2 id="7-3-开关电源-DC升压稳压电路（Boost电路）"><a href="#7-3-开关电源-DC升压稳压电路（Boost电路）" class="headerlink" title="7.3 开关电源-DC升压稳压电路（Boost电路）"></a>7.3 开关电源-DC升压稳压电路（Boost电路）</h2><blockquote><p>上文中，对开关电源-DC降压稳压电路进行了分析，那么对于<code>升压</code>的电路，是否也可以使用<code>开关电源</code>来实现呢？</p></blockquote><p>如果是AC（交流电），可以采用变压器（线圈）实现，但如果是直流DC的话，也可以采用<code>开关电源</code>来实现升压，如下图所示，是一个开关电源-升压稳压电路原型（Boost电路）。<br><img src="https://s2.loli.net/2023/10/08/AKtuX7kzQDHjcse.jpg" alt="A021-07-03.jpg"></p><p><code>Boost</code>电路的原理是：<br>开关断开—&gt;负载阻抗变大—&gt;电感电流减少—&gt;电感产生感应电压—&gt;与电源电压同相串联—&gt;从而实现增压。<br>开关闭合—&gt;电感电流迅速增大—&gt;电感产生反相感应电压—&gt;但由于二极管单向导通截止—&gt;负载供电全部依赖电容。</p><p><code>Boost</code>电路的占空比计算：<br>把5V升压到12V, 即12=5/(1-D), D=7/12, 即7个时间单位内闭合，5个时间单位内断开。<br>(Tips: 功率是不变的，因此电压上升N倍，电流就下降N倍。)</p><h2 id="7-4-开关电源-DC升降压电路（Buck-Boost电路）"><a href="#7-4-开关电源-DC升降压电路（Buck-Boost电路）" class="headerlink" title="7.4 开关电源-DC升降压电路（Buck-Boost电路）"></a>7.4 开关电源-DC升降压电路（Buck-Boost电路）</h2><blockquote><p>通过上文中对Buck电路和Boost电路的介绍，我们可以猜测——能否通过1台设备来同时实现升压&amp;降压的功能？Yes, 下图就是<code>Buck-Boost升压降压变换器</code>的电路图。</p></blockquote><p>（本质就是把Buck电路和Boost电路进行级联）<br><img src="https://s2.loli.net/2023/10/09/8EtdR5KwQgDyVIi.png" alt="A021-07-04.png"></p><p>【原理分析】<br>过程：开关闭合—&gt;二极管反偏—&gt;电源接电感，励磁—&gt;电感电流变大—&gt;过了一段时间，开关断开—&gt;电感电流下降—&gt;二极管正向导通。<br>总结：由于上升电流=下降电流，因此电压转换比Vo/Vi=d/(1-d), 其中d为占空比。通过控制开关闭合断开的占空比（0~1），DC电压会从降压—&gt;升压。</p><h2 id="7-5-反激电源电路（flyback电路）"><a href="#7-5-反激电源电路（flyback电路）" class="headerlink" title="7.5 反激电源电路（flyback电路）"></a>7.5 反激电源电路（flyback电路）</h2><blockquote><p>手机充电器如何将AC220V转换为DC5V？</p></blockquote><h3 id="7-5-1-传统AC-DC降压变换电路"><a href="#7-5-1-传统AC-DC降压变换电路" class="headerlink" title="7.5.1 传统AC-DC降压变换电路"></a>7.5.1 传统AC-DC降压变换电路</h3><p>传统AC-DC降压变换器，需要经历<code>变压</code>-<code>整流</code>-<code>滤波</code>-<code>降压稳压</code>四个环节的处理。具体介绍如下：<br><img src="https://s2.loli.net/2023/10/09/n3SxMaqCZud6cDT.jpg" alt="A021-07-05-1-初代AC-DC变换器.jpg"><br>这种电路设计的缺点：1. 功率密度低 2. 发热严重 3. 重量过重</p><h3 id="7-5-2-开关电源-AC-DC降压变换电路（反激电源电路flyback）"><a href="#7-5-2-开关电源-AC-DC降压变换电路（反激电源电路flyback）" class="headerlink" title="7.5.2 开关电源-AC-DC降压变换电路（反激电源电路flyback）"></a>7.5.2 开关电源-AC-DC降压变换电路（反激电源电路flyback）</h3><p>利用了开关电源的AC-DC降压变换电路比较复杂，需要经历<code>整流</code>-<code>滤波</code>-<code>逆变</code>-<code>变压</code>-<code>整流</code>五个环节的处理，实现<code>AC-DC-AC-DC</code>的过程。<br><img src="https://s2.loli.net/2023/10/09/e7PWVDh2YJ6EfiF.png" alt="A021-07-05-2反激电源电路原理图.png"><br>优点：</p><ul><li><code>AC-DC-AC</code>后，通过提升AC的频率（220V20Hz—&gt;65Hz）,从而可以使用更小的变压器。</li><li><code>AC-DC</code>后，DC经过开关电源，呈现为受控方波，通过反馈调节开关电源的占空比，实现稳定的输出电压，就不需要稳压器了。<br>缺点：大功率时效率较低。<br>（Tips: 其实反激电路仅仅指<code>AC-DC-AC-DC</code>中的<code>DC-AC-DC</code>这一部分。）</li></ul><h1 id="8-逆变器"><a href="#8-逆变器" class="headerlink" title="8. 逆变器"></a>8. 逆变器</h1><blockquote><p>逆变器(Inverter)：DC—&gt;AC</p></blockquote><p>应用场景：不间断电源、电力器件的控制、有源滤波</p><h2 id="8-1-逆变器的工作原理"><a href="#8-1-逆变器的工作原理" class="headerlink" title="8.1 逆变器的工作原理"></a>8.1 逆变器的工作原理</h2><p>就如交流转直流使用的整流桥一样，<code>H桥电路</code>可以将直流电转换为交流电。其电路拓扑如下：<br><img src="https://s2.loli.net/2023/10/31/L6HmDkRiAxFb8ph.jpg" alt="A021-08-01-H桥方波逆变器与PWM.jpg"><br>其中，四个开关在这里采用了IGBT进行开断，控制开断一般由Arduino等单片机进行控制。<br>通过控制开关频率的变化，用<code>PWM脉宽调制</code>的方法，就可以实现<code>类正弦波</code>的输出。</p><p>一些保护设计的细节：</p><ol><li>为防止切换时产生的感应电流破坏IGBT，通常会用<code>二极管</code>与IGBT并联以保护IGBT。</li><li>为防止负载端产生的交流电反向破坏IGBT，通常会用<code>二极管</code>与IGBT并联以保护IGBT。</li><li>为防止IGBT在切换时产生的直流电压波动破坏直流电池，通常会用<code>电容</code>与直流电源并联以保护直流电池。</li><li>为平滑输出的PWM电压曲线，通常会用<code>电容</code>与负载并联以实现正弦化平滑稳压。</li></ol><p>下面就是一张三相逆变器与保护设计的电路原理图：<br><img src="https://s2.loli.net/2023/10/31/bYHmGiwPX8dzrug.png" alt="A021-08-02-三相逆变器与保护设计.png"></p><h1 id="10-更多小知识点"><a href="#10-更多小知识点" class="headerlink" title="10. 更多小知识点"></a>10. 更多小知识点</h1><h2 id="10-1-什么是晶体管？"><a href="#10-1-什么是晶体管？" class="headerlink" title="10.1 什么是晶体管？"></a>10.1 什么是晶体管？</h2><p><code>晶体管</code>，是半导体器件的总称，其包括了二极管、BJT(双极结型晶体三极管)、MOS(绝缘栅型场效应管)、IGBT(绝缘栅双极型晶体管)、晶闸管(可控硅)等。</p><h2 id="10-2-交直流电转换如何实现？"><a href="#10-2-交直流电转换如何实现？" class="headerlink" title="10.2 交直流电转换如何实现？"></a>10.2 交直流电转换如何实现？</h2><p>交流电—&gt;直流电：<code>整流</code>+<code>滤波</code>（串联二极管：<code>半波整流</code>；采用4个二极管串联构成的<code>整流桥</code>：<code>全波整流（桥式）</code>；再加个电容：直流电（脉动））</p><p>直流电—&gt;交流电：<code>逆变器</code>（使用写入了c程序的芯片去控制<code>电子开关（晶体管，比如功率MOS管、IGBT）</code>，让电路不停地开关：方波交流电；增加开关次数并调整频率：伪正弦交流电；加个电容：正弦交流电）</p><h2 id="10-3-TTL和CMOS有什么区别？"><a href="#10-3-TTL和CMOS有什么区别？" class="headerlink" title="10.3 TTL和CMOS有什么区别？"></a>10.3 TTL和CMOS有什么区别？</h2><p>现在的芯片很多都是基于TTL和CMOS的，尤其CMOS非常多。<br>TTL内部采用了三极管；CMOS内部采用了N/P型MOS管。</p><h2 id="10-4-晶振是什么？"><a href="#10-4-晶振是什么？" class="headerlink" title="10.4 晶振是什么？"></a>10.4 晶振是什么？</h2><p><code>晶振</code>是一种广泛应用于电子设备的元器件。主要作用是<code>产生高精度、稳定的时钟信号</code>。<br>晶振的提供的时钟频率越高，那单片机的运行速度也就越快。</p><h2 id="10-5-齐纳击穿和雪崩击穿的区别？"><a href="#10-5-齐纳击穿和雪崩击穿的区别？" class="headerlink" title="10.5 齐纳击穿和雪崩击穿的区别？"></a>10.5 齐纳击穿和雪崩击穿的区别？</h2><blockquote><p><code>齐纳击穿</code>和<code>雪崩击穿</code>都是一种电子击穿现象。</p></blockquote><p><code>齐纳击穿</code>在齐纳二极管中发生，通常是由于<code>高电场下电子飞跃</code>而引起的。(击穿电压: 2V-200V)<br><code>雪崩击穿</code>发生在普通二极管、MOSFET等半导体器件中，是由于<code>电子与原子碰撞</code>而获得能量，伴随着<code>递增的电流</code>和<code>温升</code>。(击穿电压: 数百-数千V)</p>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> 电子器件 </tag>
            
            <tag> 模拟电路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue框架的使用笔记</title>
      <link href="/2023/06/07/Vue%E6%A1%86%E6%9E%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/06/07/Vue%E6%A1%86%E6%9E%B6%E7%9A%84%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A016(Article016) --><!-- 视频号码：BV1Rs4y127j8 --><h1 id="1-Vue框架简介"><a href="#1-Vue框架简介" class="headerlink" title="1. Vue框架简介"></a>1. Vue框架简介</h1><p><code>Vue.js</code>是一套用于前端构建用户界面的<code>渐进式框架</code>。<br>什么是框架？<code>框架</code>是一套封装了多个功能开发套件的代码包，是一种简单、高效的工具箱。<br>Vue官网：vuejs.org<br>中文官方手册：<a href="https://cn.vuejs.org/guide/introduction.html">https://cn.vuejs.org/guide/introduction.html</a><br>Vue API有两种风格：选项式API（Vue2）;组合式API（Vue3）</p><h1 id="2-创建vue项目"><a href="#2-创建vue项目" class="headerlink" title="2. 创建vue项目"></a>2. 创建vue项目</h1><p>首先创建一个项目文件夹，VScode中打开该文件夹，新建一个终端，并</p><h2 id="2-1-输入初始化vue脚手架指令"><a href="#2-1-输入初始化vue脚手架指令" class="headerlink" title="2.1 输入初始化vue脚手架指令"></a>2.1 输入初始化vue脚手架指令</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init vue@latest</span><br></pre></td></tr></table></figure><p>这一指令会执行创建vue项目, 并弹出一堆可选功能的选项如下。<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Need to install the following packages:</span><br><span class="line">  create-vue@3.7.2</span><br><span class="line">Ok to proceed? (y) y                                //确认创建的vue版本</span><br><span class="line"></span><br><span class="line">Vue.js - The Progressive JavaScript Framework</span><br><span class="line"></span><br><span class="line">√ Project name: ... vue001                          //输入项目名称，不能有大写</span><br><span class="line">√ Add TypeScript? ... No / Yes                      //这里有关TypeScript</span><br><span class="line">√ Add JSX Support? ... No / Yes                     //这里有关React</span><br><span class="line">√ Add Vue Router for Single Page Application development? ... No / Yes      //这里有关路由</span><br><span class="line">√ Add Pinia for state management? ... No / Yes      //这里有关Pinia状态管理</span><br><span class="line">√ Add Vitest for Unit Testing? ... No / Yes         //以下是一些测试文件的功能支持</span><br><span class="line">√ Add an End-to-End Testing Solution? » No</span><br><span class="line">√ Add ESLint for code quality? ... No / Yes</span><br><span class="line"></span><br><span class="line">Scaffolding project in C:\Users\63015\Desktop\前端笔记\07-vueproject\vue001...</span><br><span class="line"></span><br><span class="line">Done. Now run:</span><br><span class="line"></span><br><span class="line">  cd vue001             //打开项目文件夹</span><br><span class="line">  npm install           //安装项目依赖</span><br><span class="line">  npm run dev           //运行项目</span><br></pre></td></tr></table></figure></p><h2 id="2-2-启动vue项目三连"><a href="#2-2-启动vue项目三连" class="headerlink" title="2.2 启动vue项目三连"></a>2.2 启动vue项目三连</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\63015\Desktop\前端笔记\07-vueproject&gt; cd vue001             //打开项目文件夹</span><br><span class="line">PS C:\Users\63015\Desktop\前端笔记\07-vueproject\vue001&gt; npm install    //安装项目依赖（装过了就不用再装）</span><br><span class="line"></span><br><span class="line">added 25 packages in 8s</span><br><span class="line">PS C:\Users\63015\Desktop\前端笔记\07-vueproject\vue001&gt; npm run dev    //运行项目(重要)</span><br><span class="line"></span><br><span class="line">&gt; vue001@0.0.0 dev</span><br><span class="line">&gt; vite                                                                 //这里可以看到脚手架用的是vite</span><br><span class="line"></span><br><span class="line">  VITE v4.4.7  ready in 429 ms</span><br><span class="line"></span><br><span class="line">  ➜  Local:   http://localhost:5173/                                   //或者是127.0.0.1:5173</span><br><span class="line">  ➜  Network: use --host to expose</span><br><span class="line">  ➜  press h to show help</span><br></pre></td></tr></table></figure><h2 id="2-3-开发环境"><a href="#2-3-开发环境" class="headerlink" title="2.3 开发环境"></a>2.3 开发环境</h2><p>采用<code>VSCode + Volar扩展插件</code></p><h2 id="2-4-Vue项目的目录结构"><a href="#2-4-Vue项目的目录结构" class="headerlink" title="2.4 Vue项目的目录结构"></a>2.4 Vue项目的目录结构</h2><p>在新建终端使用<code>tree</code>指令，我们可以得到vue项目的目录树，其中一级目录下的资源文件与文件夹有：<br><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.vscode         //vscode工具的配置文件夹（删除了也不会影响项目本身的运行）</span><br><span class="line">node_modules    //vue项目的运行依赖文件夹（npm install指令安装的vue依赖）</span><br><span class="line">public          //资源文件夹（存放浏览器图标等资源）</span><br><span class="line">src             //源码文件夹（写的代码都在这里）</span><br><span class="line">.gitignore      //Git的忽略文件（Git用）</span><br><span class="line">index.html      //HTML入口文件（基底）</span><br><span class="line">package.json    //信息描述文件（项目名称、版本、运行脚手架、依赖等）</span><br><span class="line">readme.md       //注释文件（写啥都行）</span><br><span class="line">vite.config.js  //vue配置文件（跨域、打包等配置）</span><br></pre></td></tr></table></figure><br>看完vue项目的目录结构，我们得知src是主要的编写区域，其中<code>components</code>文件夹中存放了一些基础的vue代码，会被src目录下的<code>App.vue</code>主文件调用，所以一开始我们的代码都是存在App.vue这个文件内。<br>App.vue中最基础结构如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="comment">//此处存放标签组件</span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//此处编写js代码</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>然后，打开本地端口5173就可以看到渲染后的窗口了。</p><h2 id="2-5-components调用"><a href="#2-5-components调用" class="headerlink" title="2.5 components调用"></a>2.5 components调用</h2><p>承接上文记录，<code>App.vue</code>是我们的主代码，<code>components</code>文件夹中存放的是我们自己添加自定义的子代码。那么如何在主代码中调用呢？<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//此段在App.vue内</span></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">    <span class="comment">//此处调用components</span></span><br><span class="line">    <span class="keyword">import</span> <span class="title class_">Helloworld</span> <span class="keyword">from</span> <span class="string">&#x27;./components/HelloWorld.vue&#x27;</span></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    //此处渲染components</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Helloworld</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br></pre></td></tr></table></figure><br>如此一来，就形成了树状结构。</p><h1 id="3-Vue模板语法"><a href="#3-Vue模板语法" class="headerlink" title="3. Vue模板语法"></a>3. Vue模板语法</h1><p>vue使用的是一种<code>基于HTML的模板语法</code>，该语法的特点：通过<code>声明方式</code>将组件的实例数据绑定到DOM上。<br>个人理解：我在js中通过声明一堆属性和数据，然后属性和数据自己就跑到DOM上。<br><strong>最终实现的是只修改js部分也可以干涉H5以变更页面显示。</strong><br>以下就是一些常见的模板语法：</p><h2 id="3-1-文本插值-Mustache写法"><a href="#3-1-文本插值-Mustache写法" class="headerlink" title="3.1 文本插值 (Mustache写法)"></a>3.1 文本插值 (Mustache写法)</h2><p>我在js中写的文字，可以传到html的标签中，从而显示。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">msg</span>:<span class="string">&quot;文本信息&quot;</span>      <span class="comment">//直接添加键值对</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>这种语法叫做“双括号语法/大胡子语法/Mustache语法”</p><h2 id="3-2-JS表达式"><a href="#3-2-JS表达式" class="headerlink" title="3.2 JS表达式"></a>3.2 JS表达式</h2><p>在<code>&#123;&#123;  &#125;&#125;</code>中，我们也可以使用一些简单的js表达式，对传入数据进行微调表达。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; number + 1 &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>                             &#123;<span class="comment">/* 直接使用js表达式,显示为11 */</span>&#125;</span><br><span class="line">    &lt;p&gt;&#123;&#123; ok? <span class="string">&#x27;Yes&#x27;</span> : <span class="string">&#x27;No&#x27;</span> &#125;&#125;&lt;<span class="regexp">/p&gt;                       &#123;/</span>* 三元运算符也可以用，显示为<span class="title class_">Yes</span> */&#125;</span><br><span class="line">    &lt;p&gt;&#123;&#123; message.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>) &#125;&#125;&lt;<span class="regexp">/p&gt;   &#123;/</span>* 对字符串进行空字符切割、翻转、合并，显示为“息信本文” */&#125;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">number</span>:<span class="number">10</span>,         <span class="comment">//直接添加键值对,注意多组需要加逗号。</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">ok</span>: <span class="literal">true</span>,          </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">message</span>:<span class="string">&quot;文本信息&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>在这里，return后面可以跟这些变量/对象，但不可以跟逻辑语句/非单一表达式。因此，在<code>&#123;&#123;  &#125;&#125;</code>中最好不要放逻辑语句，应当尽量在js中进行逻辑处理后，直接把结果丢给template。</p><h2 id="3-3-原始HTML插值-v-html"><a href="#3-3-原始HTML插值-v-html" class="headerlink" title="3.3 原始HTML插值 (v-html)"></a>3.3 原始HTML插值 (v-html)</h2><p>上面的文本插值只能将键值后的数据直接传给标签，并不能支持原生HTML的写法，因此需要使用<code>v-html</code>标签属性（<code>指令</code>）来引入含有HTML写法的数据。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-html</span>=<span class="string">&quot;rawHtml&quot;</span>&gt;</span>  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">rawHtml</span>:<span class="string">&quot;&lt;a href=&#x27;#&#x27;&gt;XX网页&lt;/a&gt;&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="3-4-属性绑定-v-bind"><a href="#3-4-属性绑定-v-bind" class="headerlink" title="3.4 属性绑定 (v-bind:)"></a>3.4 属性绑定 (v-bind:)</h2><p>除了上文中的文本信息可以绑定，标签的一些其他属性也可以进行绑定，需要用到<code>v-bind</code>指令来引入标签的style属性/选择器。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;msg&quot;</span>&gt;</span> 这里是p标签（调用了类选择器） <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;msgID&quot;</span>&gt;</span> 这里是p标签（调用了id选择器） <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">msg</span>:<span class="string">&quot;active&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">msgID</span>:<span class="string">&quot;activeID&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>但如果绑定的组件的键值为Null/Undefined，则会忽略这次调用。<br>且由于<code>v-bind</code>指令十分常用，故而可以直接用冒号进行简写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div :id=<span class="string">&quot;dyanmicId&quot;</span> :<span class="keyword">class</span>=<span class="string">&quot;dynamicClass&quot;</span>&gt;  &lt;/div&gt;</span><br><span class="line"><span class="comment">//其中dyanmicId, dynamicClass是我们自定义的键值</span></span><br></pre></td></tr></table></figure><h3 id="3-4-1-小案例：属性绑定布尔值，调用开关"><a href="#3-4-1-小案例：属性绑定布尔值，调用开关" class="headerlink" title="3.4.1 小案例：属性绑定布尔值，调用开关"></a>3.4.1 小案例：属性绑定布尔值，调用开关</h3><p>属性绑定有一种应用，即是调用布尔值控制按钮的启用/禁用。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">:disabled</span>=<span class="string">&quot;isButtonDisabled&quot;</span>&gt;</span> 这里是按钮 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">isButtonDisabled</span>:<span class="literal">true</span>   <span class="comment">//这里设置了true，经过属性绑定会启用该按钮</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="3-4-2-小案例：属性绑定多个值"><a href="#3-4-2-小案例：属性绑定多个值" class="headerlink" title="3.4.2 小案例：属性绑定多个值"></a>3.4.2 小案例：属性绑定多个值</h3><p>一次次属性绑定会很繁琐，一次性绑定对象的多个值会更为方便。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind</span>=<span class="string">&quot;objectOfAttrs&quot;</span>&gt;</span> 测试组件 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>    <span class="comment">//使用v-bind属性绑定</span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">objectOfAttrs</span>:&#123;                         <span class="comment">//新建一个键值对象</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">id</span>:<span class="string">&quot;appcId&quot;</span>                         <span class="comment">//写上要绑定的选择器</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="attr">class</span>:<span class="string">&quot;appclass&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="4-条件渲染"><a href="#4-条件渲染" class="headerlink" title="4. 条件渲染"></a>4. 条件渲染</h1><p>在vue中，有提供<code>条件渲染</code>的功能，相关的条件语句如下：</p><ul><li>v-if</li><li>v-else</li><li>v-else-if</li><li>v-show</li></ul><h2 id="4-1-v-if-单分支"><a href="#4-1-v-if-单分支" class="headerlink" title="4.1 v-if (单分支)"></a>4.1 v-if (单分支)</h2><p><code>v-if</code>用于条件渲染，当表达式为真时，会渲染一块内容。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;flag&quot;</span>&gt;</span> 测试条件渲染 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">flag</span>:<span class="literal">true</span>           <span class="comment">//这里给true，递给v-if的flag，使得div成功渲染</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="4-2-v-else-双分支"><a href="#4-2-v-else-双分支" class="headerlink" title="4.2 v-else (双分支)"></a>4.2 v-else (双分支)</h2><p><code>v-else</code>是和<code>v-if</code>相对应的条件渲染指令。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;flag&quot;</span>&gt;</span> 测试条件渲染A（为真显示这个） <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span> 测试条件渲染B（否则显示这个） <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">flag</span>:<span class="literal">true</span>           <span class="comment">//若为true，递给v-if的flag，使得A成功渲染；若为false，则使得B成功渲染。</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="4-3-v-else-if-多分支"><a href="#4-3-v-else-if-多分支" class="headerlink" title="4.3 v-else-if (多分支)"></a>4.3 v-else-if (多分支)</h2><p><code>v-else-if</code>是一个组合的多分支条件渲染的条件渲染指令。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;type === &#x27;A&#x27;&quot;</span>&gt;</span> 标签A <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;B&#x27;&quot;</span>&gt;</span> 标签B <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type === &#x27;C&#x27;&quot;</span>&gt;</span> 标签C <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span> 不是标签A/B/C <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">type</span>:<span class="string">&quot;D&quot;</span>    <span class="comment">//这里给type递一个D，送到上面去做多分枝判断，条件渲染。</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="4-4-v-show-单分支"><a href="#4-4-v-show-单分支" class="headerlink" title="4.4 v-show (单分支)"></a>4.4 v-show (单分支)</h2><p><code>v-show</code>与<code>v-if</code>相似，都是单分支的条件判断渲染，用法与<code>v-if</code>一样。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;flag&quot;</span>&gt;</span> 测试条件渲染 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">flag</span>:<span class="literal">true</span>           <span class="comment">//这里给true，递给v-show的flag，使得div成功渲染</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>但是，<code>v-if</code>是每次都进行了条件判断后再渲染与否，事件监听和子组件都会销毁重建（真实且惰性）；而<code>v-show</code>其实本身早就渲染，只是切换了css的display属性。两者各有妙用。</p><p>【总结】<br><code>v-if</code>的切换开销大，如果条件很少变动，则<code>v-if</code>更合适。<br><code>v-show</code>初始开销相对较大，如果条件频繁切换，则<code>v-show</code>更合适。</p><h1 id="5-列表渲染-v-for"><a href="#5-列表渲染-v-for" class="headerlink" title="5. 列表渲染 (v-for)"></a>5. 列表渲染 (v-for)</h1><p>在vue中，我们还可以使用<code>v-for</code>指令和<code>item in items</code>写法来基于一个数组来渲染一个列表。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;item in names&quot;</span>&gt;</span> &#123;&#123; item &#125;&#125; <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">names</span>:[<span class="string">&quot;元素1&quot;</span>,<span class="string">&quot;元素2&quot;</span>,<span class="string">&quot;元素3&quot;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>其中，<code>v-for</code>是指令，<code>item in items</code>是指令值，<code>item</code>是迭代项的别名（自定义，一般不改），<code>items</code>是源数据的数组名（键值名）</p><h2 id="5-1-小案例：复杂数据列表渲染"><a href="#5-1-小案例：复杂数据列表渲染" class="headerlink" title="5.1 小案例：复杂数据列表渲染"></a>5.1 小案例：复杂数据列表渲染</h2><p>在一个项目中，要渲染的源数据通常来源于<code>网络请求</code>，就是<code>json</code>格式。<br>下面会给出一个复杂数据的列表渲染-小型案例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;item in result&quot;</span>&gt;</span>            //外div标签使用v-for</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span>&gt;</span> &#123;&#123; item.title &#125;&#125; <span class="tag">&lt;/<span class="name">p</span>&gt;</span>           //内部调用各个迭代项的title</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.avator&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span>     //内部调用各个迭代项的avator</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">result</span>:[</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;id&quot;</span>:<span class="number">123456</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;title&quot;</span>:<span class="string">&quot;阿巴阿巴阿巴&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;avator&quot;</span>:<span class="string">&quot;随便一个图床地址&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;,                              <span class="comment">//result数组中的元素1</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;id&quot;</span>:<span class="number">123457</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;title&quot;</span>:<span class="string">&quot;阿巴阿巴阿布&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;avator&quot;</span>:<span class="string">&quot;随便一个图床地址&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            ]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>另外，其中的<code>item in items</code>写法中的<code>in</code>也可以用<code>of</code>替代，写作<code>item of items</code>，即：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-<span class="keyword">for</span>=<span class="string">&quot;item of result&quot;</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="5-2-v-for的位置索引-item-index"><a href="#5-2-v-for的位置索引-item-index" class="headerlink" title="5.2 v-for的位置索引(item,index)"></a>5.2 v-for的位置索引(item,index)</h2><p>此外，<code>v-for</code>也支持对于迭代项的<code>位置索引</code>。即对于每一个迭代项，除了读出它的内容，还可以读出它的序号（index）。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in Arry&quot;</span>&gt;</span> &#123;&#123; index &#125;&#125;:&#123;&#123; item &#125;&#125; <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line">...js部分省略...</span><br></pre></td></tr></table></figure><h2 id="5-3-v-for遍历对象属性-item-key-index"><a href="#5-3-v-for遍历对象属性-item-key-index" class="headerlink" title="5.3 v-for遍历对象属性(item,key,index)"></a>5.3 v-for遍历对象属性(item,key,index)</h2><p>因此，<code>v-for</code>也支持对对象进行遍历。除了数据遍历调出、位置序号调出，也可以调出属性键值。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        //遍历数组，将数组中的属性值一个个调出渲染。</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;item in userInfo&quot;</span>&gt;</span> &#123;&#123;item&#125;&#125; <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        //遍历数组，将数组中的属性值(123456)-属性键值(id)-位置索引序列号(0)一个个调出渲染。</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,key,index) in userInfo&quot;</span>&gt;</span> &#123;&#123;item&#125;&#125;-&#123;&#123;key&#125;&#125;-&#123;&#123;index&#125;&#125; <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">userInfo</span>:[</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;id&quot;</span>:<span class="number">123456</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;title&quot;</span>:<span class="string">&quot;阿巴阿巴阿巴&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;avator&quot;</span>:<span class="string">&quot;随便一个图床地址&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;,                              <span class="comment">//数组中的元素1</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;id&quot;</span>:<span class="number">123457</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;title&quot;</span>:<span class="string">&quot;阿巴阿巴阿布&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;avator&quot;</span>:<span class="string">&quot;随便一个图床地址&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            ]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="5-4-对key-数据标识节点-的管理"><a href="#5-4-对key-数据标识节点-的管理" class="headerlink" title="5.4 对key(数据标识节点)的管理"></a>5.4 对key(数据标识节点)的管理</h2><p>继上一节中的内容，对于一个对象中的一条数据：<code>&quot;id&quot;:123456</code>，</p><ul><li>其中<code>123456</code>是属性的值，数据的内容，通常在<code>v-for</code>中使用<code>value/item</code>来调用。</li><li>其中<code>id</code>是属性的键值，属性的名称，通常在<code>v-for</code>中使用<code>key</code>来调用。</li><li>以外，该数据在数组中的次序号码，下标，通常在<code>v-for</code>中使用<code>index</code>来调用。</li></ul><p><strong>但</strong>这一节中，我们主要关注<strong>另一个</strong><code>key</code>，也就是<code>key attribute</code>，（数据节点标记）的管理。<br>与<code>(item,key,index)</code>中的<code>key</code>属性键值不同，这里的<code>key</code><strong>不是</strong>指每条数据的属性的名称，而是对数据库中遍历时的每条数据的一个独一无二的编号，是一个属性（类似python的for-v-k）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p v-<span class="keyword">for</span>=<span class="string">&quot;(item,index) in names&quot;</span> :key=<span class="string">&quot;index&quot;</span>&gt; &#123;&#123; item &#125;&#125; &lt;/p&gt;</span><br></pre></td></tr></table></figure><p>这里的<code>key</code>是一个通过<code>v-bind</code>绑定的特殊属性；<br>一般情况下，每一个<code>v-for</code>都需要一个<code>key</code>，用于在遍历索引中识别。<br>例如：如果数据库中每条数据都有id属性，也可以这么指定key——<code>:key=&quot;item.id&quot;</code>，这样每条数据的id属性就作为key属性存在了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;item in Arry&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; item.title &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">:src</span>=<span class="string">&quot;item.avator&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title class_">Arry</span>:[</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;id&quot;</span>:<span class="number">123456</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;title&quot;</span>:<span class="string">&quot;阿巴阿巴阿巴&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;avator&quot;</span>:<span class="string">&quot;随便一个图床地址&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;id&quot;</span>:<span class="number">123457</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;title&quot;</span>:<span class="string">&quot;阿巴阿巴阿布&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="string">&quot;avator&quot;</span>:<span class="string">&quot;随便一个图床地址&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            ]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="6-事件处理"><a href="#6-事件处理" class="headerlink" title="6. 事件处理 (@)"></a>6. 事件处理 (@)</h1><p>在vue中，可以用<code>v-on</code>指令（简写为<code>@</code>）来监听DOM事件，并于事件触发时执行对应的js，基本语法如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;button v-<span class="attr">on</span>:click=<span class="string">&quot;methodName&quot;</span>&gt; 我是按钮，点击触发methodName &lt;/button&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handler&quot;</span>&gt;</span> 我是按钮，点击触发handler <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>其中，<code>methodName</code>和<code>handler</code>这俩所在的位置即是<code>事件处理器的值</code>。<br>而<code>事件处理器的值</code>可以是：</p><ul><li>事件触发时，执行的内联式js语句。（内联事件处理器）</li><li>一个指向组件上定义的方法的属性名称/路径。（方法事件处理器）</li></ul><h2 id="6-1-内联事件处理器"><a href="#6-1-内联事件处理器" class="headerlink" title="6.1 内联事件处理器"></a>6.1 内联事件处理器</h2><p>内联事件处理器一般用于简单场景。语法示范如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="comment">//这里直接将要执行的js语句写在了事件触发器的值内。</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;count++&quot;</span>&gt;</span> 我是木鱼，点击功德+1 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span> 当前功德：&#123;&#123; count &#125;&#125; <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">count</span>:<span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="6-2-方法事件处理器"><a href="#6-2-方法事件处理器" class="headerlink" title="6.2 方法事件处理器"></a>6.2 方法事件处理器</h2><p>遇到较为复杂的事件时，可以用函数名称填写值，然后具体逻辑丢到js中去写。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="comment">//这里直接将要执行的函数名称addcount写在了事件触发器的值内。</span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addcount&quot;</span>&gt;</span> 我是木鱼，点击功德+1 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span> 当前功德：&#123;&#123; count &#125;&#125; <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">count</span>:<span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//方法事件的函数写在methods中，所有的方法/函数都丢到这里。</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//addcount函数</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">addcount</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">count</span>++       <span class="comment">//读取data-return里面的数据, 用this.count</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><h1 id="7-事件传参"><a href="#7-事件传参" class="headerlink" title="7. 事件传参"></a>7. 事件传参</h1><p>事件的参数，可以获取event对象和其他对象，通过事件名来传递参数。<br>有什么作用？可以在事件函数中进行对象操作，反向干预H5。</p><h2 id="7-1-获取Event对象"><a href="#7-1-获取Event对象" class="headerlink" title="7.1 获取Event对象"></a>7.1 获取Event对象</h2><p>vue中的event对象即是原生js的Event对象，包含了事件本身的数据信息。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addcount&quot;</span>&gt;</span> 我是木鱼，点击功德+1 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span> 当前功德：&#123;&#123; count &#125;&#125; <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">count</span>:<span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">addcount</span>(<span class="params">e</span>)&#123;                <span class="comment">//获取event对象</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>)   <span class="comment">//获取到button</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//获取到button，并通过innerHTML触发更改按钮显示内容。</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            e.<span class="property">target</span>.<span class="property">innerHTML</span> = <span class="string">&quot;已点击&quot;</span> + <span class="variable language_">this</span>.<span class="property">count</span> + <span class="string">&quot;下&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">count</span>++            <span class="comment">//this.count对应了data中的count变量</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="7-2-事件传递参数"><a href="#7-2-事件传递参数" class="headerlink" title="7.2 事件传递参数"></a>7.2 事件传递参数</h2><p>这里实现的是从事件触发值的参数传到方法的事件函数的参数中的普通传参。<br>下面是基础结构：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addcount(&#x27;我是参数&#x27;)&quot;</span>&gt;</span> 我是木鱼，点击功德+1 <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span> 当前功德：&#123;&#123; count &#125;&#125; <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">count</span>:<span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">addcount</span>(<span class="params">msg</span>)&#123;          <span class="comment">//通过msg接收addcount的第一个参数</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(msg)    <span class="comment">//输出msg即可看见这个参数的具体内容</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">this</span>.<span class="property">count</span>++</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p><strong>事件传参案例</strong><br>为了便于理解事件传参，先看看事件传参的应用案例。</p><p>例：现有一组数组，使用列表渲染后，需要实现——点击页面上任意的名字，都在后台输出对应的名字。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>事件传参<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line">    &#123;<span class="comment">/* 2. 用v-for列表渲染出来 */</span>&#125;</span><br><span class="line">    &lt;p @click=<span class="string">&quot;getNameHandler(item)&quot;</span> v-<span class="keyword">for</span>=<span class="string">&quot;(item,index) of names&quot;</span> :key=<span class="string">&quot;index&quot;</span>&gt; &#123;&#123;item&#125;&#125; &lt;/p&gt;</span><br><span class="line">    &#123;<span class="comment">/* 3. 给p标签添加一个事件getNameHandler；把item当成参数传给事件 */</span>&#125;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">names</span>:[<span class="string">&quot;momoeven&quot;</span>,<span class="string">&quot;niord&quot;</span>,<span class="string">&quot;anson&quot;</span>]  <span class="comment">//1. data中给一个names数组</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//4. 创建事件函数，并用name接收传参</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">getNameHandler</span>(<span class="params">name</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(name)       <span class="comment">//5. 实现点谁显示谁</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><h2 id="7-3-事件传参时获取event对象"><a href="#7-3-事件传参时获取event对象" class="headerlink" title="7.3 事件传参时获取event对象"></a>7.3 事件传参时获取event对象</h2><p>现在理解了事件传参，和获取event对象，有无可能同时传参并获取event对象呢？<br>使用<code>,$event</code>是可以的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>事件传参并且获取event对象<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span> @<span class="attr">click</span>=<span class="string">&quot;getNameHandler(item,$event)&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) of names&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span> &#123;&#123;item&#125;&#125; <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line">    &#123;<span class="comment">/* 同时传参并传递event */</span>&#125;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">names</span>:[<span class="string">&quot;momoeven&quot;</span>,<span class="string">&quot;niord&quot;</span>,<span class="string">&quot;anson&quot;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">getNameHandler</span>(<span class="params">name,e</span>)&#123;     <span class="comment">//同时收参并接收event</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(name);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="8-事件修饰符"><a href="#8-事件修饰符" class="headerlink" title="8. 事件修饰符"></a>8. 事件修饰符</h1><p>事件修饰符可以用来简化代码。<br>比如：阻止默认事件；阻止事件冒泡等。<br>更多事件修饰符可以看：<a href="https://cn.vuejs.org/guide/essentials/event-handling.html#event-modifiers">https://cn.vuejs.org/guide/essentials/event-handling.html#event-modifiers</a></p><h2 id="8-1-阻止默认事件"><a href="#8-1-阻止默认事件" class="headerlink" title="8.1 阻止默认事件"></a>8.1 阻止默认事件</h2><p>如果现在有一个a标签，需求是点击a标签只记录但是不进行跳转。这就需要用到<code>阻止默认事件</code>来阻止默认的a标签跳转。</p><p>范例如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>阻止默认事件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">a</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;clickHandle&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> &gt;</span>超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">    &#123;<span class="comment">/* 这里使用了艾特click.prevent来简化阻止默认事件的写法 */</span>&#125;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">clickHandle</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//e.preventDefault();   //这里是阻止默认事件的原本写法（记得获取e）</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(已点击);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><h2 id="8-2-阻止事件冒泡"><a href="#8-2-阻止事件冒泡" class="headerlink" title="8.2 阻止事件冒泡"></a>8.2 阻止事件冒泡</h2><p>事件冒泡是指同一个操作同时触发了多个事件，比如子元素触发了然后父元素也触发了。<br>阻止事件冒泡就是当子元素触发后，阻止父元素继续触发。</p><p>范例如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>阻止事件冒泡<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;clickDiv&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> @<span class="attr">click.stop</span>=<span class="string">&quot;clickP&quot;</span>&gt;</span>测试冒泡<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;/* 这里使用了艾特click.stop来简化阻止事件冒泡的写法 */&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">clickDiv</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;div&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">clickP</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">//e.stopPropagation();   //这里是阻止事件冒泡的原本写法（记得获取e）</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;p&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><h1 id="9-数组变化侦测"><a href="#9-数组变化侦测" class="headerlink" title="9. 数组变化侦测"></a>9. 数组变化侦测</h1>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> VSCode </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记2-APIs的使用笔记</title>
      <link href="/2023/06/07/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/"/>
      <url>/2023/06/07/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A015(Article015) --><div class="note info flat"><p>JavaScript分为ECMAScript语言规范和Web APIs两个部分。<br>本文将主要记录JavaScript的Web APIs的使用部分。<br>主要注重通过BOM与DOM的操作，完成对 网页元素的控制、网页交互的控制。</p></div><p>本文大致可以分为以下各个部分：</p><ul><li>Part 1: DOM-获取元素，修改属性</li><li>Part 2: DOM-事件基础（经过/点击/下拉/发布/注册/交互）【重要】</li><li>Part 3: DOM-事件对象与委托（电梯导航）</li><li>Part 4: DOM-节点操作（节点增删改查）</li><li>Part 5: BOM-操作浏览器（BOM、插件、本地存储）</li><li>Part 6: 正则表达式-综合案例（限制输入，检测合法输入）</li></ul><details class="folding-tag" ><summary> Part1 获取DOM元素，修改属性 </summary>              <div class='content'>              <p><details class="folding-tag" ><summary> Day 1 思维导图 </summary>              <div class='content'>              <p><img src="https://s2.loli.net/2023/06/20/bfHEm2LzMD96nCa.png" alt="A015-1s.png"></p>              </div>            </details></p><p><h1 id="1-Web-API-基础认知"><a href="#1-Web-API-基础认知" class="headerlink" title="1. Web API 基础认知"></a>1. Web API 基础认知</h1><h2 id="1-1-API"><a href="#1-1-API" class="headerlink" title="1.1 API"></a>1.1 API</h2><p>APIs: 调用以使用JS去操作html与浏览器<br>分类：DOM (文档对象模型)、BOM (浏览器对象模型)</p></p><p><h2 id="1-2-DOM、DOM树、DOM对象"><a href="#1-2-DOM、DOM树、DOM对象" class="headerlink" title="1.2 DOM、DOM树、DOM对象"></a>1.2 DOM、DOM树、DOM对象</h2><p>DOM：操作网页内容/标签，做交互。</p></p><p><p>DOM树：将Html文档以树状结构呈现。<br><img src="https://s2.loli.net/2023/06/08/y48EgwlKkLAp1sG.png" alt="A015-1-1-DOM树.png"></p></p><p><p>DOM对象：浏览器根据网页标签，在js中生成的JS对象。<br>所有的标签属性都可以在这个DOM对象上找到；且修改对象属性会自动映射到标签的呈现上。</p></p><p><p>[总结] DOM的想法是把网页标签都化成DOM对象来进行处理。<br>例如最大的DOM对象，document，使用 document.write() 就是一种DOM对象的使用。</p></p><p><h1 id="2-获取DOM对象"><a href="#2-获取DOM对象" class="headerlink" title="2. 获取DOM对象"></a>2. 获取DOM对象</h1><h2 id="2-1-css选择器获取DOM对象"><a href="#2-1-css选择器获取DOM对象" class="headerlink" title="2.1 css选择器获取DOM对象"></a>2.1 css选择器获取DOM对象</h2><p>现在的主要获取方式：通过css选择器去获取DOM对象。<br>语法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;css选择器&#x27;</span>)         <span class="comment">//获取第一个 作为DOM对象</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;css选择器&#x27;</span>)      <span class="comment">//获取全部的 作为DOM对象（伪数组形式）</span></span><br></pre></td></tr></table></figure></p></p><p><p>一些例子：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)       <span class="comment">//第一个div标签</span></span><br><span class="line"><span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.box&#x27;</span>)      <span class="comment">//第一个带有box类选择器的标签</span></span><br><span class="line"><span class="keyword">const</span> nav = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#nav&#x27;</span>)      <span class="comment">//id选择器挂了nav的标签</span></span><br><span class="line"><span class="keyword">const</span> li = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul li:first-child&#x27;</span>)      <span class="comment">//获取ul标签下的第一个li标签</span></span><br><span class="line"><span class="keyword">const</span> li = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;ul li&#x27;</span>)      <span class="comment">//获取ul标签下的所有li标签，返回的就是一个对象伪数组了。</span></span><br></pre></td></tr></table></figure></p></p><p><p><img src="https://s2.loli.net/2023/06/08/CYXHczxMyKfL471.png" alt="A015-1-3-1-通过css选择器获取DOM对象.png"><br>如图展示，我们就完成了一次通过css类选择器获取DOM对象，并进行修改(颜色)的操作。</p></p><p><h2 id="2-2-旧版的获取方式"><a href="#2-2-旧版的获取方式" class="headerlink" title="2.2 旧版的获取方式"></a>2.2 旧版的获取方式</h2><p>以前的老项目可能会用到这些获取写法，但现在已经被淘汰了。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;nav&#x27;</span>)      <span class="comment">//通过id获取一个DOM对象</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementByTagName</span>(<span class="string">&#x27;div&#x27;</span>)      <span class="comment">//通过标签名获取全部的DOM对象</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementByClassName</span>(<span class="string">&#x27;W&#x27;</span>)      <span class="comment">//通过类名获取全部的DOM对象</span></span><br></pre></td></tr></table></figure></p></p><p><h1 id="3-操作元素内容、属性"><a href="#3-操作元素内容、属性" class="headerlink" title="3. 操作元素内容、属性"></a>3. 操作元素内容、属性</h1><p>在1.3中，我们初步做到了获取DOM并进行修改的流程。<br>但是更多属性该如何修改呢？</p></p><p><h2 id="3-1-修改文本内容"><a href="#3-1-修改文本内容" class="headerlink" title="3.1 修改文本内容"></a>3.1 修改文本内容</h2><p>目标：用DOM更换显示的文本内容，做到类似内容刷新，倒计时的效果。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 先创建一个带有<span class="keyword">class</span>类选择器的div标签 --&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;class&quot;</span>&gt;</span>这里是div标签的文本内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 然后使用querySelector获取带有class类选择器的标签，并作为DOM对象，存给一个叫box的对象，并进一步处理。</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.class&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//这里我们的操作是输出box对象的文本内容</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(box.<span class="property">innerText</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//或者可以直接进行修改，这里的修改会自动映射到原本的标签上</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        box.<span class="property">innerText</span> = <span class="string">&#x27;进行DOM修改后的div标签&#x27;</span>            <span class="comment">//这里面是纯文本，不解析标签</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        box.<span class="property">innerHTML</span> = <span class="string">&#x27;&lt;b&gt;进行DOM修改后的div标签&lt;/b&gt;&#x27;</span>     <span class="comment">//这里面可以解析标签</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span> </span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><br>这里主要涉及到了<code>对象.innerText</code>和<code>对象.innerHTML</code>两个属性，他们都可以进行获取和修改显示的文本内容，其中后者还可以解析标签。</p></p><p><details class="folding-tag" ><summary> 一个抽奖小栗子 </summary>              <div class='content'>              <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">    &lt;title&gt;年会抽奖-案例&lt;/title&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        <span class="selector-class">.wrapper</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">width</span>: <span class="number">840px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">height</span>: <span class="number">420px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="comment">/* background: url(./images/bg01.jpg) no-repeat center / cover; */</span></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">padding</span>: <span class="number">100px</span> <span class="number">250px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">            <span class="attribute">box-sizing</span>: border-box;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line">&lt;/head&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 这个案例主要是涉及到使用DOM修改相关的页面文本信息 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">strong</span>&gt;</span>幸运大抽奖<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>一等奖：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;one&quot;</span>&gt;</span>???<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>二等奖：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;two&quot;</span>&gt;</span>???<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>三等奖：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;three&quot;</span>&gt;</span>???<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//1.声明数组</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> personArr = [<span class="string">&#x27;WWD&#x27;</span>,<span class="string">&#x27;WZK&#x27;</span>,<span class="string">&#x27;MHD&#x27;</span>,<span class="string">&#x27;SK&#x27;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//2.抽取1等奖</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> random = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * personArr.<span class="property">length</span>)     <span class="comment">//针对数组长度取随机数random</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> one = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#one&#x27;</span>)                      <span class="comment">//针对id选择器捕获DOM对象one</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        one.<span class="property">innerHTML</span> = personArr[random]                               <span class="comment">//把抽中的人员名字交给DOM对象one</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//删除已抽中的</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        personArr.<span class="title function_">splice</span>(random,<span class="number">1</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//剩下的可以继续写，或者封装成函数调用。</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//2.抽取2等奖</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> random2 = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * personArr.<span class="property">length</span>)     <span class="comment">//针对数组长度取随机数random2</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> two = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#two&#x27;</span>)                      <span class="comment">//针对id选择器捕获DOM对象two</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        two.<span class="property">innerHTML</span> = personArr[random2]                               <span class="comment">//把抽中的人员名字交给DOM对象two</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//删除已抽中的</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        personArr.<span class="title function_">splice</span>(random2,<span class="number">1</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//3.抽取3等奖</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> random3 = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * personArr.<span class="property">length</span>)     <span class="comment">//针对数组长度取随机数random3</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> three = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#three&#x27;</span>)                      <span class="comment">//针对id选择器捕获DOM对象three</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        three.<span class="property">innerHTML</span> = personArr[random3]                               <span class="comment">//把抽中的人员名字交给DOM对象three</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//删除已抽中的</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        personArr.<span class="title function_">splice</span>(random3,<span class="number">1</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>              </div>            </details></p><p><h2 id="3-2-修改图像显示"><a href="#3-2-修改图像显示" class="headerlink" title="3.2 修改图像显示"></a>3.2 修改图像显示</h2><p><em>语法</em>：对象.属性 = 值<br>例如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.获取DOM元素</span></span><br><span class="line"><span class="keyword">const</span> pic = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;img&#x27;</span>)   <span class="comment">//通过img标签获取</span></span><br><span class="line"><span class="comment">//2.操作元素</span></span><br><span class="line">pic.<span class="property">src</span> = <span class="string">&#x27;./images/b02.jpg&#x27;</span>    <span class="comment">//调整src属性更换图片显示</span></span><br><span class="line">pic.<span class="property">title</span> = <span class="string">&#x27;我是图片名称&#x27;</span>       <span class="comment">//调整title属性更换图片名称</span></span><br></pre></td></tr></table></figure></p></p><p><details class="folding-tag" ><summary> 例子：图片随机刷新 </summary>              <div class='content'>              <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/01.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//抽取随机数函数</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">function</span> <span class="title function_">getRandom</span>(<span class="params">N, M</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (M - N + <span class="number">1</span>)) + N</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//获取元素</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> pic = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;img&#x27;</span>)   <span class="comment">//通过img标签获取</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> random = <span class="title function_">getRandom</span>(<span class="number">1</span>,<span class="number">10</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        pic.<span class="property">src</span> = <span class="string">&#x27;./images/$&#123;random&#125;.jpg&#x27;</span>    <span class="comment">//调整src属性更换图片显示</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>              </div>            </details></p><p><h1 id="4-修改元素属性-样式"><a href="#4-修改元素属性-样式" class="headerlink" title="4. 修改元素属性/样式"></a>4. 修改元素属性/样式</h1><p>除了通过对DOM对象修改文本内容与图像显示，还可以实现更多对元素样式的操作（更多css元素属性修改）<br>一般有3种方案，分别是：<br>(a) 通过style属性操作元素样式属性<br>(b) 通过类名去操作元素样式属性<br>(c) 通过classlist去操作元素样式属性<br>此外，还可以实现对表单属性的控制、自定义属性的控制等。</p></p><p><h2 id="4-1-通过style属性操作元素样式属性"><a href="#4-1-通过style属性操作元素样式属性" class="headerlink" title="4.1 通过style属性操作元素样式属性"></a>4.1 通过style属性操作元素样式属性</h2><p>语法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">对象.<span class="property">style</span>.样式属性 = <span class="string">&#x27;值&#x27;</span></span><br><span class="line"><span class="comment">//例如：</span></span><br><span class="line"><span class="keyword">const</span> 对象 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;选择器捕获DOM对象&#x27;</span>)</span><br><span class="line">对象.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&#x27;300px&#x27;</span></span><br><span class="line">对象.<span class="property">style</span>.<span class="property">height</span> = <span class="string">&#x27;300px&#x27;</span></span><br><span class="line">对象.<span class="property">style</span>.<span class="property">backgroundColor</span> = <span class="string">&#x27;pink&#x27;</span></span><br><span class="line">对象.<span class="property">style</span>.<span class="property">border</span> = <span class="string">&#x27;2px solid black&#x27;</span></span><br><span class="line">对象.<span class="property">style</span>.<span class="property">borderTop</span> = <span class="string">&#x27;2px solid red&#x27;</span></span><br></pre></td></tr></table></figure></p></p><p><details class="folding-tag" ><summary> 例子：图片随机刷新，但是使用style属性操作url来做 </summary>              <div class='content'>              <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="comment">/* 直接给body标签来一个大图铺满 */</span></span><br><span class="line">        body &#123;</span><br><span class="line">            <span class="attr">background</span>: <span class="title function_">url</span>(./images/cover01.<span class="property">jpg</span>) no-repeat top center/cover;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//抽取随机数函数</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">getRandom</span>(<span class="params">N, M</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (M - N + <span class="number">1</span>)) + N</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> random = <span class="title function_">getRandom</span>(<span class="number">1</span>, <span class="number">10</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span>.<span class="property">backgroundImage</span> = <span class="string">&#x27;url(./images/cover0$&#123;random&#125;.jpg)&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>              </div>            </details></p><p><h2 id="4-2-通过类名去操作元素样式属性"><a href="#4-2-通过类名去操作元素样式属性" class="headerlink" title="4.2 通过类名去操作元素样式属性"></a>4.2 通过类名去操作元素样式属性</h2><p>通过style一条条改有些繁琐，能不能批量改？可以用更换类名去操作。</p></p><p><p>语法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象.<span class="property">className</span> = <span class="string">&#x27;一个类名&#x27;</span></span><br></pre></td></tr></table></figure></p></p><p><p>例子：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            <span class="attr">width</span>: 200px;</span><br><span class="line">            <span class="attr">height</span>: 200px;</span><br><span class="line">            background-<span class="attr">color</span>: pink;</span><br><span class="line">        &#125;</span><br><span class="line">        .<span class="property">box</span> &#123;</span><br><span class="line">            <span class="attr">width</span>: 300px;</span><br><span class="line">            <span class="attr">height</span>: 300px;</span><br><span class="line">            background-<span class="attr">color</span>: blue;</span><br><span class="line">            <span class="attr">margin</span>: 100px auto;</span><br><span class="line">            <span class="attr">padding</span>: 10px;</span><br><span class="line">            <span class="attr">border</span>: 1px solid #<span class="number">000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)   <span class="comment">//获取DOM对象</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        div.<span class="property">className</span> = <span class="string">&#x27;box&#x27;</span>                       <span class="comment">//直接快速更换类名，支持多个</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p></p><p><h2 id="4-3-通过classlist去操作元素样式属性"><a href="#4-3-通过classlist去操作元素样式属性" class="headerlink" title="4.3 通过classlist去操作元素样式属性"></a>4.3 通过classlist去操作元素样式属性</h2><p>使用类名替换会覆盖原先的设置，有没有更好的做法？用classlist</p></p><p><p>语法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="property">classlist</span>.<span class="title function_">add</span>(<span class="string">&#x27;类名&#x27;</span>)      <span class="comment">//追加类名，不会覆盖原先的</span></span><br><span class="line">元素.<span class="property">classlist</span>.<span class="title function_">remove</span>(<span class="string">&#x27;类名&#x27;</span>)   <span class="comment">//删除类名</span></span><br><span class="line">元素.<span class="property">classlist</span>.<span class="title function_">toggle</span>(<span class="string">&#x27;类名&#x27;</span>)   <span class="comment">//切换类名</span></span><br></pre></td></tr></table></figure></p></p><p><h2 id="4-4-案例：随机播放轮播图（Skip）"><a href="#4-4-案例：随机播放轮播图（Skip）" class="headerlink" title="4.4 案例：随机播放轮播图（Skip）"></a>4.4 案例：随机播放轮播图（Skip）</h2><p><a href="https://www.bilibili.com/video/BV1Y84y1L7Nn/?p=86">https://www.bilibili.com/video/BV1Y84y1L7Nn/?p=86</a></p></p><p><h2 id="4-5-操作表单属性"><a href="#4-5-操作表单属性" class="headerlink" title="4.5 操作表单属性"></a>4.5 操作表单属性</h2><p>操作表单：文本框、按钮、选项表<br>应用案例：密码的显示/隐藏；列表的选项选中/与否；按钮的禁用/与否<br>语法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">表单对象.<span class="property">value</span>=<span class="string">&#x27;表单值&#x27;</span></span><br><span class="line">表单对象.<span class="property">type</span>=<span class="string">&#x27;表单类型&#x27;</span></span><br><span class="line">表单对象.<span class="property">checked</span>=<span class="literal">true</span>/<span class="literal">false</span></span><br><span class="line">表单对象.<span class="property">disabled</span>=<span class="literal">true</span>/<span class="literal">false</span></span><br></pre></td></tr></table></figure></p></p><p><p>具体代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 新建 表单框、复选框、按钮 --&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;复选框&quot;</span> <span class="attr">id</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//1. 获取表单元素</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> unname = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//2. 使用`对象.value`获取/更改表单框内的值</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(unname.<span class="property">value</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        unname.<span class="property">value</span>=<span class="string">&#x27;当然，也可以赋值改变&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//3. 表单的属性还有type，可以设置输入可见与否</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        unname.<span class="property">type</span>=<span class="string">&#x27;password&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//4. 获取复选框表单元素</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> ipt = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#checkbox&#x27;</span>) <span class="comment">//能否捕获？</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//5. 查看/更改复选框的选中状态</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        ipt.<span class="property">checked</span> = <span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//6. 捕获按钮表单元素</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> button = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">//7. 使用`对象.disabled`可以设置按钮可否被按下</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        button.<span class="property">disabled</span> = <span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p></p><p><h2 id="4-6-H5自定义属性"><a href="#4-6-H5自定义属性" class="headerlink" title="4.6 H5自定义属性"></a>4.6 H5自定义属性</h2><p>对一个元素，自定义一个属性，并进行控制操作。<br>一般自定义的属性都是以“data-”开头。<br>例子：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-id</span>=<span class="string">&quot;1&quot;</span> <span class="attr">data-spm</span>=<span class="string">&quot;不知道&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-id</span>=<span class="string">&quot;2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-id</span>=<span class="string">&quot;3&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-id</span>=<span class="string">&quot;4&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-id</span>=<span class="string">&quot;5&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> one =<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>)    <span class="comment">//捕获第一个div</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(one.<span class="property">dataset</span>);                   <span class="comment">//查看所有的屬性</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(one.<span class="property">dataset</span>.<span class="property">id</span>);                <span class="comment">//查看data-id的屬性</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="variable language_">console</span>.<span class="title function_">log</span>(one.<span class="property">dataset</span>.<span class="property">spm</span>);               <span class="comment">//查看data-spm的屬性</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p></p><p><h1 id="5-定时器-间歇函数"><a href="#5-定时器-间歇函数" class="headerlink" title="5. 定时器-间歇函数"></a>5. 定时器-间歇函数</h1><p>每隔一段時間，自動地去執行一段代碼。定时器函数有2种。<br>应用场景：阅读协议按钮，时间到了再取消禁用；浮窗通道，显示倒计时。</p></p><p><h2 id="5-1-开启定时器"><a href="#5-1-开启定时器" class="headerlink" title="5.1 开启定时器"></a>5.1 开启定时器</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setInterval(函数, 间隔时间ms)</span><br></pre></td></tr></table></figure></p><p><p>例子：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;一秒一次&#x27;</span>)</span><br><span class="line">&#125;, <span class="number">1000</span>)</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;一秒一次&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">setInterval</span>(fn, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><br>需要注意的是，第一次函数调用发生在指定毫秒数后。</p></p><p><h2 id="5-2-关闭定时器"><a href="#5-2-关闭定时器" class="headerlink" title="5.2 关闭定时器"></a>5.2 关闭定时器</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> 变量名 = <span class="built_in">setInterval</span>(函数, 间隔时间)</span><br><span class="line"><span class="built_in">clearInterval</span>(变量名)</span><br></pre></td></tr></table></figure></p><p><h2 id="5-3-一些定时案例"><a href="#5-3-一些定时案例" class="headerlink" title="5.3 一些定时案例"></a>5.3 一些定时案例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        用户注册协议</span></span><br><span class="line"><span class="language-xml">        欢迎注册！</span></span><br><span class="line"><span class="language-xml">        【请您注意】如不同意，请停止注册。</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span></span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">disabled</span>&gt;</span>我已经阅读并同意该用户协议(5)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> i = <span class="number">5</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> n = <span class="built_in">setInterval</span> (<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            i--</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            btn.<span class="property">innerHTML</span> = <span class="string">`我已经阅读并同意该用户协议(<span class="subst">$&#123;i&#125;</span>)`</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">if</span>(i===<span class="number">0</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="built_in">clearInterval</span>(n)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                btn.<span class="property">disabled</span> = <span class="literal">false</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                btn.<span class="property">innerHTML</span> = <span class="string">&#x27;同意&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;,<span class="number">1000</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p><p><h1 id="6-综合案例-轮播图定时刷新【重要】"><a href="#6-综合案例-轮播图定时刷新【重要】" class="headerlink" title="6. 综合案例-轮播图定时刷新【重要】"></a>6. 综合案例-轮播图定时刷新【重要】</h1><p>需求：每隔一秒钟切换一张图片</p></p><ol><li>准备一个数组，包含详细信息和素材</li><li>获取元素</li><li>设置定时器（更改图片、文字信息、激活小圆点）</li><li>自动循环播放（变量置0）<br>代码：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line">  &lt;title&gt;轮播图点击切换&lt;/title&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    * &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">box-sizing</span>: border-box;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.slider</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">560px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">400px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">overflow</span>: hidden;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.slider-wrapper</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">320px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.slider-wrapper</span> <span class="selector-tag">img</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.slider-footer</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">80px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">100</span>, <span class="number">67</span>, <span class="number">68</span>);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">12px</span> <span class="number">0</span> <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">position</span>: relative;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.slider-footer</span> <span class="selector-class">.toggle</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">position</span>: absolute;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">right</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">top</span>: <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.slider-footer</span> <span class="selector-class">.toggle</span> <span class="selector-tag">button</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin-right</span>: <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">28px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">28px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      appearance: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.1</span>);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.slider-footer</span> <span class="selector-class">.toggle</span> <span class="selector-tag">button</span><span class="selector-pseudo">:hover</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.slider-footer</span> <span class="selector-tag">p</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.slider-indicator</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">list-style</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">align-items</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.slider-indicator</span> <span class="selector-tag">li</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">8px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">8px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin</span>: <span class="number">4px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">background</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">opacity</span>: <span class="number">0.4</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.slider-indicator</span> <span class="selector-tag">li</span><span class="selector-class">.active</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">opacity</span>: <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider-wrapper&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/slider01.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;slider-footer&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>对人类来说会不会太超前了？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;slider-indicator&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;toggle&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;prev&quot;</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;next&quot;</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 1. 初始数据</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> sliderData = [</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider01.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;对人类来说会不会太超前了？&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(100, 67, 68)&#x27;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider02.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;开启剑与雪的黑暗传说！&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(43, 35, 26)&#x27;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider03.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;真正的jo厨出现了！&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(36, 31, 33)&#x27;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider04.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;李玉刚：让世界通过B站看到东方大国文化&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(139, 98, 66)&#x27;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider05.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;快来分享你的寒假日常吧~&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(67, 90, 92)&#x27;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider06.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;哔哩哔哩小年YEAH&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(166, 131, 143)&#x27;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider07.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;一站式解决你的电脑配置问题！！！&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(53, 29, 25)&#x27;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#123; <span class="attr">url</span>: <span class="string">&#x27;./images/slider08.jpg&#x27;</span>, <span class="attr">title</span>: <span class="string">&#x27;谁不想和小猫咪贴贴呢！&#x27;</span>, <span class="attr">color</span>: <span class="string">&#x27;rgb(99, 72, 114)&#x27;</span> &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    ]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 1. 获取元素 </span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> img = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider-wrapper img&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider-footer p&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> i = <span class="number">0</span>  <span class="comment">// 信号量 控制图片的张数</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 2. 开启定时器</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// console.log(sliderData[i])  拿到对应的对象啦</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      i++</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 无缝衔接位置  一共八张图片，到了最后一张就是 8， 数组的长度就是 8</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (i &gt;= sliderData.<span class="property">length</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        i = <span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// console.log(i)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// console.log(sliderData[i])</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 更换图片路径  </span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      img.<span class="property">src</span> = sliderData[i].<span class="property">url</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 把字写到 p里面</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      p.<span class="property">innerHTML</span> = sliderData[i].<span class="property">title</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 小圆点</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 先删除以前的active</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.slider-indicator .active&#x27;</span>).<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;active&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// 只让当前li添加active</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">`.slider-indicator li:nth-child(<span class="subst">$&#123;i + <span class="number">1</span>&#125;</span>)`</span>).<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;active&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;, <span class="number">1000</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" ><summary> Part2 DOM-事件与监听 </summary>              <div class='content'>              <h1 id="7-“事件”与”监听”"><a href="#7-“事件”与”监听”" class="headerlink" title="7. “事件”与”监听”"></a>7. “事件”与”监听”</h1><p><code>事件</code>是系统内发生的事情/一个<code>动作</code>。比如：鼠标单点、双击、经过、悬停；键盘按下、长按等。<br><code>监听</code>是检测是否有事件发生，<code>检测到后调用函数</code>做出响应。也被称为“绑定事件”、“注册事件”。比如：点击播放轮播图、经过显示下拉菜单等。<br>语法：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">DOM</span>元素对象/事件源.<span class="property">on</span>事件=<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;                       <span class="comment">//老版本</span></span><br><span class="line"><span class="variable constant_">DOM</span>元素对象/事件源.<span class="title function_">addEventListener</span>(<span class="string">&#x27;事件类型&#x27;</span>, 要执行的函数/回调函数)  <span class="comment">//新版本</span></span><br></pre></td></tr></table></figure><br>其中，事件监听需要三要素：<code>什么DOM对象被事件触发了（事件源）</code>，<code>以何种形式触发（事件类型）</code>，<code>要执行什么函数</code>。<br>老版本的<code>on</code>方式会被覆盖，而<code>addEventListener</code>方式可以绑定多次，有更多事件特性。</p><h2 id="7-1-事件监听的一些小案例"><a href="#7-1-事件监听的一些小案例" class="headerlink" title="7.1 事件监听的一些小案例"></a>7.1 事件监听的一些小案例</h2><p>例1：按下按钮，弹出弹窗<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>)  <span class="comment">//获取按钮DOM元素</span></span><br><span class="line">btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="title function_">alert</span>(<span class="string">&#x27;点击了&#x27;</span>)&#125;)  <span class="comment">//事件监听并输出</span></span><br></pre></td></tr></table></figure><br>这里的事件监听描述了：按钮是DOM对象，它通过click(单击)触发，触发后会执行一个弹窗的匿名函数。</p><p>例2：按下X号，关闭广告<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> closerX = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.closer&#x27;</span>)                       <span class="comment">//获取X号按钮(本质是个盒子，类名closer)</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Adv</span> = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.Adv&#x27;</span>)                              <span class="comment">//获取广告本体</span></span><br><span class="line">closerX.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="title class_">Adv</span>.<span class="property">style</span>.<span class="property">display</span>=<span class="string">&#x27;none&#x27;</span>&#125;) <span class="comment">//监听X,若按下则切换广告css的display为none，表现为隐藏</span></span><br></pre></td></tr></table></figure></p><p>例3：随机抽选案例<br>业务分析：<br>1.点击开始按钮，随机抽选数组之一并显示。<br>2.点击结束按钮，删除数组中的当前显示的数据。<br>3.当箱子全部抽空，禁用两个按钮。<br>分析：需要用到随机、定时器、禁用等。</p><p><details class="folding-tag" ><summary> 点击展开代码 </summary>              <div class='content'>              <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            <span class="attr">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attr">padding</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        h2 &#123;</span><br><span class="line">            text-<span class="attr">align</span>: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .<span class="property">box</span> &#123;</span><br><span class="line">            <span class="attr">width</span>: 600px;</span><br><span class="line">            <span class="attr">margin</span>: 50px auto;</span><br><span class="line">            <span class="attr">display</span>: flex;</span><br><span class="line">            font-<span class="attr">size</span>: 25px;</span><br><span class="line">            line-<span class="attr">height</span>: 40px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .<span class="property">qs</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="attr">width</span>: 450px;</span><br><span class="line">            <span class="attr">height</span>: 40px;</span><br><span class="line">            <span class="attr">color</span>: red;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .<span class="property">btns</span> &#123;</span><br><span class="line">            text-<span class="attr">align</span>: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .<span class="property">btns</span> button &#123;</span><br><span class="line">            <span class="attr">width</span>: 120px;</span><br><span class="line">            <span class="attr">height</span>: 35px;</span><br><span class="line">            <span class="attr">margin</span>: <span class="number">0</span> 50px;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>随机点名<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>名字是：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;qs&quot;</span>&gt;</span>这里显示姓名<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btns&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;start&quot;</span>&gt;</span>开始<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;end&quot;</span>&gt;</span>结束<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 数据数组</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> arr = [<span class="string">&#x27;马超&#x27;</span>, <span class="string">&#x27;黄忠&#x27;</span>, <span class="string">&#x27;赵云&#x27;</span>, <span class="string">&#x27;关羽&#x27;</span>, <span class="string">&#x27;张飞&#x27;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 定时器的全局变量</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> timerId = <span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 随机号要全局变量</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> random = <span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 业务1.开始按钮模块</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> qs = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.qs&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 1.1 获取开始按钮对象</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> start = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.start&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 1.2 添加点击事件</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        start.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            timerId = <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="comment">// 随机数</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                random = <span class="built_in">parseInt</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * arr.<span class="property">length</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="comment">// console.log(arr[random])</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                qs.<span class="property">innerHTML</span> = arr[random]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;, <span class="number">35</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 如果数组里面只有一个值了，还需要抽取吗？  不需要  让两个按钮禁用就可以</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">if</span> (arr.<span class="property">length</span> === <span class="number">1</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="comment">// start.disabled = true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="comment">// end.disabled = true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                start.<span class="property">disabled</span> = end.<span class="property">disabled</span> = <span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 2. 关闭按钮模块</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> end = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.end&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        end.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="built_in">clearInterval</span>(timerId)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 结束了，可以删除掉当前抽取的那个数组元素</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            arr.<span class="title function_">splice</span>(random, <span class="number">1</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>              </div>            </details></p><p><h2 id="7-2-事件类型"><a href="#7-2-事件类型" class="headerlink" title="7.2 事件类型"></a>7.2 事件类型</h2><p>以下是一张常用的事件类型表格：<br>|事件类型    |事件描述             |<br>|click      |鼠标点击             |<br>|mouseenter |鼠标经过             |<br>|mouseleave |鼠标离开             |<br>|Keydown    |键盘按下             |<br>|Keyup      |键盘抬起             |<br>|focus      |表单获得光标（焦点）  |<br>|blur       |表单失去焦点         |<br>|input      |表单输入触发         |</p></p><p><p>其中有关焦点的focus和blur事件，这里有一个常见的搜索框展开的案例：</p></p><p><details class="folding-tag" ><summary> 焦点事件案例-搜索框展开 </summary>              <div class='content'>              <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            <span class="attr">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attr">padding</span>: <span class="number">0</span>;</span><br><span class="line">            box-<span class="attr">sizing</span>: border-box;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ul &#123;</span><br><span class="line"></span><br><span class="line">            list-<span class="attr">style</span>: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .<span class="property">mi</span> &#123;</span><br><span class="line">            <span class="attr">position</span>: relative;</span><br><span class="line">            <span class="attr">width</span>: 223px;</span><br><span class="line">            <span class="attr">margin</span>: 100px auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .<span class="property">mi</span> input &#123;</span><br><span class="line">            <span class="attr">width</span>: 223px;</span><br><span class="line">            <span class="attr">height</span>: 48px;</span><br><span class="line">            <span class="attr">padding</span>: <span class="number">0</span> 10px;</span><br><span class="line">            font-<span class="attr">size</span>: 14px;</span><br><span class="line">            line-<span class="attr">height</span>: 48px;</span><br><span class="line">            <span class="attr">border</span>: 1px solid #e0e0e0;</span><br><span class="line">            <span class="attr">outline</span>: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .<span class="property">mi</span> .<span class="property">search</span> &#123;</span><br><span class="line">            <span class="attr">border</span>: 1px solid #ff6700;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .<span class="property">result</span>-list &#123;</span><br><span class="line">            <span class="attr">display</span>: none;</span><br><span class="line">            <span class="attr">position</span>: absolute;</span><br><span class="line">            <span class="attr">left</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attr">top</span>: 48px;</span><br><span class="line">            <span class="attr">width</span>: 223px;</span><br><span class="line">            <span class="attr">border</span>: 1px solid #ff6700;</span><br><span class="line">            border-<span class="attr">top</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attr">background</span>: #fff;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .<span class="property">result</span>-list a &#123;</span><br><span class="line">            <span class="attr">display</span>: block;</span><br><span class="line">            <span class="attr">padding</span>: 6px 15px;</span><br><span class="line">            font-<span class="attr">size</span>: 12px;</span><br><span class="line">            <span class="attr">color</span>: #<span class="number">424242</span>;</span><br><span class="line">            text-<span class="attr">decoration</span>: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .<span class="property">result</span>-list <span class="attr">a</span>:hover &#123;</span><br><span class="line">            background-<span class="attr">color</span>: #eee;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mi&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;小米笔记本&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;result-list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>全部商品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>小米11<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>小米10S<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>小米笔记本<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>小米手机<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>黑鲨4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>空调<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 1. 获取元素</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> input = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;[type=search]&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">const</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.result-list&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// console.log(input)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 2. 监听事件 获得焦点</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        input.<span class="title function_">addEventListener</span>(<span class="string">&#x27;focus&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// ul显示</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            ul.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// 添加一个带有颜色边框的类名</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            input.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;search&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 3. 监听事件 失去焦点</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        input.<span class="title function_">addEventListener</span>(<span class="string">&#x27;blur&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            ul.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            input.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;search&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure>              </div>            </details></p><p><h2 id="7-3-事件对象"><a href="#7-3-事件对象" class="headerlink" title="7.3 事件对象"></a>7.3 事件对象</h2><p><code>事件对象</code>，是指<code>含有事件触发的相关信息的对象</code>，一般为回调函数的第一个参数。<br>例如：鼠标点击事件中，事件对象会包含鼠标点击位置等信息。<br>应用场景：判断按下键值，按到回车键时发布新闻；判断点击要素，以触发函数。</p></p><p><h3 id="7-3-1-事件对象的获取"><a href="#7-3-1-事件对象的获取" class="headerlink" title="7.3.1 事件对象的获取"></a>7.3.1 事件对象的获取</h3><p>例如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">DOM</span>元素对象/事件源.<span class="title function_">addEventListener</span>(<span class="string">&#x27;事件类型&#x27;</span>, <span class="title function_">fuction</span>(<span class="params">e</span>)&#123;&#125;)</span><br></pre></td></tr></table></figure><br>这句监听事件中，回调函数中的<code>e</code>就是事件对象。</p></p><p><h3 id="7-3-2-事件对象的常见属性"><a href="#7-3-2-事件对象的常见属性" class="headerlink" title="7.3.2 事件对象的常见属性"></a>7.3.2 事件对象的常见属性</h3><p>|事件对象的属性     |所代表的内容          |<br>|e.type             |获取当前的事件类型     |<br>|e.clientX/clientY  |点击位置（左上零点）   |<br>|e.offsetX/offsetY  |点击位置（DOM左上零点）|<br>|e.key              |按下的键值             |</p></p><p><p>这里有一个利用了事件对象，检测到回车就发布评论的小案例：</p></p><p><details class="folding-tag" ><summary> 事件对象的应用-回车键发布评论 </summary>              <div class='content'>              <div class="tabs" id="732回车评论系统"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#732回车评论系统-1">代码</button></li><li class="tab"><button type="button" data-href="#732回车评论系统-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="732回车评论系统-1"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line">  &lt;title&gt;评论回车发布&lt;/title&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.wrapper</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">min-width</span>: <span class="number">400px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">max-width</span>: <span class="number">800px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">justify-content</span>: flex-end;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.avatar</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">48px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">48px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">overflow</span>: hidden;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">./images/avatar.jpg</span>) no-repeat center / cover;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.wrapper</span> <span class="selector-tag">textarea</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">outline</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border-color</span>: transparent;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">resize</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">background</span>: <span class="number">#f5f5f5</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">flex</span>: <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">transition</span>: all <span class="number">0.5s</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">30px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.wrapper</span> <span class="selector-tag">textarea</span><span class="selector-pseudo">:focus</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border-color</span>: <span class="number">#e4e4e4</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">background</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">50px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.wrapper</span> <span class="selector-tag">button</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="comment">/* 发布按钮，蓝色圆角 */</span></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">background</span>: <span class="number">#00aeec</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border</span>: none;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">70px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">cursor</span>: pointer;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.wrapper</span> <span class="selector-class">.total</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin-right</span>: <span class="number">80px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">color</span>: <span class="number">#999</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">opacity</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">transition</span>: all <span class="number">0.5s</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.list</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">min-width</span>: <span class="number">400px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">max-width</span>: <span class="number">800px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.list</span> <span class="selector-class">.item</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: flex;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.list</span> <span class="selector-class">.item</span> <span class="selector-class">.info</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="comment">/* 评论栏，底栏虚灰线 */</span></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">flex</span>: <span class="number">1</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border-bottom</span>: <span class="number">1px</span> dashed <span class="number">#e4e4e4</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">padding-bottom</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.list</span> <span class="selector-class">.item</span> <span class="selector-tag">p</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.list</span> <span class="selector-class">.item</span> <span class="selector-class">.name</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">color</span>: <span class="number">#FB7299</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">font-size</span>: <span class="number">14px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">font-weight</span>: bold;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.list</span> <span class="selector-class">.item</span> <span class="selector-class">.text</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">color</span>: <span class="number">#333</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.list</span> <span class="selector-class">.item</span> <span class="selector-class">.time</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">color</span>: <span class="number">#999</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;tx&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;发一条友善的评论&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;2&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;200&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>发布<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;total&quot;</span>&gt;</span>0/200字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: none;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;avatar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;name&quot;</span>&gt;</span>Niord<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span>预定文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;time&quot;</span>&gt;</span>预定时间<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> tx = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#tx&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> total = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.total&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> item = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.item&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> text = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.text&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 1. 当我们文本域获得了焦点，就让 total 显示出来</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    tx.<span class="title function_">addEventListener</span>(<span class="string">&#x27;focus&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      total.<span class="property">style</span>.<span class="property">opacity</span> = <span class="number">1</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 2. 当我们文本域失去了焦点，就让 total 隐藏出来</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    tx.<span class="title function_">addEventListener</span>(<span class="string">&#x27;blur&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      total.<span class="property">style</span>.<span class="property">opacity</span> = <span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 3. 检测用户输入</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    tx.<span class="title function_">addEventListener</span>(<span class="string">&#x27;input&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="comment">// console.log(tx.value.length)  得到输入的长度</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      total.<span class="property">innerHTML</span> = <span class="string">`<span class="subst">$&#123;tx.value.length&#125;</span>/200字`</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 4. 按下回车发布评论</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    tx.<span class="title function_">addEventListener</span>(<span class="string">&#x27;keyup&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 只有按下的是回车键，才会触发</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (e.<span class="property">key</span> === <span class="string">&#x27;Enter&#x27;</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 如果用户输入的不为空就显示和打印</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">if</span> (tx.<span class="property">value</span>.<span class="title function_">trim</span>()) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          item.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 用户输入的内容，传给text</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          text.<span class="property">innerHTML</span> = tx.<span class="property">value</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 按下回车，传完，清空文本域</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        tx.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 按下回车后，要把 字符统计 复原</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        total.<span class="property">innerHTML</span> = <span class="string">&#x27;0/200字&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="comment">// 按下回车后，刷新并显示系统时间</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title function_">time</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 5. 系统时间获取函数(每次调用就会经历一次刷新)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">time</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> revtime = <span class="keyword">new</span> <span class="title class_">Date</span>()              <span class="comment">//读取系统时间存为对象（刷新）</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> revyear = revtime.<span class="title function_">getFullYear</span>()   <span class="comment">//读年</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> revmonth = revtime.<span class="title function_">getMonth</span>()+<span class="number">1</span>   <span class="comment">//读月</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    revmonth = (revmonth &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> : <span class="string">&#x27;&#x27;</span>) + revmonth   <span class="comment">//月份补零，下同</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> revday = revtime.<span class="title function_">getDate</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    revday = (revday &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> : <span class="string">&#x27;&#x27;</span>) + revday</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> revhour = revtime.<span class="title function_">getHours</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    revhour = (revhour &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> : <span class="string">&#x27;&#x27;</span>) + revhour</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> revminutes = revtime.<span class="title function_">getMinutes</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    revminutes = (revminutes &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> : <span class="string">&#x27;&#x27;</span>) + revminutes</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> revseconds = revtime.<span class="title function_">getSeconds</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    revseconds = (revseconds &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> : <span class="string">&#x27;&#x27;</span>) + revseconds</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//捕获带有time类名的元素体，文本输出时间</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.time&#x27;</span>).<span class="property">innerHTML</span> = revyear + <span class="string">&#x27;-&#x27;</span> + revmonth + <span class="string">&#x27;-&#x27;</span> + revday + <span class="string">&#x27; &#x27;</span> + revhour + <span class="string">&#x27;:&#x27;</span> + revminutes + <span class="string">&#x27;:&#x27;</span> + revseconds</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="732回车评论系统-2"><p><img src="https://s2.loli.net/2023/07/27/e7KcADhP5YbwpUn.gif" alt="A015-2-732-事件监听与事件对象的应用-回车评论.gif"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details></p><p><p>后续先去看vue框架了。<br></p>              </div>            </details></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> VSCode </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> web </tag>
            
            <tag> APIs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于轻舟小车远程建立通信的快速启动记录</title>
      <link href="/2023/05/09/%E5%85%B3%E4%BA%8E%E8%BD%BB%E8%88%9F%E5%B0%8F%E8%BD%A6%E8%BF%9C%E7%A8%8B%E5%BB%BA%E7%AB%8B%E9%80%9A%E4%BF%A1%E7%9A%84%E5%BF%AB%E9%80%9F%E5%90%AF%E5%8A%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/05/09/%E5%85%B3%E4%BA%8E%E8%BD%BB%E8%88%9F%E5%B0%8F%E8%BD%A6%E8%BF%9C%E7%A8%8B%E5%BB%BA%E7%AB%8B%E9%80%9A%E4%BF%A1%E7%9A%84%E5%BF%AB%E9%80%9F%E5%90%AF%E5%8A%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A014(Article014) --><div class="note info flat"><p>本文记录了使用轻舟小车建立远程通信的快速启动步骤。<br>（如果你还没有修改过相关配置文件，进行过小车远程通信，建议请先按技术文档第324号的步骤来做）</p></div><h1 id="1-用轻舟小车进行建图步骤"><a href="#1-用轻舟小车进行建图步骤" class="headerlink" title="1. 用轻舟小车进行建图步骤"></a>1. 用轻舟小车进行建图步骤</h1><ol><li>启动小车电源，在连接小车的显示屏上登录系统。</li><li>远程电脑和小车都连接到同一热点网络，并登录Ubuntu系统。（远程电脑的Ubuntu中需要安装ROS和SSH）</li><li>远程电脑调出终端，使用ssh远程打开小车终端<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh nano@192.168.43.118</span><br><span class="line"># ip地址会随着公用网络的不同而变化，记得使用ifconfig指令去查询小车的ip</span><br></pre></td></tr></table></figure>注意用户名（不是主机名）对应。（用户名@主机名）</li><li>配置远程Rviz(远程bashrc配置、双端的hosts配置、虚拟机桥接设置、且确保远程电脑和轻舟机器人在hosts做地址映射时的IP前三段时一样的，如 192.168.1.xx.)</li><li>将 qingzhou_ws/src/qingzhou_nav/目录下的 rviz 文件夹复制到远程电脑 home 下，用于执行远程 rviz 时调用。</li><li>断开显示屏，把小车丢在空旷的地上，打开PS2模式。</li><li>远程电脑ssh开一个小车终端，调用基础程式：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch qingzhou_nav qingzhou_bringup.launch</span><br></pre></td></tr></table></figure></li><li>再远程电脑ssh打开一个小车终端，调用地图激光雷达开始建图程式：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roslaunch qingzhou_nav qingzhou_hdmap.launch</span><br></pre></td></tr></table></figure></li><li>远程电脑直接打开一个终端输入rviz，打开可视化窗口</li><li>在Rviz中，左上角打开File—&gt;Open Config，找到拷贝到远程电脑用的 rviz 文件夹，双击选中 gmapping.rviz</li><li>接着就可以远程手动遥控完成建图了，建议慢行多停，让它多扫描一会以加载地图。且确保建图时车头前不要有障碍物，会影响后续规划生成。</li><li>在保持rviz开启的状态下，再远程电脑连接ssh，定位到小车的地图存放文件夹：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd qingzhou_ws(或traditional_ws)/src/qingzhou_nav/maps/</span><br></pre></td></tr></table></figure></li><li>并输入保存地图命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rosrun map_server map_saver -f 地图名</span><br></pre></td></tr></table></figure></li></ol><h1 id="2-启用小车自动导航功能"><a href="#2-启用小车自动导航功能" class="headerlink" title="2. 启用小车自动导航功能"></a>2. 启用小车自动导航功能</h1><ol><li>将轻舟小车连接电脑显示器，找到 qingzhou_ws(或traditional_ws)/src/qingzhou_nav/launch 目录下的qingzhou_move_base.launch(或者qingzhou_nav l1_nav_pure.launch),打开后修改对应的地图名称位置为新地图名。</li><li>把小车丢在同一位置的空旷的地上，切换到AUT模式。</li><li>ssh-bringup+ssh-movebase(或者roslaunch qingzhou_nav l1_nav_pure.launch)+rviz-openconfig-找到copy到远程电脑的rviz文件夹的move_base.rviz文件</li><li>出现地图后，可通过 2D Nav Goal 发送目标点，轻舟机器人将去往相应位置。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 配置笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> ROS </tag>
            
            <tag> Linux </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> 轻舟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu系统和ROS的安装踩坑记录</title>
      <link href="/2023/05/08/Ubuntu%E7%B3%BB%E7%BB%9F%E5%92%8CROS%E7%9A%84%E5%AE%89%E8%A3%85%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/05/08/Ubuntu%E7%B3%BB%E7%BB%9F%E5%92%8CROS%E7%9A%84%E5%AE%89%E8%A3%85%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A013(Article013) --><div class="note info flat"><p>本文记录了在win10系统的笔记本上，安装Ubuntu系统，并且配置安装ROS的流程记录。</p></div><h1 id="1-下载并安装虚拟机"><a href="#1-下载并安装虚拟机" class="headerlink" title="1. 下载并安装虚拟机"></a>1. 下载并安装虚拟机</h1><p>首先，我们的目标是在笔记本上安装Ubuntu与ROS，为此我们为了安全性，最好将Ubuntu安装在虚拟机中。<br>这里我们选用了虚拟机VMware: <a href="https://my.vmware.com/en/web/vmware/downloads/details?downloadGroup=PLAYER-1600&amp;productId=1039&amp;rPId=51984">https://my.vmware.com/en/web/vmware/downloads/details?downloadGroup=PLAYER-1600&amp;productId=1039&amp;rPId=51984</a><br><img src="https://s2.loli.net/2023/05/08/mJ4KZ13DfR2C9Wu.png" alt="A014-01.png"><br>下载那个212.63MB大小的文件就是了。<br>【经过高人指点，虚拟机不推荐使用VMware，更推荐使用wsl和docker】<br>然后，一路点击下一步，记得安装在一个大点的硬盘里。<br>安装完成以后，我们先转头去下载获取Ubuntu的iso文件。</p><h1 id="2-下载并安装Ubuntu"><a href="#2-下载并安装Ubuntu" class="headerlink" title="2. 下载并安装Ubuntu"></a>2. 下载并安装Ubuntu</h1><p>Ubuntu官方下载地址：<a href="https://ubuntu.com/download/desktop">https://ubuntu.com/download/desktop</a><br>鉴于后续要安装ROS，会有适配与支持的问题，所以这里我们去查历史版本，下载20.04的LTS版本。（或者去查清华镜像）<br>接下来的”Ubuntu系统安装”与”设置Linux系统”部分可以参考这份教程的内容：<br><a href="https://blog.csdn.net/weixin_43525386/article/details/108920902#comments_24167114">https://blog.csdn.net/weixin_43525386/article/details/108920902#comments_24167114</a><br>在上面这个链接的三、四章有详细介绍。<br>【2个问题】</p><ol><li>一启动虚拟机就蓝屏？<br><img src="https://s2.loli.net/2023/05/08/9fNBCTJOs5HtYKD.jpg" alt="A014-03.jpg"><br>你的window系统需要打开支持虚拟机的功能。可以参看下面这份文章：<br><a href="https://blog.csdn.net/aoshilang2249/article/details/72851813?locationNum=4&amp;fps=1">https://blog.csdn.net/aoshilang2249/article/details/72851813?locationNum=4&amp;fps=1</a></li><li>安装Ubuntu时UI显示出错？无法点击继续？<br>其中在虚拟机中安装Ubuntu时可能会遇到分辨率显示不全，导致“下一步”按键无法显示的问题。可以参见这一份文档的解决方案：<br><a href="https://blog.csdn.net/Passerby_Wang/article/details/124075121">https://blog.csdn.net/Passerby_Wang/article/details/124075121</a><br>经过上述操作，应该可以成功在我们的笔记本电脑中安装虚拟机中的Ubuntu系统了。</li></ol><h1 id="3-安装ROS与一万个坑"><a href="#3-安装ROS与一万个坑" class="headerlink" title="3. 安装ROS与一万个坑"></a>3. 安装ROS与一万个坑</h1><p>经过前两章中的折腾，我们成功安装了一个基于虚拟机的Ubuntu系统，接下来我们需要通过Ubuntu的系统终端去安装ROS。<br>首先我们可以按Ctrl+Alt+T打开终端，并把终端固定在侧边栏上，方便后续打开。<br>然后，参看这份文章去安装ROS:<br><a href="https://blog.csdn.net/PlutooRx/article/details/127558240">https://blog.csdn.net/PlutooRx/article/details/127558240</a><br>在第三部分，配置ROS时可能会显示rosdep这个库并没有可安装候选<br><img src="https://s2.loli.net/2023/05/08/WZRgnOaXAUiy6kQ.jpg" alt="A014-02.jpg"><br>初步推测是因为软件源中缺少对应的库文件导致的，所以需要另外安装python的pip去安装rosdep这个库。<br>具体解决方案可以看这个文章的最后一部分：(你这链接好长a)<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://huaweicloud.csdn.net/63a568a8b878a54545946b55.html?spm=1001.2101.3001.6650.6&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~activity-6-120579608-blog-127558240.235^v33^pc_relevant_default_base3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~activity-6-120579608-blog-127558240.235^v33^pc_relevant_default_base3&amp;utm_relevant_index=12</span><br></pre></td></tr></table></figure><br>等跟着文章输入roscore后一切输出正常，就可以进行小乌龟测试辣。<br><img src="https://s2.loli.net/2023/05/08/YHbSBAdowNFMUvq.png" alt="A014-04.png"><br>到此为止，我们已经成功安装了Ubuntu系统和ROS。</p><h1 id="4-ROS的使用"><a href="#4-ROS的使用" class="headerlink" title="4. ROS的使用"></a>4. ROS的使用</h1>]]></content>
      
      
      <categories>
          
          <category> 配置笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> ROS </tag>
            
            <tag> Linux </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电音制作学习笔记</title>
      <link href="/2023/05/02/%E9%9F%B3%E9%A2%91%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BB%8B%E7%BB%8D/"/>
      <url>/2023/05/02/%E9%9F%B3%E9%A2%91%E6%8F%92%E4%BB%B6%E7%9A%84%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A012(Article013) --><h1 id="1-基础概念介绍"><a href="#1-基础概念介绍" class="headerlink" title="1. 基础概念介绍"></a>1. 基础概念介绍</h1><p>这里是关于电脑音乐制作的一些基础名词概念。</p><h1 id="1-1-宿主-Digital-Audio-Workstation-DAW"><a href="#1-1-宿主-Digital-Audio-Workstation-DAW" class="headerlink" title="1.1 宿主 (Digital Audio Workstation, DAW)"></a>1.1 宿主 (Digital Audio Workstation, DAW)</h1><p>宿主 = 音乐工作站软件，能录音、音频编辑、软音源编写、效果处理、乐谱生成等。<br>目前常见的宿主有Cubase、Pro Tools、Studio One、Logic、Sonar、Ableton Live、FL Studio、Reaper等等。<br>作为一个工作站，其上会有众多的插件作为扩展来支持人类庞大的声音世界。</p><h1 id="1-2-插件-Plug-in"><a href="#1-2-插件-Plug-in" class="headerlink" title="1.2 插件 (Plug-in)"></a>1.2 插件 (Plug-in)</h1><p>一般宿主软件本身都会自带一些基础插件。此外，各个软件厂商也独立开发了众多付费或免费插件，需要我们自己去搜集并安装使用。</p><ol><li>以格式分类：VST、AAX、AU<br>Pro Tools宿主只支持AAX格式插件；Logic宿主只支持AU格式插件；除此以外的其他宿主都可以或只能使用VST插件。<br>其中VST插件包含了VST和VSTI两种插件，其中VST负责对已有声音进行效果处理【效果器】，VSTI一般是虚拟乐器插件【音源】。</li><li>以架构分类：独立插件、插件平台+专用插件<br>独立插件是可以直接在宿主中使用的，但是专用插件需要额外安装一个插件平台进行管理支持。</li></ol><h1 id="1-3-音源插件"><a href="#1-3-音源插件" class="headerlink" title="1.3 音源插件"></a>1.3 音源插件</h1><p>上文中说到了VSTI是音源插件，而音源插件一般也可以分为【采样器】和【合成器】。<br>其中【采样器】是提前采样好了大量的声音，集成在了插件之中。<br>【合成器】不但能够模拟传统乐器的音色，还可以对原始电声进行变化、组合、加减、排列等，以加工成为更复杂有趣的声音。</p><h1 id="2-音源插件的记载"><a href="#2-音源插件的记载" class="headerlink" title="2. 音源插件的记载"></a>2. 音源插件的记载</h1><p>如何找到自己想要的音源插件？先在宿主自带的音源插件上摸索游玩，确定方向，再进行宇宙探索。<br>【古董级音源插件】East West Quantum Leap、Steinberg HyperSonic、Tascam GigaStudio (可能过时)<br>【插件平台】Native Instrument Kontakt (最大)、Best Service Engine、IK Multimedia SampleTank<br>【钢琴音源】Addictive Keys、Spectrasonics Keyscape<br>【鼓类音源】Addictive Drums、Native Instruments Battery<br>【吉他音源】Ilya Efimov、Ample Sound<br>【弦管乐音源】Spitfire Audio、Chris Hein、East West Holywood Orchestra<br>【民族乐音源】Kong Audio、Sonica (基于Kontakt平台)<br>【氛围音源】Sample Logic等 (基于Kontakt平台)<br>【人声音源】Soundiron Voice等 (基于Kontakt平台)<br>【合成器】Nexus、Serum、sylenth1<br>【效果器】Waves</p><h1 id="3-电音歌曲构成部分"><a href="#3-电音歌曲构成部分" class="headerlink" title="3. 电音歌曲构成部分"></a>3. 电音歌曲构成部分</h1><p>一般电音歌曲有以下组成部分：</p><ol><li>sub (sub bass, 超低音贝司)，频段(20Hz~80Hz)【可以在EQ平衡器中观察频率】</li><li>bass (贝司)，频段(80Hz~250Hz)</li><li>chord (和弦)，铺底用，和弦根音即是bass, 频段(250Hz~+Hz), 需要做低频切除（看看EQ）</li><li>lead (旋律)，核心，需要做低频切除（看看EQ），根据情况考虑中高频的衰减。</li><li>arp (琶音)，铺底用，【类似吉他和弦分解指法，T213121】</li><li>pad (舒缓和弦)，铺底用，类似chord，多用弦乐。【harmor合成器】</li><li>drum (鼓组)，节奏根基。</li><li>FX (效果)，包含过渡效果，特效音等。</li></ol><p>开头低音入，drop段频段铺满，叠叠音色。</p><h1 id="4-一些基础问题"><a href="#4-一些基础问题" class="headerlink" title="4. 一些基础问题"></a>4. 一些基础问题</h1><ol><li><p>如何使用EQ切除不需要的频段？<br>通道台选中通道—&gt;右击添加效果器—&gt;Filter找到“Fruity Parametric EQ2”—&gt;右上角“presets”—&gt;Mastering—&gt;XXHz cut<br>常用于切除sub的中高频段，切除chord和lead的低频段。<br>另外，chord和lead可能需要衰减，给arp一些增益以达到混音平衡效果，这是后话。</p></li><li><p>侧链是什么？<br>侧链，侧链压缩 (Side Chain)。该工具的起因是因为Kick的加入导致音量波动不平衡 (爆音)<br>侧链的效果即是-当Kick出现时，压低其他轨的音量；当Kick结束，抬回其他轨的音量。给Kick让出空间，提高张力。<br>通道台选中通道—&gt;右击添加效果器—&gt;找到“Kickstart”（用于4/4拍）<br>如果不用侧链，也可以画包络。<br>FL自带的limiter/gross beat都很好用。(侧链压缩教程)</p></li><li><p>发送轨是什么？<br>在通道控制台中，把多个通道发送到另一个单独的通道，可以以组的形式同时调制多个通道的效果。</p></li><li><p>包络是什么？<br>是一种对效果的“自动控制”，类似线性的开关。<br>例如，我们对发送到的通道轨添加一个kickstart的侧链控制，右键—&gt;”Create automation clip”—&gt;会生成一个新的Track，其中的线即是包络线，控制效果器的线性启用。<br>复制包络可以点击小扳手，copy state / Paste state<br>同理，也可以对音量启用包络控制。<br>更多，比如在血清SERUM[一款合成器]中，可以先转动参数—&gt;TOOLS菜单栏—&gt;Last tweaked—&gt;Create automation clip / 连接到控制器去控制</p></li><li><p>电平是什么？<br>在播放音乐时，随音量大小而起伏的条条，不可以超过0，超过0就会爆音。（通常会添加限制器/压缩器来保证电平为负值）<br>但是电平太低会导致响度过小，所以电平一般贴近0。（母带的部分）<br>在不做母带的时候，总轨的电平建议在-6~0，各个通道都要预留一定的电平空间，避免使用限制器直接进行总轨的音量压缩，会导致音质损失。</p></li></ol><h1 id="5-乐曲编排思路"><a href="#5-乐曲编排思路" class="headerlink" title="5. 乐曲编排思路"></a>5. 乐曲编排思路</h1><p>Intro：抓耳/舒缓/鼓点<br>主歌：过渡，铺垫<br>Build Up：主副歌之间的过渡（一般上升）<br>Drop：副歌<br>降低情感<br>break：随意发挥<br>Drop：副歌但是不同<br>End</p><h1 id="6-旋律制作的一些套路"><a href="#6-旋律制作的一些套路" class="headerlink" title="6. 旋律制作的一些套路"></a>6. 旋律制作的一些套路</h1>]]></content>
      
      
      <categories>
          
          <category> 音频处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 插件 </tag>
            
            <tag> 音源 </tag>
            
            <tag> 音乐制作 </tag>
            
            <tag> FL studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SD-WebUI的模型与配置使用笔记</title>
      <link href="/2023/04/20/SD-WebUI%E7%9A%84%E6%A8%A1%E5%9E%8B%E4%B8%8E%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/04/20/SD-WebUI%E7%9A%84%E6%A8%A1%E5%9E%8B%E4%B8%8E%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A017(Article017) --><div class="note info flat"><p>这篇文章主要对SD-WebUI所需的模型/插件等工具进行一个分类与梳理，便于记忆。</p></div><h1 id="0-一些相关网址"><a href="#0-一些相关网址" class="headerlink" title="0. 一些相关网址"></a>0. 一些相关网址</h1><p>模型辨别工具：spell.novelai.dev (可以用于分辨各个模型的类型)<br>模型分享网址：<a href="https://civitai.com">https://civitai.com</a> (有大量不同的模型可以下载学习)</p><h1 id="1-SD大模型"><a href="#1-SD大模型" class="headerlink" title="1. SD大模型"></a>1. SD大模型</h1><p>基本定义：SD大模型，也称Stable Diffusion大模型，现在也被叫做“底模”。<br>特征特点：格式后缀通常为”ckpt”, “safetensors”等。<br>安装路径：./models/Stable_diffusion<br>使用方式：在主界面的顶部第一个下拉菜单中进行选择。</p><h1 id="2-VAE"><a href="#2-VAE" class="headerlink" title="2. VAE"></a>2. VAE</h1><p>基本定义：变分什么什么编码器，通常就叫VAE，功能类似滤镜+微调。<br>特征特点：通常与部分大模型进行配套使用。<br>安装路径：./models/VAE<br>使用方式：在主界面顶部的SD VAE下拉菜单中进行选择。（可能需要在设置里设置显示）</p><h1 id="3-Embedding"><a href="#3-Embedding" class="headerlink" title="3. Embedding"></a>3. Embedding</h1><p>基本定义：是一种集合了大量提示词的模型，也叫“提示词打包(Textual Inversion)”，可以理解为高速吟唱。<br>特征特点：体积较小(几十KB)，多用做负面集合/多视图生成，节省提示词空间。<br>安装路径：./embeddings<br>使用方式：点击“生成”按钮下方的“红色卡片”按钮，点击目标embedding，添加集合词到文本框里。</p><h1 id="4-LoRA"><a href="#4-LoRA" class="headerlink" title="4. LoRA"></a>4. LoRA</h1><p>基本定义：该类模型可实现对特定人物物品的复刻，即提取特征。<br>特征特点：大小从100+MB到几百MB不等。<br>安装路径：./models/Lora<br>使用方式：点击“生成”按钮下方的“红色卡片”按钮，点击LoRA，选择目标LoRA模型，会添加带尖括号的lora触发词到文本框里。<br>注意事项：最好选择作者给出的大模型并去加载，并且抄点正负提示词，效果更好。</p><h1 id="5-Hypernetworks"><a href="#5-Hypernetworks" class="headerlink" title="5. Hypernetworks"></a>5. Hypernetworks</h1><p>基本定义：也叫做“超网络模型”，可通俗视为低配LoRA。<br>特征特点：不常用，但用于画风转换是当前的最优解。<br>安装路径：./models/hypernetworks<br>使用方式：使用红色卡片点击，添加触发词到文本框中。</p><h1 id="6-ControlNet"><a href="#6-ControlNet" class="headerlink" title="6. ControlNet"></a>6. ControlNet</h1><p>基本定义：controlnet是个插件，但他需要对应的模型去进行处理，其中最常用的就有姿态控制（结合openpose插件去实现）。<br>特征特点：安装好插件后，需要选择对应的预处理器以及处理模型来进行图像处理。<br>插件的处理模型放置路径：./extensions/sd-webui-controlnet/models<br>使用方式：（他就是个插件，直接用就行）<br>注意事项：需要注意对应预处理器和模型，详见对应表。</p>]]></content>
      
      
      <categories>
          
          <category> AI绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Stable Diffusion </tag>
            
            <tag> WebUI </tag>
            
            <tag> AI </tag>
            
            <tag> 笔记 </tag>
            
            <tag> Tag </tag>
            
            <tag> Prompt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SD-WebUI的Tag书写要点</title>
      <link href="/2023/04/07/SD-WebUI%E7%9A%84Tag%E4%B9%A6%E5%86%99%E8%A6%81%E7%82%B9/"/>
      <url>/2023/04/07/SD-WebUI%E7%9A%84Tag%E4%B9%A6%E5%86%99%E8%A6%81%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A018(Article018) --><h1 id="基于Nyan-Mix模型的tag分析"><a href="#基于Nyan-Mix模型的tag分析" class="headerlink" title="基于Nyan Mix模型的tag分析"></a>基于Nyan Mix模型的tag分析</h1><h2 id="0-一个tag案例"><a href="#0-一个tag案例" class="headerlink" title="0. 一个tag案例"></a>0. 一个tag案例</h2><p>【正向tag】</p><ol><li>画质词：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(Highest picture quality),(Master&#x27;s work),(ultra-detailed),(Detailed eye description:1.0),(lens flare:1.0),</span><br></pre></td></tr></table></figure></li><li>风格词:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(movie poster:1.0),(Tarot border:1.0),the portrait is centered,(close-up:1.0),(nagative space:0.8),(negative space:1.6),(solo),(floating colorful &#123;wind|water magic|ink|crystals|ice|fire|flame|lightning|web|rocks|sand|particles|sparkles|blood&#125;:1.0),(many colorful &#123;soap bubbles|clouds|thorns|spikes|vines|currents|spirals|halos|wings|tatoos|cubes|octahedron&#125;:1.0),(floating &#123;red|green|blue|aqua|purple|yellow|black|white|grey|pink|orange|lime&#125; &#123;ribbons|feathers|particles|blades|droplets|snowflakes|soft balls&#125;:1.0),(&#123;crystal|ice|fire|flame|wind|water|earth|stone|space|musical|sonic|vortex&#125; &#123;magic|wings&#125;:1.0), (&#123;ray tracing,glowing|dappled sunlight,light rays,caustics|night,black theme|mysterious,eerie|easygoing,pastel&#125;:1.2), (&#123;colorful|iridescent|multicolored&#125;:1.0),(beautiful detailed glow:1.0),</span><br></pre></td></tr></table></figure></li><li>姿态<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#123;leaning forward|leaning back|leaning to the side|&#125;:1.2),</span><br></pre></td></tr></table></figure></li><li>表情，面容，头发<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;(smile:1.0)|(smirk:1.0)|(grim expression:1.0)&#125;,(&#123;small|small||lips,eyelashes&#125;:1.0),&#123;(open mouth:1.0)|(closed mouth:1.0)|&#125;,(&#123;eyelashes|eyeshadow||&#125;),&#123;one eye closed|||&#125;,(&#123;red|green|blue|aqua|purple|yellow|black|white|grey|pink|orange|lime&#125; hair:1.4),(&#123;short|long|medium&#125; hair:1.0),(&#123;from below|from above|from side|from behind|facing viewer&#125;:1.3),(halo:1.3),(head tilt:1.0),(dynamic pose:1.1),(asymmetrical hair:1.2),(&#123;red|green|blue|aqua|purple|yellow|black|white|grey|pink|orange|lime&#125;</span><br></pre></td></tr></table></figure></li><li>衣装<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;armor|dress|collared shirt|suit|outfit&#125;:1.0),(&#123;formal|military|techwear|urban style|casual,casual clothes|fantasy,magician|feral,tribal|sci-fi,futuristic&#125;),(&#123;plaid skirt|layered skirt|puffy dress|tights|pants|shorts&#125;),</span><br></pre></td></tr></table></figure></li><li>眼睛，刘海，头发<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#123;red|green|blue|aqua|purple|yellow|black|white|grey|pink|orange|lime&#125; &#123;eyes|eyes|pupils&#125;:1.4),&#123;(forehead:1.5),asymmetrical bangs|diagonal bangs|hair between eyes|blunt bangs|swept bangs&#125;,&#123;one eye covered|ponytail|high twintails|||&#125;,&#123;straight hair|wavy hair|drill hair||&#125;,</span><br></pre></td></tr></table></figure></li><li>外部衣装<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;long coat|suit jacket|cloak|sweater|tie||&#125;,&#123;(floating cape:1.0),|&#125;</span><br></pre></td></tr></table></figure></li><li>人设<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#123;fox ears, fox girl|vampire, bat wings|pointy ears,(elf:0.5)||&#125;:1.1),</span><br></pre></td></tr></table></figure></li><li>背景设定<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#123;abstract background|city,skyscraper|forest,garden|castle|shrine|cave,underground|swamp|lake|winter|alien planet|&#125;:1.4),(&#123;indoors,inside|outdoors,outside&#125;:1.1),</span><br></pre></td></tr></table></figure></li><li>饰品<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;2$$witch hat|straw hat|crown|tiara|eyewear|glasses|heargear|hair flower|hairpin|hair bow|||&#125;,</span><br></pre></td></tr></table></figure></li><li>姿态，肤色，身像<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#123;sitting|flying|jumping|laying|standing|standing on one leg&#125;:1.1),(&#123;colored skin|white skin|blue skin|pale skin|tan|shiny skin|dark skin||&#125;:1.1),(&#123;full body|upper body|portrait|&#125;:1.25),</span><br></pre></td></tr></table></figure></li><li>神态<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;fang, skin fang|tongue|frown|lip biting|thinking|||||&#125;, &#123;empty eyes| symbol-shaped pupils, heart-shaped pupils| slit pupils, + +|||||&#125;</span><br></pre></td></tr></table></figure></li></ol><p>【负面tag】<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nsfw, (EasyNegative), [[[[[bad-artist-anime, sketch by bad-artist]]]]], [[[mutation, lowres, bad hands, [text, signature, watermark, username], blurry, monochrome, grayscale, realistic, simple background, limited palette]]], close-up, (swimsuit, cleavage, armpits, ass, navel, cleavage cutout), (forehead jewel:1.2), (forehead mark:1.5), (bad and mutated hands:1.3), (worst quality:2.0), (low quality:2.0), (blurry:2.0), multiple limbs, bad anatomy, (interlocked fingers:1.2),(interlocked leg:1.2), Ugly Fingers, (extra digit and hands and fingers and legs and arms:1.4), (deformed fingers:1.2), (long fingers:1.2)</span><br></pre></td></tr></table></figure></p><h2 id="1-常规tag写法"><a href="#1-常规tag写法" class="headerlink" title="1. 常规tag写法"></a>1. 常规tag写法</h2><p>1.分隔：不同的关键词tag之间，需要使用英文逗号,分隔，逗号前后有空格或者换行是不碍事的<br>e.g. 1girl,loli,long hair,low twintails（1个女孩，loli，长发，低双马尾）</p><p>2.混合：WebUi 使用 | 分隔多个关键词，实现混合多个要素，注意混合是同等比例混合，同时混。<br>e.g. 1girl,red|blue hair, long hair（1个女孩，红色与蓝色头发混合，长发）</p><p>3.增强/减弱：有两种写法<br>第一种 (提示词:权重数值)：数值从0.1~100，默认状态是1,低于1就是减弱，大于1就是加强<br>e.g. (loli:1.21),(one girl:1.21),(cat ears:1.1),(flower hairpin:0.9)</p><p>第二种 (((提示词)))，每套一层()括号增强1.1倍,每套一层[]减弱1.1倍。也就是套两层是1.1*1.1=1.21倍，套三层是1.331倍，套4层是1.4641倍。<br>e.g. ((loli)),((one girl)),(cat ears),[flower hairpin]和第一种写法等价</p><p>4.渐变：先按某种关键词生成，然后再此基础上向某个方向变化。<br>[关键词1:关键词2:数字X]<br>(i) 数字大于1时: 第X步前为关键词1，第X步后变成关键词2;<br>(ii) 数字小于1时: 总步数的百分之X前为关键词1，之后变成关键词2。</p><p>e.g. a girl with very long [white:yellow:16] hair 等价为<br>开始 a girl with very long white hair<br>16步之后a girl with very long yellow hair</p><p>e.g. a girl with very long [white:yellow:0.5] hair 等价为<br>开始 a girl with very long white hair<br>50%步之后a girl with very long yellow hair</p><h2 id="2-tag书写要点"><a href="#2-tag书写要点" class="headerlink" title="2. tag书写要点"></a>2. tag书写要点</h2><ol><li>将关键词控制在75个（100个）以内。</li><li>越关键的词，越往前放。</li><li>相似的同类，放在一起。</li><li>只写必要的关键词。</li></ol><h2 id="3-tag安排顺序"><a href="#3-tag安排顺序" class="headerlink" title="3. tag安排顺序"></a>3. tag安排顺序</h2><p>画质词&gt;&gt;<br>风格词&gt;&gt;<br>主体&gt;&gt;<br>外表：<br>发型，发色，衣服，<br>头部，颈部，手臂，<br>胸部，腹部，屁股，<br>腿部，脚部&gt;&gt;<br>表情&gt;&gt;<br>姿势&gt;&gt;<br>图片背景&gt;&gt;<br>NSFW/细节&gt;&gt;</p><p>例如：<br>(masterpiece:1.331), best quality,<br>illustration,<br>(1girl),<br>(deep pink hair:1.331), (wavy hair:1.21),(disheveled hair:1.331), messy hair, long bangs, hairs between eyes,(white hair:1.331), multicolored hair,(white bloomers:1.46),(open clothes),<br>beautiful detailed eyes, (purple|red eyes),<br>expressionless,<br>sitting,<br>dark background, moonlight, ,flower_petals,city,full_moon, </p>]]></content>
      
      
      <categories>
          
          <category> AI绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Stable Diffusion </tag>
            
            <tag> WebUI </tag>
            
            <tag> AI </tag>
            
            <tag> 笔记 </tag>
            
            <tag> Tag </tag>
            
            <tag> Prompt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 学习笔记1</title>
      <link href="/2023/04/07/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/"/>
      <url>/2023/04/07/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A020(Article020) --><p>Python学习推荐看菜鸟教程（中文）：<a href="https://www.runoob.com/python/python-tutorial.html">https://www.runoob.com/python/python-tutorial.html</a></p><h1 id="1-输入与输出"><a href="#1-输入与输出" class="headerlink" title="1.输入与输出"></a>1.输入与输出</h1><h2 id="1-1-C语言"><a href="#1-1-C语言" class="headerlink" title="1.1 C语言"></a>1.1 C语言</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">//数值型%d的输入输出</span></span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个整数: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;你输入的整数是：%d\n&quot;</span>, num);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//字符型%c的输入输出</span></span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个字符: &quot;</span>);</span><br><span class="line">    ch = getchar();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;你输入的字符是：%c\n&quot;</span>, ch);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//puts函数输出字符串</span></span><br><span class="line">    <span class="type">char</span> message[] = <span class="string">&quot;Hello, World!&quot;</span>;</span><br><span class="line">    <span class="built_in">puts</span>(message);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//putchar函数输出字符</span></span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    <span class="built_in">putchar</span>(ch);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1-2-Python"><a href="#1-2-Python" class="headerlink" title="1.2 Python"></a>1.2 Python</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输入input</span></span><br><span class="line">name = <span class="built_in">input</span>(<span class="string">&quot;请输入你的名字: &quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;你好, &quot;</span> + name + <span class="string">&quot;!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出print</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;这是一个字符串&quot;</span>)</span><br><span class="line">num = <span class="number">42</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;这是一个整数:&quot;</span>, num)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式输出.format()</span></span><br><span class="line">name = <span class="string">&quot;Alice&quot;</span></span><br><span class="line">age = <span class="number">30</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;姓名: &#123;&#125;, 年龄: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(name, age))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 格式输出f-strings</span></span><br><span class="line">name = <span class="string">&quot;Bob&quot;</span></span><br><span class="line">age = <span class="number">25</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;姓名: <span class="subst">&#123;name&#125;</span>, 年龄: <span class="subst">&#123;age&#125;</span>&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="2-正则表达式"><a href="#2-正则表达式" class="headerlink" title="2. 正则表达式"></a>2. 正则表达式</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r&#x27;\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]&#123;2,7&#125;\b&#x27;</span><br></pre></td></tr></table></figure><ul><li>r是指这段是原始字符串，不对<code>\</code>进行转义处理。</li><li>‘\b’是指单词边界，即单词和空格间的位置。前后都有。</li><li>[A-Za-z0-9._%+-]是指匹配英文字母（A-Za-z）、数字(0-9)、点、下划线、百分号、加减号。</li><li>[A-Z|a-z]是指匹配英文字母（A-Za-z）。</li><li>{2,7}是指匹配2到7次。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> C语言 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ControlNet插件使用手册</title>
      <link href="/2023/04/06/ControlNet%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/04/06/ControlNet%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A019(Article019) --><div class="note info flat"><p>首先本章要介绍的ControlNet是Stable Diffusion WebUI中的一个重要插件，它可以帮助AI绘制出我们想要的“姿态”、“手”与“物件”。可以让WebUI免于“抽卡”，实现绘图姿态自由。<br>参考视频：<a href="https://www.bilibili.com/video/BV1vL411X7U9">https://www.bilibili.com/video/BV1vL411X7U9</a></p></div><h1 id="0-ControlNet安装流程"><a href="#0-ControlNet安装流程" class="headerlink" title="0. ControlNet安装流程"></a>0. ControlNet安装流程</h1><p>打开WebUI,点击“扩展”(Extensions)菜单栏。在“扩展的git仓库网址”(URL for extension’s repository)参数栏中输入controlnet的git仓库地址：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Mikubill/sd-webui-controlnet</span><br></pre></td></tr></table></figure><br>然后点击安装，回到“设置”菜单栏重启WebUI以激活ControlNet插件。<br>此时如果安装成功的话，就可以在文生图的首页看见“controlnet”的插件框了。</p><h1 id="1-ControlNet模型下载"><a href="#1-ControlNet模型下载" class="headerlink" title="1. ControlNet模型下载"></a>1. ControlNet模型下载</h1><p>controlnet需要另外安装自己的控制模型来进行辅助。<br>原本的大型预训练模型： <a href="https://huggingface.co/lllyasviel/ControlNet/tree/main/models">https://huggingface.co/lllyasviel/ControlNet/tree/main/models</a><br>而压缩模型、第三方模型：<a href="https://huggingface.co/TencentARC/T2I-Adapter/tree/main/models">https://huggingface.co/TencentARC/T2I-Adapter/tree/main/models</a><br>其中：</p><ol><li>大型预训练模型有8个5.71GB的大模型</li><li>精简模型在第二个链接中，以“coadapter”开头，一共有6个（加载运算时间更短，对设备更友好）【推荐】</li><li>第三方模型是TX提供的，更快更小，而且有新功能color和style两个新模型。</li></ol><p>其中各个模型与ControlNet预处理器的对应关系如下图所示：<br><img src="https://s2.loli.net/2023/04/07/WCnPXdYqEJIpMVa.png" alt="A013-1.png"></p><p>我们需要把下载好的ControlNet模型丢到—&gt;启动器根目录下的<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\extensions\sd-webui-controlnet\models</span><br></pre></td></tr></table></figure><br>目录下，就OK拉！</p><h1 id="2-ControlNet插件参数介绍"><a href="#2-ControlNet插件参数介绍" class="headerlink" title="2. ControlNet插件参数介绍"></a>2. ControlNet插件参数介绍</h1><p>这里主要介绍一些大众常用的参数调节，由于ControlNet插件仍处于高频更新状态，所以可能界面大家都不太一样，但是主要的参数不会变化太多。</p><ol><li>启用：就是选了就启用</li><li>低显存优化：显存不够就选它（有时候我6G显存也会爆，就靠它了）</li><li>预处理器下拉菜单：每一个预处理器都决定了ControlNet不同的功能。（预处理器和模型都需要对应使用）</li><li>权重：Controlnet的发挥占比（低重绘+高权重=锁定图片细节/更改画风滤镜；高重绘+低权重=修改图片细节）</li><li>引导介入时机（输入权重）/引导退出时机（输出权重）：分别代表了ControlNet在第几步开始介入/退出。</li><li>画布宽高：ControlNet影响的画布大小（与生成的宽高比无关）</li><li>预处理预览：可以看见各个预处理器的预渲染。</li></ol><h1 id="3-Controlnet预处理器介绍"><a href="#3-Controlnet预处理器介绍" class="headerlink" title="3. Controlnet预处理器介绍"></a>3. Controlnet预处理器介绍</h1><p>每个ControlNet预处理器都有着不同的功能，下面就进行介绍：</p><h2 id="3-1-Canny-边缘检测"><a href="#3-1-Canny-边缘检测" class="headerlink" title="3.1 Canny (边缘检测)"></a>3.1 Canny (边缘检测)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">canny (Canny 边缘检测 (Canny edge detection)) -- control_sd15_canny</span><br></pre></td></tr></table></figure><p>“线稿”预处理器，用于标注轮廓，褶皱，动作，表情。多用于3转2（二次元开心）<br>缺点：主体容易受到背景轮廓影响。<br>具体参数：</p><ul><li>预处理器分辨率：线稿的细节强度（分辨率越高线稿越细致）</li><li>弱/强边缘判断：数值越大，检测到的细节就越少。（用于手绘线稿）</li></ul><h2 id="3-2-HED-边缘检测"><a href="#3-2-HED-边缘检测" class="headerlink" title="3.2 HED (边缘检测)"></a>3.2 HED (边缘检测)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hed (HED 边缘检测 (soft HED edge detection, 保留细节)) -- control_sd15_hed [fef5e48e]</span><br></pre></td></tr></table></figure><p>也是一种线稿类预处理器，但细节程度不可以调整。但是其可以保留光影效果，且在表现上高于Canny，所以更推荐HED</p><h2 id="3-3-Depth-深度检测"><a href="#3-3-Depth-深度检测" class="headerlink" title="3.3 Depth (深度检测)"></a>3.3 Depth (深度检测)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">depth (MiDaS 深度信息估算 (MiDaS depth estimation))/或者其他depth预处理器比如lerse -- control_sd15_depth [fef5e48e]</span><br></pre></td></tr></table></figure><p>depth系列作为深度检测，都可以获取景深（画面越白，离我们越近）<br>缺点：无法捕捉细节<br>所以常用于更换画风/主体/更换背景</p><p>【如何利用Depth更换背景？】</p><ol><li>先丢一张图片到controlnet插件中，点击启用和guess mode。</li><li>文生图中输入背景信息（负面prompt可以用EasyNegative，采样建议使用DPM++ 2M Karras）</li><li>调整一下controlnet的权重到0.4-0.5左右。</li><li>生成！</li></ol><h2 id="3-4-MLSD-线性检测"><a href="#3-4-MLSD-线性检测" class="headerlink" title="3.4 MLSD (线性检测)"></a>3.4 MLSD (线性检测)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mlsd (M-LSD 线条检测 (M-LSD line detection)) -- control_sd15_mlsd [fef5e48e]</span><br></pre></td></tr></table></figure><p>这个预处理器对线性十分敏感，不会改变图片的结构和透视关系，所以在房屋建筑/室内设计中很常用。<br>对于直线/棱角的检测很优秀。<br>可以通过添加“nobody”tag，去除示意图中的人物，只留下室内图。</p><h2 id="3-5-Normal-map-法线贴图"><a href="#3-5-Normal-map-法线贴图" class="headerlink" title="3.5 Normal map (法线贴图)"></a>3.5 Normal map (法线贴图)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">normal_map (法线贴图 (Normal map)) -- control_sd15_normal [fef5e48e]</span><br></pre></td></tr></table></figure><p>这个预处理器通过计算光线在每一个切面上的法线反射，生成一种凹凸的效果。因此，常用于检测主体，构建光影。<br>适合单主体/3D建模。<br>其中，背景识别阈值可以用于调整背景的识别（阈值越高，背景识别的可能性就越低，但是主体也有概率被吃掉）<br>总结来说，其功能为去除背景/保留光影。</p><h2 id="3-6-Openpose-姿态检测-【❤】"><a href="#3-6-Openpose-姿态检测-【❤】" class="headerlink" title="3.6 Openpose (姿态检测)【❤】"></a>3.6 Openpose (姿态检测)【❤】</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(OpenPose 姿态检测 (OpenPose pose detection)) -- control_sd15_openpose [fef5e48e]</span><br></pre></td></tr></table></figure><p>openpose可以用于判断主体的姿态动作，常配合另一个插件“openpose editor”<br>仓库地址如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/fkunn1326/openpose-editor</span><br></pre></td></tr></table></figure><br>从菜单栏打开openpose编辑器，主要要注意的有画布的宽高，以及“Detect from Image”可以从现成的图片识别姿态（半身图有概率识别出BUG）<br>调整好姿态以后，就可以点击文生图转到文生图的Controlnet插件中。<br>注意：此时，预处理器要选“none”，模型依旧“control_sd15_openpose [fef5e48e]”没有关系。</p><h2 id="3-7-Segmentation-语意分割"><a href="#3-7-Segmentation-语意分割" class="headerlink" title="3.7 Segmentation (语意分割)"></a>3.7 Segmentation (语意分割)</h2><p>用于修改风景图/室内设计图。</p><h2 id="3-8-Scribble-涂鸦"><a href="#3-8-Scribble-涂鸦" class="headerlink" title="3.8 Scribble (涂鸦)"></a>3.8 Scribble (涂鸦)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scribble (涂鸦 (scibble)) -- control_sd15_scribble [fef5e48e]</span><br></pre></td></tr></table></figure><p>这个预处理器用于拯救手残，画稿上色等领域。<br>只有拥有一定绘画基础的人才能驾御住。</p><h2 id="3-9-Fake-scribble-伪涂鸦"><a href="#3-9-Fake-scribble-伪涂鸦" class="headerlink" title="3.9 Fake scribble (伪涂鸦)"></a>3.9 Fake scribble (伪涂鸦)</h2><p>常用于材质更换，（设计图洗稿？）</p>]]></content>
      
      
      <categories>
          
          <category> AI绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Stable Diffusion </tag>
            
            <tag> WebUI </tag>
            
            <tag> AI </tag>
            
            <tag> 笔记 </tag>
            
            <tag> ControlNet </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UVR使用笔记</title>
      <link href="/2023/03/31/UVR%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/03/31/UVR%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A011(Article011) --><h1 id="1-UVR项目介绍"><a href="#1-UVR项目介绍" class="headerlink" title="1. UVR项目介绍"></a>1. UVR项目介绍</h1><p>UVR (Ultimate Vocal Remover) 是一款基于AI技术的音轨分离开源音频处理软件。目前已经更新到UVR 5.5版本，其中的模型支持做到多音轨分离，提取人声、提取伴奏、单独提取乐器（比如Bass,piano等等），其优点是占地很小，下载即用，开源免费，功能十分牛逼。</p><p>GUI项目地址：<a href="https://github.com/Anjok07/ultimatevocalremovergui/">https://github.com/Anjok07/ultimatevocalremovergui/</a><br>相关模型资源包：<a href="https://pan.baidu.com/s/14iK32JKIPvjmf1Kfq21mzg?pwd=hjhj">https://pan.baidu.com/s/14iK32JKIPvjmf1Kfq21mzg?pwd=hjhj</a> 提取码: hjhj</p><h1 id="2-界面介绍"><a href="#2-界面介绍" class="headerlink" title="2. 界面介绍"></a>2. 界面介绍</h1><p>这里的中文帮助翻译由up主 @痕继痕迹 提供。</p><h2 id="2-1-基础界面介绍："><a href="#2-1-基础界面介绍：" class="headerlink" title="2.1 基础界面介绍："></a>2.1 基础界面介绍：</h2><p><img src="https://s2.loli.net/2023/03/31/8DzbGPFsMVpUcOl.jpg" alt="A011-01.jpg"><br>其中需要说的是，基础界面会根据你选择的AI算法模型不同而呈现不同的界面选项。如图中介绍的一样，我们在设定了输入音频(input)和输出路径(output)后，需要设定选择的AI算法(Process Method)以及对应的模型(Model)，部分模型/算法需要用到“小扳手”中的高级设置内容。最后记得使用GPU加速。<br>目前v5.5中，Method的选择有：</p><ol><li>VR Architecture</li><li>MDX-Net</li><li>Demucs v3</li><li>Ensemble Mode (合奏模式)</li><li>Audio Tools (比较高级复杂)<br>一般情况下，我们使用前三种Method已经足够应对大多数规模的需求。接下来分别介绍选中VR Architecture、MDX-Net、Demucs、Ensemble Mode几种Method后，界面的变化以及配置说明。</li></ol><h2 id="2-2-VR-Architecture-选项介绍"><a href="#2-2-VR-Architecture-选项介绍" class="headerlink" title="2.2 VR Architecture 选项介绍"></a>2.2 VR Architecture 选项介绍</h2><p><img src="https://s2.loli.net/2023/03/31/MpSLYBIb1J9PfdK.jpg" alt="A011-02.jpg"><br>在so-vits-svc项目中，我们曾经用过这种Method进行对和声、底噪的去除。<br>在选中VR Architecture method后，一些主要模型和配置参数如图所示。<br>建议是根据说明多多尝试比较。</p><h2 id="2-3-MDX-Net-选项介绍"><a href="#2-3-MDX-Net-选项介绍" class="headerlink" title="2.3 MDX-Net 选项介绍"></a>2.3 MDX-Net 选项介绍</h2><p><img src="https://s2.loli.net/2023/03/31/97vaeRx8LCsWf4H.jpg" alt="A011-03.jpg"><br>这个Method我还没有用过，后续看缘分再说吧。</p><h2 id="2-4-Demucs-v3-选项介绍"><a href="#2-4-Demucs-v3-选项介绍" class="headerlink" title="2.4 Demucs v3 选项介绍"></a>2.4 Demucs v3 选项介绍</h2><p><img src="https://s2.loli.net/2023/03/31/Fd6zeQX1yfBM7kI.jpg" alt="A011-04.jpg"><br>在so-vits-svc项目中，我们曾经用过这种Method进行对音轨的分离。<br>在使用mdx_extra/mdx_extra_q这两个模型时，可以在Choose Stem(s)中选择特定的音轨，默认是可以提取四种音轨的。<br>在勾选项中，可以勾中“stem only”只导出我们设置的音轨。也可以勾中“Mix without stem only”来去除我们设置的音轨。（很牛）</p><h2 id="2-5-Ensemble-Mode-合奏选项介绍"><a href="#2-5-Ensemble-Mode-合奏选项介绍" class="headerlink" title="2.5 Ensemble Mode 合奏选项介绍"></a>2.5 Ensemble Mode 合奏选项介绍</h2><p><img src="https://s2.loli.net/2023/03/31/DpFE1h8NAMuyb7Z.jpg" alt="A011-05.jpg"></p><h2 id="2-6-Manual-Ensemble-手动合奏介绍"><a href="#2-6-Manual-Ensemble-手动合奏介绍" class="headerlink" title="2.6 Manual Ensemble 手动合奏介绍"></a>2.6 Manual Ensemble 手动合奏介绍</h2><p><img src="https://s2.loli.net/2023/03/31/LXnv2H4kQNe1AKY.jpg" alt="A011-06.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 音频处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> 笔记 </tag>
            
            <tag> UVR </tag>
            
            <tag> 分离音轨 </tag>
            
            <tag> 人声提取 </tag>
            
            <tag> 伴奏提取 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>so-vits-svc4.0项目配置笔记</title>
      <link href="/2023/03/31/so-vits-svc4.0%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/03/31/so-vits-svc4.0%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A010(Article010) --><h1 id="0-项目思路"><a href="#0-项目思路" class="headerlink" title="0.项目思路"></a>0.项目思路</h1><p>首先，配置项目环境，制作数据集，预处理数据集，配置训练参数，进行训练得到模型，把模型拿来推理，得到最终结果。<br>项目地址：<a href="https://github.com/svc-develop-team/so-vits-svc">https://github.com/svc-develop-team/so-vits-svc</a><br>后续更新专栏：<a href="https://docs.qq.com/doc/DUWdxS1ZaV29vZnlV?dver=">https://docs.qq.com/doc/DUWdxS1ZaV29vZnlV?dver=</a><br>旧版整合包下载：<a href="https://pan.baidu.com/s/1HZg5scN9JFcwujyqe3xRdA?pwd=fuqm">https://pan.baidu.com/s/1HZg5scN9JFcwujyqe3xRdA?pwd=fuqm</a> 提取码：fuqm （推荐去专栏中下载）<br>云端训练教程：<a href="https://www.bilibili.com/video/BV1vM4y1S7zB/">https://www.bilibili.com/video/BV1vM4y1S7zB/</a> （注意选择so-vits-svc 4.0 webui镜像）<br>视频参考：<a href="https://www.bilibili.com/video/BV1H24y187Ko/?share_source=copy_web&amp;vd_source=e1bb759c8ad4001f1201bdb4ffdc44fe">https://www.bilibili.com/video/BV1H24y187Ko/?share_source=copy_web&amp;vd_source=e1bb759c8ad4001f1201bdb4ffdc44fe</a></p><h1 id="1-制作数据集"><a href="#1-制作数据集" class="headerlink" title="1. 制作数据集"></a>1. 制作数据集</h1><h2 id="1-1-收集数据"><a href="#1-1-收集数据" class="headerlink" title="1.1 收集数据"></a>1.1 收集数据</h2><p>1~2小时的人声干声，以质量优先。质量&gt;&gt;数量</p><h2 id="1-2-处理数据"><a href="#1-2-处理数据" class="headerlink" title="1.2 处理数据"></a>1.2 处理数据</h2><p>主要是去除背景音乐，底噪与混响，做到尽可能的干声。</p><h3 id="1-2-1-UVR5去除人声和声和混响"><a href="#1-2-1-UVR5去除人声和声和混响" class="headerlink" title="1.2.1 UVR5去除人声和声和混响"></a>1.2.1 UVR5去除人声和声和混响</h3><p>【分离伴奏】</p><ol><li>Process Method: Demucs</li><li>Stem: Vocals</li><li>Demucs Model: v3|UVR-Model-1</li><li>勾选 GPU Conversion</li><li>开始处理，得到纯人声素材</li></ol><p>【消除混响和声】</p><ol><li>输入纯人声素材</li><li>Process Method: VR Architecture</li><li>Window Size: 320</li><li>Aggression: 10</li><li>VR Model: 5_HP_Karaoke_UVR</li><li>勾选 GPU Conversion/ Vocals Only</li><li>开始处理，得到去除底噪和声的人声素材</li></ol><h3 id="1-2-2-Audio-Slicer切片处理"><a href="#1-2-2-Audio-Slicer切片处理" class="headerlink" title="1.2.2 Audio Slicer切片处理"></a>1.2.2 Audio Slicer切片处理</h3><ol><li>将去除底噪和声的人声素材丢到Task List中</li><li>Settings中Minimum Length (ms)数值改为8000</li><li>设置一下output的路径</li><li>开始切片</li></ol><p>切片完成后，应该都是wav格式，44k采样率，16bit位深，如果不是的话请返回处理好。<br>理想情况下1个小时可以切出几百片，请将切片处在的文件夹命名为所属者的英文。比如“Niord”<br>我们把“Niord”文件夹丢到整合包的“dataset_raw”路径下。注意文件结构。</p><h1 id="2-数据集预处理"><a href="#2-数据集预处理" class="headerlink" title="2. 数据集预处理"></a>2. 数据集预处理</h1><p>做完上述操作后，双击”数据预处理.bat”。（电脑比较拉的话，可以少量多次进行）【4.0v2整合包在这里已经整合进了webui,不用再调用脚本了】<br>预处理做的大致是——数据重采样至44100hz，并生成配置文件与hubert/f0文件。<br>在目录下“dataset/44k”中就是已经预处理好的数据集了。包含了npy,pt和wav文件。<br>如果缺少了对应的文件，可能是wav格式问题，虚拟内存问题，切片长短问题等等。<br>另外，在目录下“filelists”中train.txt为数据集，test和via.txt为验证集，可以检查确认。</p><h1 id="3-修改配置参数并训练"><a href="#3-修改配置参数并训练" class="headerlink" title="3. 修改配置参数并训练"></a>3. 修改配置参数并训练</h1><p>这是训练前的最后一步，打开目录下的configs文件夹里的config.json文件。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第7行：&quot;learning_rate&quot;: 0.0001,     #与batch_size成正比。</span><br><span class="line">第13行：&quot;batch_size&quot;: 6,            # 数据抓取量，数值越高，速度越快，但越吃显存。</span><br><span class="line">第24行：&quot;keep_ckpts&quot;: 10            # 保留的最新的模型数量，默认3，每个模型的大小约几百MB，我这里设为10</span><br></pre></td></tr></table></figure><br>配置完成，双击“训练.bat”进行训练。<br>大致是训练一个个Epoch，每隔200步进行评估，显示模型质量与Loss（五个参数，越小越好）如果使用新包推理，可以使用tensorboard脚本看走势图。<br>训练好的模型会生成在logs/44k路径下，我们多多推理，选用推理效果最好的模型。<br>顺手可以训练一下聚类模型，3060大约在20分钟以内的样子。<br>关于看Loss，目前还比较玄学，但有一些炼丹经验，比如：“d/total”和“g/fm”最好保持稳定，“g/fm”一路向上就废了；后四个loss走势最好是反比例下降，一旦上飘不止就废了。</p><h2 id="3-1-更多操作流程"><a href="#3-1-更多操作流程" class="headerlink" title="3.1 更多操作流程"></a>3.1 更多操作流程</h2><ol><li>终止训练：Ctrl+C （注意释放与否）</li><li>继续训练：双击训练.bat【4.0v2整合包也整合进了webui】</li><li>重新训练：需要删除一些文件：<br>“logs/44k”中的文件全部删除<br>“dataset/44k”中的文件全部删除<br>“dataset_raw”中的文件全部删除<br>“pre_tarined_model”中复制两个预训练模型，丢到“logs/44k”里面。<br>然后就可以重新预处理数据集并再次训练。</li></ol><p>最终生成的模型是一个pt文件与pth文件。这时“logs/44k”目录下会有eval、config.json、pth、pt、log等文件。</p><h1 id="4-推理"><a href="#4-推理" class="headerlink" title="4. 推理"></a>4. 推理</h1><p>我们已经得到了模型，存放在“logs/44k”的路径下，接着我们双击“推理_webui.bat”，转浏览器local url<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:7860</span><br></pre></td></tr></table></figure><br>打开webui，进行以下操作。</p><ol><li>选择训练好的模型。（选G开头的，D开头的是判别器）</li><li>选择配置文件config.json</li><li>选择聚类模型（kmeans-10000.pt）</li><li>点击加载模型（数据质量差的话可以选模型增强，可以去除一定程度的电音）</li><li>选择音色（就是所属人）</li><li>上传要模仿的干声素材（控制在45s-60s以内，以免爆显存）可以用Goldwave/AU来裁剪。记得去除背景音乐、和声、底噪等。</li><li>调整聚类比例（聚类使得音色更像，但咬字下降）</li><li>勾选/不勾选 f0预测（用于语音转换，唱歌不能用）如果使用了f0，那么对于要模仿的原声要求标准就会降低。</li><li>选择f0均值滤波（池化）可以有效减少转音的哑音。</li><li>根据歌曲调式，进行变调，一般男女之间差了5个Key(5个半音)，根据伴奏调式，选择要不要直接降一个八度（12key）。</li><li>点击转换生成</li><li>后续音轨合成工作。（交给PR/AU了）</li></ol><details class="folding-tag" ><summary> 5. 炼丹笔记 </summary>              <div class='content'>              <h2 id="5-1-较小数据集训练记录"><a href="#5-1-较小数据集训练记录" class="headerlink" title="5.1 较小数据集训练记录"></a>5.1 较小数据集训练记录</h2><p>5-12s切片，426片，全长约66min，数据质量较好。<br>纯女人声素材，无唱歌素材。<br>loss收敛的很迅速，每一个epoch大约90s上下。<br>在epoch51时，停止第一次训练，步数模型7200步。<br>监听效果较好。<br>【以下是推理记录】<br>男推理，需要变调6-12.</p><ul><li>男说话，效果不好。（可能需要聚类）</li><li>男低音，效果还行。</li><li>男中音，效果一般。</li><li><p>男狂音，效果不好。</p></li><li><p>女说话，效果不好。（可能需要聚类）</p></li><li>女低音，效果很好。</li><li>女中音，效果很好。</li><li>女高音，效果还行。</li><li>女狂音，效果不好。</li></ul>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 音频处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
            <tag> 配置教程 </tag>
            
            <tag> so-vits </tag>
            
            <tag> svc </tag>
            
            <tag> AI仿声 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ChatGPT_academic配置使用教程</title>
      <link href="/2023/03/30/ChatGPT_academic%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2023/03/30/ChatGPT_academic%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A009(Article009) --><div class="note danger flat"><p>该项目帮助不大，并不建议部署使用。</p></div><h1 id="0-项目介绍"><a href="#0-项目介绍" class="headerlink" title="0. 项目介绍"></a>0. 项目介绍</h1><p>ChatGPT_academic是一个基于ChatGPT的API调用做出的webui插件，其功能截至目前包括了中英文学术润色，中英文互相翻译，阅读latex/pdf文献并进行概括。（最后一条限于ChatGPT的记忆力无法做到全文阅读）貌似还可以做到项目解构，优化算法，可以检查C++和Python的程式问题，还可以生成tex公式等等。<br>（虽然本质上就是调用各种Prompt来诱导ChatGPT，并且通过API让输出变得更为稳定，但是隔一段时间就net error以及网络波动的DEBUFF依旧还在）<br>该项目已经在Github上开源。<br>项目地址：<a href="https://github.com/binary-husky/chatgpt_academic">https://github.com/binary-husky/chatgpt_academic</a><br>本文主要介绍将该项目部署到本地的流程，以帮助不会代码的小白也能进行使用。</p><h1 id="1-项目下载"><a href="#1-项目下载" class="headerlink" title="1. 项目下载"></a>1. 项目下载</h1><p>首先需要打开项目网址：<a href="https://github.com/binary-husky/chatgpt_academic">https://github.com/binary-husky/chatgpt_academic</a><br>点击“Code”—&gt;”Download ZIP”，把项目压缩包丢到自己电脑的指定目录下(老规矩最好路径纯英文)我这里路径是直接丢到“F:\chatgpt_academic-master”。<br>当然如果你会“git clone”那最好，具体可以看Github上的项目介绍。</p><h1 id="2-Anaconda创建项目环境"><a href="#2-Anaconda创建项目环境" class="headerlink" title="2. Anaconda创建项目环境"></a>2. Anaconda创建项目环境</h1><p>为了避免不同项目之间受到不同环境的干扰，我们通常会使用Anaconda来配置不同的项目环境并激活调用。<br>首先你需要安装一个Anaconda，官网：<a href="https://www.anaconda.com/">https://www.anaconda.com/</a><br>直接下载并安装，具体配置选项默认即可。<br>具体不会的可以看这份专栏，介绍了Anaconda的安装过程：<a href="https://zhuanlan.zhihu.com/p/123188004">https://zhuanlan.zhihu.com/p/123188004</a><br>就如专栏中提到的一样，我们安装完Anaconda以后，还需要对其进行系统环境路径的设置。<br>设置好系统环境路径后，可以win+r并且cmd调出命令行窗口，输入conda —version查看conda是否安装成功了。<br>（你最好是成功了啊）<br>然后输入conda upgrade —all 让conda的所有库都更新到最新的状态。<br>接着我们就可以进行项目环境的具体配置了。<br>ChatGPT_academic对python的版本要求是3.11，所以我们先从开始菜单找到并打开Anaconda Prompt(anaconda3)命令窗口。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda create -n chatgpt_academic python=3.11.0</span><br><span class="line"># 就是使用conda创建一个名为chatgpt_academic的项目环境，其中python版本3.11</span><br></pre></td></tr></table></figure></p><h1 id="3-激活项目环境"><a href="#3-激活项目环境" class="headerlink" title="3. 激活项目环境"></a>3. 激活项目环境</h1><p>然后我们可以通过conda env list命令来查看当前系统所有的项目环境。其中带*的即是当前处于的环境。<br>接着我们使用VScode打开项目文件夹“chatgpt_academic-master”，新建一个cmd终端，进行环境的激活。<br>这里如果报错说无法识别命令，可能是conda刚安装的缘故，可以试试关闭VScode再打开，甚至重启。<br>并在VScode终端里进行conda环境查询“conda env list”进入conda环境。<br>如果成功的话，此时终端前面会显示（base）F:\chatgpt_academic-master 也就是你的项目路径。<br>并激活我们刚才配置的含有python3.11的chatgpt_academic这个环境，即输入:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda activate chatgpt_academic</span><br><span class="line">#就是激活chatgpt_academic这个项目环境</span><br></pre></td></tr></table></figure><br>如果成功的话，此时终端前面会显示（chatgpt_academic）F:\chatgpt_academic-master 也就是你的项目路径。<br>此时就可以安装依赖了。</p><h1 id="4-安装依赖"><a href="#4-安装依赖" class="headerlink" title="4. 安装依赖"></a>4. 安装依赖</h1><p>此时我们在VScode中终端中的（chatgpt_academic）F:\chatgpt_academic-master 也就是你的项目路径下。<br>我们输入：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install -r requirements.txt</span><br><span class="line"># 就是将同目录中一个requirements.txt中记录的库都加载到chatgpt_academic项目环境中。</span><br></pre></td></tr></table></figure></p><h1 id="5-配置API-Key和海外代理"><a href="#5-配置API-Key和海外代理" class="headerlink" title="5. 配置API Key和海外代理"></a>5. 配置API Key和海外代理</h1><p>我们在VScode打开项目文件夹，复制config.py这个配置文件，另存为config_private.py并再进行修改配置。<br>在config_private.py第2行中添加你的ChatGPT的API Key<br>在哪里获取？可以看这份专栏：<a href="https://zhuanlan.zhihu.com/p/615392081">https://zhuanlan.zhihu.com/p/615392081</a><br>把API Key填写进去。<br>接着就是海外代理的url填写。首先在第6行将配置参数改为True。<br>然后打开你的clash/科学上网工具，打开全局模式。<br>浏览器打开网址：<a href="https://ipapi.co/json/">https://ipapi.co/json/</a><br>右键—&gt;检查—&gt;网络(Network)—&gt;Ctrl+R—&gt;点击json文件—&gt;复制远程地址<br>替换掉第9行的Proxies项中的两个链接。<br>另外，TIMEOUT_SECONDS可以自己配置的长一些。</p><h1 id="6-项目启动"><a href="#6-项目启动" class="headerlink" title="6. 项目启动"></a>6. 项目启动</h1><p>我们配置好项目文件以后，挂好全局代理，输入启动指令。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">（chatgpt_academic）F:\chatgpt_academic-master &gt; python main.py</span><br></pre></td></tr></table></figure><br>然后打开localhost链接就可以看见该项目的webui了。<br>终端里按Ctrl+C可以终止项目。<br>再次启动时记得在对应的项目环境中启动。</p><ul><li>[参考视频]：<a href="https://www.bilibili.com/video/BV1Th411V75K/?share_source=copy_web&amp;vd_source=e1bb759c8ad4001f1201bdb4ffdc44fe">https://www.bilibili.com/video/BV1Th411V75K/?share_source=copy_web&amp;vd_source=e1bb759c8ad4001f1201bdb4ffdc44fe</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 配置笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
            <tag> ChatGPT </tag>
            
            <tag> Anaconda </tag>
            
            <tag> 配置教程 </tag>
            
            <tag> 学术润色 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>奇幻世界大冒险小说【绝赞咕咕中】</title>
      <link href="/2023/03/20/%E5%B0%8F%E8%AF%B4%E8%BF%9E%E8%BD%BD/"/>
      <url>/2023/03/20/%E5%B0%8F%E8%AF%B4%E8%BF%9E%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A008(Article008) --><details class="folding-tag" ><summary> 大纲构建-prompt </summary>              <div class='content'>              <p>世界设定：奇幻异世界<br>主要城市设定：<br>小说开头：<br>序  章<br>一位脸上脏兮兮的棕发少年躺在小牛车后的干草堆里打着小盹。土路上十分颠簸，感觉下一秒小木车就会当场散架。道路两旁是广阔的金色田野。时值夏日，耳边时不时还能听到有虫鸣声微微传来。<br>而在目光所尽处，是一座连绵不绝，高耸入云的山脉。当地人称其为玛尼亚山脉，那高大灰色的剪影仿佛世界尽头的高墙。<br>少年是一位流浪的旅人，身旁唯一陪着他的是一只可爱的米白色猫咪。<br>从记事起，他就在各个古老国度之间流浪。可是在这广袤的魔法大陆上，无论在哪个国家，完全没有魔力的他都过得很艰难。虽然条件艰苦，但是他却很快乐。<br>——<br>此刻，这辆小破车正一路颠簸地前往一个名叫瑞敏马斯特的新城邦，那里也有许多和他一样尚未觉醒魔力的普通人。<br>少年在邻国听说这个新城邦十分繁荣，国土辽阔，军力强盛，百姓也安居乐业，最近更是吸引了许多普通人移民前往。<br>“你醒了吗？车快到瑞敏了，还是把行李收拾一下比较好。”车夫嘟囔了一句。<br>然而少年睡得死沉，丝毫没有回应。<br>一只毛绒绒的小猫推了推少年的脸颊。<br>“唔啊…啊不要！”<br>少年突然惊醒，睡眼惺忪地晃了晃脑袋。<br>“抱歉抱歉，大叔，是要到了吗？”<br>“咳咳，就在前面了。”<br>——<br>少年探出头去，看见眼前的</p>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> ChatGPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记1</title>
      <link href="/2023/01/31/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/"/>
      <url>/2023/01/31/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A007(Article007) --><div class="note info flat"><p>本文将主要记录JavaScript的基础部分，当前是ES6(ECMAscript)规范。<br>本文的部分主要为js的基本原理与构成，与实际页面的操作仍有一定的距离。</p></div><details class="folding-tag" ><summary> JavaScript 变量、常量与数据类型 </summary>              <div class='content'>              <details class="folding-tag" ><summary> JavaScript 思维导图(1-5) </summary>              <div class='content'>              <p><img src="https://s2.loli.net/2023/02/05/siftRSAJWNowZ3G.jpg" alt="A007-1s.jpg"></p>              </div>            </details><h1 id="1-JavaScript简介"><a href="#1-JavaScript简介" class="headerlink" title="1. JavaScript简介"></a>1. JavaScript简介</h1><h2 id="1-1-概念"><a href="#1-1-概念" class="headerlink" title="1.1 概念"></a>1.1 概念</h2><p>H5/CSS3是标记语言，而JavaScipt是脚本语言，是一种运行在浏览器的编程语言。</p><h2 id="1-2-作用"><a href="#1-2-作用" class="headerlink" title="1.2 作用"></a>1.2 作用</h2><p>A.网页特效 (监听用户行为—网页作出反馈)<br>B. 表单验证 (表单数据的合法性判断)<br>C. 数据交互 (获取后台的数据, 渲染到前端/vue.js)<br>D. 服务端编程 (node.js)</p><h2 id="1-3-组成"><a href="#1-3-组成" class="headerlink" title="1.3 组成"></a>1.3 组成</h2><p>JavaScript由EMCAScript和Web APIs组成。<br>其中，EMCAScript是一套规范，规定了js的核心语法。<br>而APIs可以分为DOM(操作页面元素)和BOM(操作浏览器)两部分。</p><h2 id="1-4-权威手册"><a href="#1-4-权威手册" class="headerlink" title="1.4 权威手册"></a>1.4 权威手册</h2><p>MDN(mdn web docs): <a href="https://developer.mozilla.org/zh-CN/">https://developer.mozilla.org/zh-CN/</a></p><h2 id="1-5-js书写位置"><a href="#1-5-js书写位置" class="headerlink" title="1.5 js书写位置"></a>1.5 js书写位置</h2><p>A. 内部：html文件内部，body标签中的script标签内，跟在html元素后面(放在底部)。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><br>B. 外部：通过script标签引入外部js文件。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;my.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><br>C. 行内：直接在html标签元素内部写。(常见于vue)</p><h2 id="1-6-注释与结束符"><a href="#1-6-注释与结束符" class="headerlink" title="1.6 注释与结束符"></a>1.6 注释与结束符</h2><p>单行注释：//    (ctrl+/)<br>块注释：/**/    (ctrl+alt+a)<br>浏览器弹窗输出：alert(‘弹窗文本’)<br>js结束符：“;”     不同于CSS，js语句可以不用加分号也能运行。<br>结束符只要项目中统一使用/不使用即可。最新趋势是不加(如vue)。</p><h2 id="1-7-输入输出"><a href="#1-7-输入输出" class="headerlink" title="1.7 输入输出"></a>1.7 输入输出</h2><p><strong>A.</strong> 文档输出内容 document.write(‘’)<br>可以直接在页面上输出，且支持输出html标签。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">document.write(&#x27;我是div标签&#x27;)</span><br><span class="line">document.write(&#x27;&lt;h1&gt;我是标题&lt;/h1&gt;&#x27;)</span><br></pre></td></tr></table></figure><br><strong>B.</strong> 控制台打印输出 console.log(‘’)<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">console.log(&#x27;看看对不对&#x27;)</span><br><span class="line">console.log(&#x27;日志&#x27;)</span><br></pre></td></tr></table></figure><br><strong>C.</strong> 输入弹窗 prompt(‘’)<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prompt(&#x27;请输入您的年龄：&#x27;)</span><br></pre></td></tr></table></figure><br><strong>D.</strong> 输出弹窗 alert(‘’)<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(&#x27;弹窗警告&#x27;)</span><br></pre></td></tr></table></figure></p><h2 id="1-8-字面量-literal-脸"><a href="#1-8-字面量-literal-脸" class="headerlink" title="1.8 字面量(literal)脸"></a>1.8 字面量(literal)脸</h2><p>数字字面量：1000<br>字符串字面量：’’<br>数组字面量：[]<br>对象字面量：{}</p><h1 id="2-变量"><a href="#2-变量" class="headerlink" title="2. 变量"></a>2. 变量</h1><p>变量，即是容器。<br>声明并赋值，是变量的基本使用方式。</p><h2 id="2-1-变量声明与赋值"><a href="#2-1-变量声明与赋值" class="headerlink" title="2.1 变量声明与赋值"></a>2.1 变量声明与赋值</h2><p>现在js中变量声明使用let，老版本程序中多使用var.<br>例如：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let age = 18</span><br><span class="line">let unname = &#x27;字符串&#x27;</span><br><span class="line">console.log(age, unname)</span><br></pre></td></tr></table></figure><br>又或者输入递给变量：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let unname = prompt(&#x27;请输入姓名&#x27;)</span><br><span class="line">document.write(unname)</span><br></pre></td></tr></table></figure></p><h2 id="2-2-变量命名规则"><a href="#2-2-变量命名规则" class="headerlink" title="2.2 变量命名规则"></a>2.2 变量命名规则</h2><p>js中，变量命名规则如下：<br><strong>A.</strong> 不能使用关键字 (let,var,if等)<br><strong>B.</strong> 由下划线字母数字$组成，且不能数字开头<br><strong>C.</strong> 大小写敏感<br><strong>D.</strong> 要有含义，且使用驼峰命名法（mingMingFa）</p><h1 id="3-数组"><a href="#3-数组" class="headerlink" title="3. 数组"></a>3. 数组</h1><p>数组，是数据的组合。<br>数组可以存放任意形式的数据，比如数值、字符串、数组等都可以。<br><strong>元素：</strong>数组中的每个数据<br><strong>下标：</strong>数组中数据的编号<br><strong>长度：</strong>数组中数据的个数，通过‘数组名.length’属性可以调出。<br>可见，数组长度=序号+1</p><h2 id="3-1-数组声明与赋值"><a href="#3-1-数组声明与赋值" class="headerlink" title="3.1 数组声明与赋值"></a>3.1 数组声明与赋值</h2><p>声明形式如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let arr = [1,2,3,4,5]</span><br><span class="line">let names = [&#x27;小明&#x27;,&#x27;小刚&#x27;,&#x27;小红&#x27;]</span><br><span class="line">console.log(arr)</span><br></pre></td></tr></table></figure></p><h2 id="3-2-数组序号"><a href="#3-2-数组序号" class="headerlink" title="3.2 数组序号"></a>3.2 数组序号</h2><p>从0开始编号，arr[0],arr[1],…<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(arr[0]) //输出arr数组的第一个元素</span><br></pre></td></tr></table></figure></p><h1 id="4-常量"><a href="#4-常量" class="headerlink" title="4. 常量"></a>4. 常量</h1><p>常量，不会改变的变量。不可以重复赋值。<br>使用const来声明。初次声明必须赋值。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const G = 9.8</span><br></pre></td></tr></table></figure></p><h1 id="5-数据类型"><a href="#5-数据类型" class="headerlink" title="5. 数据类型"></a>5. 数据类型</h1><p>js中，数据类型可以分为两大类：A.基本数据类型  B.引用(复杂)数据类型<br>其中基本数据类型有5类：数字型、字符串型、布尔型、Null、Undefined<br>而复杂数据类型主要有：对象(object)</p><p>“简单数据类型直接把值存在栈中，复杂数据类型把地址存在栈中，再由地址指向堆中存放的数据。”</p><p>由于js是属于弱数据类型的语言，即在赋值前是不能确定具体数据类型的。</p><h2 id="5-1-数字型-number"><a href="#5-1-数字型-number" class="headerlink" title="5.1 数字型(number)"></a>5.1 数字型(number)</h2><p>数字型可以是：整数、小数、正数、负数<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let num = 10</span><br><span class="line">let num = 10.11</span><br><span class="line">let num = -10</span><br></pre></td></tr></table></figure></p><h3 id="5-1-1-算术运算符"><a href="#5-1-1-算术运算符" class="headerlink" title="5.1.1 算术运算符"></a>5.1.1 算术运算符</h3><p>加减乘除+-*/<br>取余%<br>例如：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4%2 --&gt; 4/2=2...0</span><br><span class="line">5%3 --&gt; 5/3=1...2</span><br><span class="line">3%5 --&gt; 3/5=0...3</span><br></pre></td></tr></table></figure><br>取余常用于判断数值能否被整除。</p><p>运算优先级：乘除取余&gt;加减, ()可以提高优先级</p><h3 id="5-1-2-计算错误NaN"><a href="#5-1-2-计算错误NaN" class="headerlink" title="5.1.2 计算错误NaN"></a>5.1.2 计算错误NaN</h3><p>NaN代表计算错误，(not a number)<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">console.log(&#x27;啊啊&#x27; - 2) //NaN</span><br><span class="line">console.log(NaN + 2) //NaN</span><br></pre></td></tr></table></figure></p><h2 id="5-2-字符串型-string"><a href="#5-2-字符串型-string" class="headerlink" title="5.2 字符串型(string)"></a>5.2 字符串型(string)</h2><p>js中，被‘’or””or``包裹的数据都是字符串，通常使用‘’。<br>例如：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let str = &#x27;&#x27;</span><br><span class="line">let str = &quot;噗噜噗噜&quot;</span><br><span class="line">let str = `123123`</span><br></pre></td></tr></table></figure><br>如果字符串中需要使用引号，一般外单内双/外双内单/转义符\’</p><h3 id="5-2-1-字符串拼接"><a href="#5-2-1-字符串拼接" class="headerlink" title="5.2.1 字符串拼接"></a>5.2.1 字符串拼接</h3><p>字符串间通常使用加号拼接<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">console.log(&#x27;阿巴&#x27;+&#x27;阿巴&#x27;)</span><br><span class="line">let unname = &#x27;派蒙&#x27;</span><br><span class="line">let dialogue = &#x27;阿巴阿巴&#x27;</span><br><span class="line">document.write(unname +&#x27;：&#x27;+ dialogue) //派蒙：阿巴阿巴</span><br></pre></td></tr></table></figure></p><h3 id="5-2-2-模板字符串"><a href="#5-2-2-模板字符串" class="headerlink" title="5.2.2 模板字符串"></a>5.2.2 模板字符串</h3><p>属于ES6新语法，用来简化处理字符串与变量混合使用的场景。<br>在``字符串中，${}来包裹变量名。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let age = 18</span><br><span class="line">document.write(`我今年$&#123;age&#125;岁了`)</span><br></pre></td></tr></table></figure></p><h2 id="5-3-布尔型-boolean"><a href="#5-3-布尔型-boolean" class="headerlink" title="5.3 布尔型(boolean)"></a>5.3 布尔型(boolean)</h2><p>true和false是布尔型的字面量。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let isCool = true</span><br></pre></td></tr></table></figure></p><h2 id="5-4-未定义型-undefined"><a href="#5-4-未定义型-undefined" class="headerlink" title="5.4 未定义型(undefined)"></a>5.4 未定义型(undefined)</h2><p>只声明了，但未赋值/定义的。<br>常用于检测有无数值传输过来。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let num</span><br></pre></td></tr></table></figure></p><h2 id="5-5-空型-null"><a href="#5-5-空型-null" class="headerlink" title="5.5 空型(null)"></a>5.5 空型(null)</h2><p>赋值了，但内容为空。<br>null实际是一个尚未创建的对象(object)，使用null占位。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let num = null</span><br></pre></td></tr></table></figure></p><h2 id="5-6-数据类型检测"><a href="#5-6-数据类型检测" class="headerlink" title="5.6 数据类型检测"></a>5.6 数据类型检测</h2><p>浏览器的控制台中，数字型（蓝色）、字符串型(黑色)<br>一般使用typeof来检测数据类型，常用运算符形式使用。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let num = 10</span><br><span class="line">typeof num  //运算符形式，number</span><br><span class="line">typeof(num) //函数形式，number</span><br></pre></td></tr></table></figure></p><h2 id="5-7-数据类型转换"><a href="#5-7-数据类型转换" class="headerlink" title="5.7 数据类型转换"></a>5.7 数据类型转换</h2><p>使用场景：弹窗输入为字符串型，需要转换为数字型。</p><h3 id="5-7-1-隐式转换"><a href="#5-7-1-隐式转换" class="headerlink" title="5.7.1 隐式转换"></a>5.7.1 隐式转换</h3><p>隐式转换方法：<br>A. +号只要有一边是字符串，拼接结果就是字符串。<br>B. 可以利用-*/运算符将将数据类型转换为数字型。(+开头时也能用)<br>例如：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2+2     //4</span><br><span class="line">2+&#x27;2&#x27;   //22</span><br><span class="line">2-&#x27;2&#x27;   //0</span><br><span class="line">+&#x27;123&#x27;  //123(数字型)</span><br></pre></td></tr></table></figure></p><h3 id="5-7-2-显式转换"><a href="#5-7-2-显式转换" class="headerlink" title="5.7.2 显式转换"></a>5.7.2 显式转换</h3><h4 id="Number"><a href="#Number" class="headerlink" title="Number()"></a>Number()</h4><p>Number()用于将数据类型转换为数字型。<br>例如：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let str = &#x27;123&#x27;</span><br><span class="line">Number(str)     //123</span><br><span class="line">Number(&#x27;阿巴&#x27;)  //NaN</span><br></pre></td></tr></table></figure><br>案例：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let num = Number(prompt(&#x27;输入工资&#x27;))    //输入数据直接数字型化</span><br><span class="line">let num = +prompt(&#x27;输入工资&#x27;)    //输入数据直接数字型化(隐式转换)</span><br></pre></td></tr></table></figure></p><h4 id="parseInt"><a href="#parseInt" class="headerlink" title="parseInt()"></a>parseInt()</h4><p>parseInt()用于从<strong>数字开头的</strong>字符串中提取数值的整数，并存为数字型。<br>例如：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parseInt(&#x27;12px&#x27;)    //12</span><br><span class="line">parseInt(&#x27;12.94px&#x27;)    //12</span><br></pre></td></tr></table></figure></p><h4 id="parseFloat"><a href="#parseFloat" class="headerlink" title="parseFloat()"></a>parseFloat()</h4><p>parseFloat()用于从<strong>数字开头的</strong>字符串中提取完整数值，并存为数字型。<br>例如：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parseFloat(&#x27;12px&#x27;)    //12</span><br><span class="line">parseFloat(&#x27;12.94px&#x27;)    //12.94</span><br></pre></td></tr></table></figure></p><details class="folding-tag" ><summary> JS基础语法案例集 1-5 </summary>              <div class='content'>              <h1 id="基础语法案例-1-5"><a href="#基础语法案例-1-5" class="headerlink" title="基础语法案例(1-5)"></a>基础语法案例(1-5)</h1><h2 id="1-点哪个按钮亮哪个"><a href="#1-点哪个按钮亮哪个" class="headerlink" title="1.点哪个按钮亮哪个"></a>1.点哪个按钮亮哪个</h2><p>需求分析：首先H5写4个按钮标签，然后做一个按钮选中的CSS样式，接着使用JS设定-如果单击则添加类选择器。</p><div class="tabs" id="1.1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.1-1">代码</button></li><li class="tab"><button type="button" data-href="#1.1-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.1-1"><p>代码：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    .pink &#123;</span><br><span class="line">      background-color: pink;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;button class=&quot;pink&quot;&gt;按钮1&lt;/button&gt;</span><br><span class="line">  &lt;button&gt;按钮2&lt;/button&gt;</span><br><span class="line">  &lt;button&gt;按钮3&lt;/button&gt;</span><br><span class="line">  &lt;button&gt;按钮4&lt;/button&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    let bts = document.querySelectorAll(&#x27;button&#x27;)           //把页面中所有的button选中，存进bts</span><br><span class="line">    for (let i = 0; i &lt; bts.length; i++) &#123;                  //遍历bts数组</span><br><span class="line">      bts[i].addEventListener(&#x27;click&#x27;, function () &#123;        //创建一个事件触发器，联动单击功能函数</span><br><span class="line">        document.querySelector(&#x27;.pink&#x27;).className = &#x27;&#x27;      //取消原先的选中显示</span><br><span class="line">        this.className = &#x27;pink&#x27;                             //给选中的按钮加上CSS</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.1-2"><p>效果图：<br><img src="https://s2.loli.net/2023/02/05/sIFuiHPCVWJgxjT.gif" alt="A007-1a.gif"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-输入与输出"><a href="#2-输入与输出" class="headerlink" title="2.输入与输出"></a>2.输入与输出</h2><h3 id="2-1-计算"><a href="#2-1-计算" class="headerlink" title="2.1 计算"></a>2.1 计算</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  let r = prompt(&#x27;请输入圆的半径：&#x27;)</span><br><span class="line">  let re = 3.14 * r * r</span><br><span class="line">  document.write(re)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="2-2-文本"><a href="#2-2-文本" class="headerlink" title="2.2 文本"></a>2.2 文本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  let uname = prompt(&#x27;请输入您的姓名:&#x27;)</span><br><span class="line">  let age = prompt(&#x27;请输入您的年龄:&#x27;)</span><br><span class="line">  document.write(`大家好，我叫$&#123;uname&#125;， 我今年$&#123;age&#125;岁了`)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="2-3-数字与文本"><a href="#2-3-数字与文本" class="headerlink" title="2.3 数字与文本"></a>2.3 数字与文本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  let num1 = +prompt(&#x27;请输入第一个数字：&#x27;)</span><br><span class="line">  let num2 = +prompt(&#x27;请输入第二个数字：&#x27;)</span><br><span class="line">  alert(`两个数相加的和是:$&#123;num1 + num2&#125;`)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-综合案例-订单生成"><a href="#3-综合案例-订单生成" class="headerlink" title="3.综合案例-订单生成"></a>3.综合案例-订单生成</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">  &lt;title&gt;订单生成&lt;/title&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    h2 &#123;</span><br><span class="line">      text-align: center;   //标题-行居中(tac)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    table &#123;</span><br><span class="line">      border-collapse: collapse;   //合并相邻边框(边框线从双线合并为实线)</span><br><span class="line">      height: 80px;         //行高设定</span><br><span class="line">      margin: 0 auto;         //使其在页面中居中</span><br><span class="line">      text-align: center;     //所有文字居中对齐</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    th &#123;</span><br><span class="line">      padding: 5px 30px;    //给表头一个padding,就不用设置表格宽度了。上下5px,左右30px</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    table,</span><br><span class="line">    th,</span><br><span class="line">    td &#123;</span><br><span class="line">      border: 1px solid #000;   //表格table-表头行th-表格行td-加边框</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;h2&gt;订单确认&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    // 1 用户输入</span><br><span class="line">    let price = +prompt(&#x27;请输入商品价格：&#x27;)</span><br><span class="line">    let num = +prompt(&#x27;请输入商品数量：&#x27;)</span><br><span class="line">    let address = prompt(&#x27;请输入收获地址：&#x27;)</span><br><span class="line">    // 2.计算总额</span><br><span class="line">    let total = price * num</span><br><span class="line">    // 3.页面打印渲染</span><br><span class="line">    document.write(`</span><br><span class="line">      //table&gt;tr&gt;th*5</span><br><span class="line">      //tr&gt;td*5</span><br><span class="line">      &lt;table&gt;</span><br><span class="line">          &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;商品名称&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;商品价格&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;商品数量&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;总价&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;收货地址&lt;/th&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line">          &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;小米青春版PLUS&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;price&#125;元&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;num&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;total&#125;元&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;address&#125;&lt;/td&gt;</span><br><span class="line">          &lt;/tr&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    `)</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>              </div>            </details>              </div>            </details><details class="folding-tag" ><summary> JavaScript 运算符、语句 </summary>              <div class='content'>              <details class="folding-tag" ><summary> JavaScript 思维导图(6-7) </summary>              <div class='content'>              <p><img src="https://s2.loli.net/2023/04/03/JFhDGkHuEpAZY4I.png" alt="A007-2s.png"></p>              </div>            </details><h1 id="6-运算符"><a href="#6-运算符" class="headerlink" title="6. 运算符"></a>6. 运算符</h1><h2 id="6-1-赋值运算符"><a href="#6-1-赋值运算符" class="headerlink" title="6.1 赋值运算符(=)"></a>6.1 赋值运算符(=)</h2><p>对变量赋值/累加赋值<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let num = 1</span><br><span class="line">num += 1    //等价于 num = num + 1 / 每次加一</span><br></pre></td></tr></table></figure><br>除了+=以外，还有-= <em>= </em>= /= %= 等累计赋值符。</p><h2 id="6-2-一元运算符"><a href="#6-2-一元运算符" class="headerlink" title="6.2 一元运算符"></a>6.2 一元运算符</h2><h3 id="6-2-1-自增符"><a href="#6-2-1-自增符" class="headerlink" title="6.2.1 自增符(++)"></a>6.2.1 自增符(++)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">++i       //前置自增(先自加再运算)</span><br><span class="line">//例如：</span><br><span class="line">let i = 1</span><br><span class="line">console.log(++i + 2)    //结果为2+2=4</span><br><span class="line"></span><br><span class="line">i++       //后置自增(先运算再自加)</span><br><span class="line">//例如：</span><br><span class="line">let i = 1</span><br><span class="line">console.log(i++ + 2)    //结果为1+2=3 (执行完后i为2)</span><br><span class="line"></span><br><span class="line">//案例：</span><br><span class="line">let i = 1</span><br><span class="line">console.log(i++ + ++i + i)    //结果为1+3+3=7</span><br></pre></td></tr></table></figure><h2 id="6-3-比较运算符"><a href="#6-3-比较运算符" class="headerlink" title="6.3 比较运算符"></a>6.3 比较运算符</h2><p>这类运算符的结果只可能为布尔型(true/false)。</p><ol><li><p>常见的比较运算符如下：<br><img src="https://s2.loli.net/2023/02/19/9a6SsBVXhk35KeY.jpg" alt="A007-6-3.jpg"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">= 赋值</span><br><span class="line">== 判断两边是否相等</span><br><span class="line">=== 判断两边是否类型和值都相等</span><br></pre></td></tr></table></figure><p>由于比较运算符自带隐式转换，所以支持将字符型转换为数字型再和数字型比较。（除了===）</p></li><li><p>字符串型之间也可以进行比较，比较的是ASCII码的大小。(字典序比较)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#一些常见的ASCII码</span><br><span class="line">0--&gt;48</span><br><span class="line">A--&gt;65</span><br><span class="line">a--&gt;97</span><br></pre></td></tr></table></figure></li><li><p>只要与NaN比较，那结果一定是false。因为NaN不等于任何值。</p></li><li><p>尽量不要比较小数，因为会出精度问题。(涉及小数的运算通常使用“放缩法”)</p></li><li><p>不同类型之间的比较会发生隐式转换。</p></li></ol><h2 id="6-4-逻辑运算符"><a href="#6-4-逻辑运算符" class="headerlink" title="6.4 逻辑运算符"></a>6.4 逻辑运算符</h2><p>逻辑运算符通常分为3个：逻辑与(&amp;&amp;)、逻辑或(||)、逻辑非(!)。<br>很简单，略。</p><ul><li>例子：判断1个数是4的倍数，但不是100的倍数。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let num = +prompt(&#x27;请输入一个数字：&#x27;)</span><br><span class="line">alert(num % 4 === 0 &amp;&amp; num % 100 !== 0)</span><br></pre></td></tr></table></figure></li></ul><h2 id="6-5-各个运算符之间的优先级"><a href="#6-5-各个运算符之间的优先级" class="headerlink" title="6.5 各个运算符之间的优先级"></a>6.5 各个运算符之间的优先级</h2><p><img src="https://s2.loli.net/2023/02/22/4vKBbtIelAwGkSp.jpg" alt="A007-6-5.jpg"></p><h1 id="7-语句"><a href="#7-语句" class="headerlink" title="7. 语句"></a>7. 语句</h1><p>主要语句可以被分为顺序语句、分支语句和循环语句，3大类。</p><h2 id="7-1-表达式和语句"><a href="#7-1-表达式和语句" class="headerlink" title="7.1 表达式和语句"></a>7.1 表达式和语句</h2><p>表达式：可以被求值的代码。<br>语句：可以被执行的代码。<br>表达式与语句的区别：表达式可以被求值，放在赋值语句右侧。但语句不一定有值。</p><h2 id="7-2-分支语句"><a href="#7-2-分支语句" class="headerlink" title="7.2 分支语句"></a>7.2 分支语句</h2><p>三大流程控制语句：顺序结构、分支结构、循环结构。<br>分支语句有：if语句、三元运算符、switch语句。</p><h3 id="7-2-1-if语句"><a href="#7-2-1-if语句" class="headerlink" title="7.2.1 if语句"></a>7.2.1 if语句</h3><p>if语句有三类：单分支、双分支、多分支。<br>有关条件判断的知识点—&gt;除了0的数字都为真，除了’’(空字符)的字符串都是真。</p><h4 id="if单分支语句"><a href="#if单分支语句" class="headerlink" title="if单分支语句"></a>if单分支语句</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (条件)&#123;</span><br><span class="line">  满足条件后执行的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="if双分支语句"><a href="#if双分支语句" class="headerlink" title="if双分支语句"></a>if双分支语句</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if (条件)&#123;</span><br><span class="line">  满足条件后执行的代码</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  不满足时执行的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="if多分支语句"><a href="#if多分支语句" class="headerlink" title="if多分支语句"></a>if多分支语句</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if (条件1)&#123;</span><br><span class="line">  满足条件1后执行的代码</span><br><span class="line">&#125; else if (条件2)&#123;</span><br><span class="line">  满足条件2时执行的代码</span><br><span class="line">&#125; else if (条件3)&#123;</span><br><span class="line">  满足条件3时执行的代码</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  满足其余条件时执行的代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="if语句的小例子"><a href="#if语句的小例子" class="headerlink" title="if语句的小例子"></a>if语句的小例子</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">let uname = prompt(&#x27;请输入用户名：&#x27;)</span><br><span class="line">let pwd = prompt(&#x27;请输入密码：&#x27;)</span><br><span class="line">if (uname === &#x27;pink&#x27; &amp;&amp; pwd === &#x27;123456&#x27;)&#123;</span><br><span class="line">  alert(&#x27;登录成功&#x27;)</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  alert(&#x27;用户名或密码错误&#x27;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-2-2-三元运算符"><a href="#7-2-2-三元运算符" class="headerlink" title="7.2.2 三元运算符"></a>7.2.2 三元运算符</h3><p>三元运算符，是种简化的if双分支语句。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">条件?满足条件执行的代码:不满足条件执行的代码</span><br></pre></td></tr></table></figure><br>一般用来取值。</p><ul><li><p>例1：示范</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 &gt; 5 ? alert(&#x27;假的&#x27;) : alert(&#x27;真的&#x27;)</span><br></pre></td></tr></table></figure></li><li><p>例2：数字补0<br>输入一个数，如果小于10，就在前面补0，如：03.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let num = prompt(&#x27;请输入一个数：&#x27;)</span><br><span class="line">num = num &lt; 10 ? 0 + num : num      //巧妙利用了隐式转换2次</span><br><span class="line">alert(num)</span><br></pre></td></tr></table></figure></li></ul><h3 id="7-2-3-switch语句"><a href="#7-2-3-switch语句" class="headerlink" title="7.2.3 switch语句"></a>7.2.3 switch语句</h3><p>switch语句，是个多分支选择语句。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">switch (数据) &#123;</span><br><span class="line">  case 数值1:</span><br><span class="line">    代码1</span><br><span class="line">    break</span><br><span class="line">  case 数值2:</span><br><span class="line">    代码2</span><br><span class="line">    break</span><br><span class="line">  default:</span><br><span class="line">    代码n</span><br><span class="line">  break</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>小例子：计算器<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">//1.用户输入（1个数字1个运算符1个数字）</span><br><span class="line">let num1 = +prompt(&#x27;请输入第一个数字：&#x27;)</span><br><span class="line">let num2 = +prompt(&#x27;请输入第二个数字：&#x27;)</span><br><span class="line">let sp = prompt(&#x27;请输入+ - * /其中之一的运算符：&#x27;)</span><br><span class="line">//2.判断输出</span><br><span class="line">switch(sp)&#123;</span><br><span class="line">  case &#x27;+&#x27;:</span><br><span class="line">    alert(&#x27;两个数字的加法操作是$(num1 + num2)&#x27;)</span><br><span class="line">    break</span><br><span class="line">  case &#x27;-&#x27;:</span><br><span class="line">    alert(&#x27;两个数字的加法操作是$(num1 - num2)&#x27;)</span><br><span class="line">    break</span><br><span class="line">  case &#x27;*&#x27;:</span><br><span class="line">    alert(&#x27;两个数字的加法操作是$(num1 * num2)&#x27;)</span><br><span class="line">    break</span><br><span class="line">  case &#x27;/&#x27;:</span><br><span class="line">    alert(&#x27;两个数字的加法操作是$(num1 / num2)&#x27;)</span><br><span class="line">    break</span><br><span class="line">  default:</span><br><span class="line">    alert(&#x27;请输入+-*/之中的运算符&#x27;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="7-3-循环语句"><a href="#7-3-循环语句" class="headerlink" title="7.3 循环语句"></a>7.3 循环语句</h2><p>常见的循环有while和for循环两种。都可以使用break和continue。</p><h3 id="7-3-1-断点调试（Debug）"><a href="#7-3-1-断点调试（Debug）" class="headerlink" title="7.3.1 断点调试（Debug）"></a>7.3.1 断点调试（Debug）</h3><p>浏览器—&gt;F12—&gt;sources—&gt;打开html—&gt;对行号打断点—&gt;刷新浏览器—&gt;发现整体状态停留在断点处—&gt;可以按下一步走一行</p><h3 id="7-3-2-while循环"><a href="#7-3-2-while循环" class="headerlink" title="7.3.2 while循环"></a>7.3.2 while循环</h3><p>while本质是在条件满足期间一直执行这段代码。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while (循环条件) &#123;</span><br><span class="line">  循环代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>while三要素：变量起始值，变化量，终止条件。</p><details class="folding-tag" ><summary> while循环练习 </summary>              <div class='content'>              <ol><li><p>输出1-100</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let i=1</span><br><span class="line">while (i&lt;=100)&#123;</span><br><span class="line">  document.write(这是第$&#123;i&#125;个数&lt;br&gt;)</span><br><span class="line">  i++</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>计算1+…+100=</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">let i=1</span><br><span class="line">let sum=0</span><br><span class="line">while (i&lt;=100)&#123;</span><br><span class="line">  sum=sum+i</span><br><span class="line">  i++</span><br><span class="line">&#125;</span><br><span class="line">document.write(1+...+100=$&#123;sum&#125;)</span><br></pre></td></tr></table></figure></li><li><p>计算1~100之间所有的偶数之和</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">let i=1</span><br><span class="line">let sum=0</span><br><span class="line">while (i&lt;=100)&#123;</span><br><span class="line">  //除二余数为0为偶数，除二不为0为奇数</span><br><span class="line">  if(i%2===0)&#123;</span><br><span class="line">  sum=sum+i</span><br><span class="line">  &#125;</span><br><span class="line">  i++</span><br><span class="line">&#125;</span><br><span class="line">document.write(1~100之间所有的偶数之和为$&#123;sum&#125;)</span><br></pre></td></tr></table></figure></li></ol><p>continue: 结束本次循环，继续下一次循环<br>break: 退出循环</p><ul><li>例子：你爱我吗？<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">while (true)&#123;</span><br><span class="line">  let str = prompt(&#x27;你爱我吗&#x27;)</span><br><span class="line">  if (str === &#x27;爱&#x27;)&#123;</span><br><span class="line">    break</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>              </div>            </details><h3 id="7-3-3-for循环"><a href="#7-3-3-for循环" class="headerlink" title="7.3.3 for循环"></a>7.3.3 for循环</h3><p>for循环示范：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for (循环前执行；运行条件；每次循环结束就执行)&#123;</span><br><span class="line">  循环代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>例如：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for (i=1;i&lt;=10;i++)&#123;</span><br><span class="line">  document.write(&#x27;*&#x27;) //打印10个‘*’</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>无限循环：for(;;){}</p><details class="folding-tag" ><summary> for循环练习 </summary>              <div class='content'>              <ol><li>遍历数组<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">let arr=[&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;]</span><br><span class="line">for (i=0;i&lt;arr.length;i++)&#123;   //或者i&lt;=arr.length-1</span><br><span class="line">  document.write(arr[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>打印row行col列的方阵‘★’（经典）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//用户输入</span><br><span class="line">let row = +prompt(&#x27;请输入行数&#x27;)</span><br><span class="line">let col = +prompt(&#x27;请输入列数&#x27;)</span><br><span class="line">//循环打印</span><br><span class="line">for (let i=1;i&lt;=row;i++)&#123;   //行</span><br><span class="line">    for (let j=1;j&lt;=col;j++)&#123;   //列</span><br><span class="line">        document.write(‘★’)</span><br><span class="line">    &#125;</span><br><span class="line">    document.write(&#x27;&lt;br&gt;&#x27;)  //换行</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>打印三角阵‘★’（经典）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//用户输入</span><br><span class="line">let row = +prompt(&#x27;请输入行数&#x27;)</span><br><span class="line">let col = +prompt(&#x27;请输入列数&#x27;)</span><br><span class="line">//循环打印</span><br><span class="line">for (let i=1;i&lt;=row;i++)&#123;   //行</span><br><span class="line">    for (let j=1;j&lt;=i;j++)&#123;   //列(列中操作数量跟着行来走j&lt;=i)(j&lt;=row-i+1就是倒三角了)</span><br><span class="line">        document.write(&#x27;★&#x27;)</span><br><span class="line">    &#125;</span><br><span class="line">    document.write(&#x27;&lt;br&gt;&#x27;)  //换行</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>打印九九乘法表<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">  &lt;style&gt;</span><br><span class="line">    span &#123;</span><br><span class="line">      display: inline-block;    //转行内块</span><br><span class="line">      width: 100px;             //设置一下块的宽度</span><br><span class="line">      padding: 5px 10px;        //给个盒内距</span><br><span class="line">      border: 1px solid pink;   //画个边框线</span><br><span class="line">      margin: 2px;              //来点盒外距</span><br><span class="line">      border-radius: 5px;       //边框来点圆角</span><br><span class="line">      box-shadow: 2px 2px 2px rgba(255, 192, 203, .4);    //来点阴影</span><br><span class="line">      background-color: rgba(255, 192, 203, .1);          //来点背景色</span><br><span class="line">      text-align: center;       //块内居中</span><br><span class="line">      color: hotpink;           //设置一下文字颜色</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    // 1. 外层循环控制行数</span><br><span class="line">    for (let i = 1; i &lt;= 9; i++) &#123;</span><br><span class="line">      // 2. 里层循环控制列数</span><br><span class="line">      for (let j = 1; j &lt;= i; j++) &#123;</span><br><span class="line">        document.write(`&lt;span&gt;$&#123;j&#125; X $&#123;i&#125; = $&#123;i * j&#125;&lt;/span&gt;`)   //用span标签包裹</span><br><span class="line">      &#125;</span><br><span class="line">      // 换行</span><br><span class="line">      document.write(&#x27;&lt;br&gt;&#x27;)</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details>              </div>            </details><details class="folding-tag" ><summary> JavaScript 数组 </summary>              <div class='content'>              <h1 id="8-数组操作"><a href="#8-数组操作" class="headerlink" title="8. 数组操作"></a>8. 数组操作</h1><details class="folding-tag" ><summary> JavaScript 思维导图(8) </summary>              <div class='content'>              <p><img src="https://s2.loli.net/2023/04/04/etTz1YudCgrEiBh.png" alt="A007-3s.png"></p>              </div>            </details><p>数组，是一种带顺序的数据类型。起始编号为0。（详见第3章）<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//数组声明</span><br><span class="line">let arr = [1,2,&#x27;arr&#x27;,true]    //字面量声明</span><br><span class="line">let arr = new Array(1,2,3,4)  //构造函数声明</span><br></pre></td></tr></table></figure></p><h2 id="8-1-遍历数组"><a href="#8-1-遍历数组" class="headerlink" title="8.1 遍历数组"></a>8.1 遍历数组</h2><p>在for循环中，for循环练习的第一个例子里已经提过一个简单的遍历数组的方法。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">let arr=[&#x27;A&#x27;,&#x27;B&#x27;,&#x27;C&#x27;]</span><br><span class="line">for (i=0;i&lt;arr.length;i++)&#123;</span><br><span class="line">  document.write(arr[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="8-2-数组小练习"><a href="#8-2-数组小练习" class="headerlink" title="8.2 数组小练习"></a>8.2 数组小练习</h2><h3 id="例1-数组求和与求平均值（遍历法）"><a href="#例1-数组求和与求平均值（遍历法）" class="headerlink" title="例1: 数组求和与求平均值（遍历法）"></a>例1: 数组求和与求平均值（遍历法）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">let arr = [2, 6, 1, 7, 4]</span><br><span class="line">// 1. 求和的变量 sum</span><br><span class="line">let sum = 0</span><br><span class="line">// 2.遍历累加</span><br><span class="line">for (let i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">  // sum = sum + arr[i]</span><br><span class="line">  sum += arr[i]</span><br><span class="line">&#125;</span><br><span class="line">console.log(`数组的和的结果是: $&#123;sum&#125;`)</span><br><span class="line">// 3. 平均值  和 / arr.length</span><br><span class="line">console.log(`数组的平均值结果是: $&#123;sum / arr.length&#125;`)</span><br></pre></td></tr></table></figure><h3 id="例2-数组求最值"><a href="#例2-数组求最值" class="headerlink" title="例2: 数组求最值"></a>例2: 数组求最值</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 初始化</span><br><span class="line">let arr = [2, 6, 1, 7, 400, 55, 88, 100]</span><br><span class="line">let max = arr[0]        // max 存最大值</span><br><span class="line">let min = arr[0]        // min 存最小值</span><br><span class="line">// 遍历数组</span><br><span class="line">for (let i = 1; i &lt; arr.length; i++) &#123;</span><br><span class="line">  max &lt; arr[i] ? max = arr[i] : max     // 如果 max 比数组元素的值小，我们就把这个元素赋值给 max</span><br><span class="line">  min &gt; arr[i] ? min = arr[i] : min     // 如果 min 比数组元素的值大，我们就把这个元素赋值给 min</span><br><span class="line">&#125;</span><br><span class="line">// 输出 max</span><br><span class="line">console.log(`最大值是: $&#123;max&#125;`)</span><br><span class="line">console.log(`最小值是: $&#123;min&#125;`)</span><br></pre></td></tr></table></figure><h2 id="8-3-数组的增删查改筛"><a href="#8-3-数组的增删查改筛" class="headerlink" title="8.3 数组的增删查改筛"></a>8.3 数组的增删查改筛</h2><h3 id="增：数组添加新的数据"><a href="#增：数组添加新的数据" class="headerlink" title="增：数组添加新的数据"></a>增：数组添加新的数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr.push(新增内容1,新增内容2)      //将新增元素(1个或多个)添加到数组末尾，并返回数组的新长度。【重点】</span><br><span class="line">arr.unshift(新增内容1,新增内容2)   //将新增元素(1个或多个)添加到数组开头，并返回数组的新长度。</span><br></pre></td></tr></table></figure><h3 id="删：删除数组中的数据"><a href="#删：删除数组中的数据" class="headerlink" title="删：删除数组中的数据"></a>删：删除数组中的数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arr.pop()                         // 删除数组中最后一个元素，并返回该元素的值。（一次只能删除一个）</span><br><span class="line">arr.shift()                       // 删除数组中前面第一个元素，并返回该元素的值。（一次只能删除一个）</span><br><span class="line">arr.splice(操作的下标，删除的个数)  // 删除数组中下标指定的元素，并指定删除的数量。（不给个数，直接默认后面全删了）</span><br></pre></td></tr></table></figure><h3 id="查：查询数组数据"><a href="#查：查询数组数据" class="headerlink" title="查：查询数组数据"></a>查：查询数组数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 数组[下标]</span><br><span class="line">let arr = []</span><br><span class="line">console.log(arr[0])   //由于是空数组，所以查询为undefined</span><br></pre></td></tr></table></figure><h3 id="改：数组重新赋值"><a href="#改：数组重新赋值" class="headerlink" title="改：数组重新赋值"></a>改：数组重新赋值</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 数组[下标]=新值</span><br><span class="line">let arr = []</span><br><span class="line">arr[0] = 1</span><br><span class="line">// 整体修改可以用遍历</span><br></pre></td></tr></table></figure><h3 id="筛：数组元素筛选"><a href="#筛：数组元素筛选" class="headerlink" title="筛：数组元素筛选"></a>筛：数组元素筛选</h3><p>这种情况一般有：(a) 查找大于某值的元素并存入新数组；(b) 对于数组中的元素进行去0操作…</p><details class="folding-tag" ><summary> 数组筛选练习 </summary>              <div class='content'>              <div class="tabs" id="8.3"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#8.3-1">查找并筛选出</button></li><li class="tab"><button type="button" data-href="#8.3-2">筛选并去除</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="8.3-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  // 重点案例</span><br><span class="line">  let arr = [2, 0, 6, 1, 77, 9, 54, 3, 78, 7]</span><br><span class="line">  // 1. 声明新的空的数组</span><br><span class="line">  let newArr = []</span><br><span class="line">  // 2. 遍历旧数组</span><br><span class="line">  for (let i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">    if (arr[i] &gt;= 10) &#123;</span><br><span class="line">      // 3. 满足条件 追加给新的数组</span><br><span class="line">      newArr.push(arr[i])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  // 4. 输出新的数组</span><br><span class="line">  console.log(newArr)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="8.3-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  let arr = [2, 0, 6, 1, 77, 0, 52, 0, 25, 7]</span><br><span class="line">  // 1. 声明一个新的数组</span><br><span class="line">  let newArr = []</span><br><span class="line">  // 2. 遍历筛选</span><br><span class="line">  for (let i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">    if (arr[i] !== 0) &#123;</span><br><span class="line">      newArr.push(arr[i])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  // 输出新数组</span><br><span class="line">  console.log(newArr)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details><h2 id="8-4-数组应用案例（柱形图）"><a href="#8-4-数组应用案例（柱形图）" class="headerlink" title="8.4 数组应用案例（柱形图）"></a>8.4 数组应用案例（柱形图）</h2><details class="folding-tag" ><summary> 综合案例-渲染柱形图 </summary>              <div class='content'>              <div class="tabs" id="8.4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#8.4-1">CSS3</button></li><li class="tab"><button type="button" data-href="#8.4-2">H5+ES6</button></li><li class="tab"><button type="button" data-href="#8.4-3">渲染效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="8.4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">//涉及到移动端CSS知识</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  * &#123;</span><br><span class="line">      margin: 0;</span><br><span class="line">      padding: 0;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .box &#123;</span><br><span class="line">      display: flex;                  //flex显示模式</span><br><span class="line">      width: 700px;</span><br><span class="line">      height: 300px;</span><br><span class="line">      border-left: 1px solid pink;    //左边框</span><br><span class="line">      border-bottom: 1px solid pink;  //右边框</span><br><span class="line">      margin: 50px auto;</span><br><span class="line">      justify-content: space-around;</span><br><span class="line">      align-items: flex-end;          //柱子底部对齐</span><br><span class="line">      text-align: center;             //文字水平居中</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .box&gt;div &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      width: 50px;</span><br><span class="line">      background-color: pink;</span><br><span class="line">      flex-direction: column;</span><br><span class="line">      justify-content: space-between;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .box div span &#123;</span><br><span class="line"></span><br><span class="line">      margin-top: -20px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .box div h4 &#123;</span><br><span class="line">      margin-bottom: -35px;</span><br><span class="line">      width: 70px;</span><br><span class="line">      margin-left: -10px;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="8.4-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  // 1. 四次弹框效果</span><br><span class="line">  // 声明一个新的数组</span><br><span class="line">  let arr = []</span><br><span class="line">  for (let i = 1; i &lt;= 4; i++) &#123;</span><br><span class="line">      arr.push(prompt(`请输入第$&#123;i&#125;季度的数据:`))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 盒子开头</span><br><span class="line">  document.write(` &lt;div class=&quot;box&quot;&gt;`)</span><br><span class="line"></span><br><span class="line">  // 盒子中间 利用循环的形式 跟数组有关系</span><br><span class="line">  for (let i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">      document.write(`</span><br><span class="line">        &lt;div style=&quot;height: $&#123;arr[i]&#125;px;&quot;&gt;</span><br><span class="line">          &lt;span&gt;$&#123;arr[i]&#125;&lt;/span&gt;</span><br><span class="line">          &lt;h4&gt;第$&#123;i + 1&#125;季度&lt;/h4&gt;</span><br><span class="line">        &lt;/div&gt;          </span><br><span class="line">      `)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // 盒子结尾</span><br><span class="line">  document.write(` &lt;/div&gt;`)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="8.4-3"><p><img src="https://s2.loli.net/2023/04/04/zrFse8OuWcd1f4l.gif" alt="A007-8-4.gif"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details>              </div>            </details><details class="folding-tag" ><summary> JavaScript 函数与匿名函数 </summary>              <div class='content'>              <h1 id="9-函数"><a href="#9-函数" class="headerlink" title="9. 函数"></a>9. 函数</h1><p><details class="folding-tag" ><summary> JavaScript 思维导图(9) </summary>              <div class='content'>              <p><img src="https://s2.loli.net/2023/05/29/ZX5piE8DRbg4A3L.png" alt="A007-4s.png"></p>              </div>            </details></p><p><p>函数，可以封装一部分代码方便调用。<br>函数声明方式：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function 函数名()&#123;</span><br><span class="line">  函数体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>函数调用方式：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数名()</span><br></pre></td></tr></table></figure><br>其中命名用小驼峰命名法、动词开头。</p></p><p><p>【函数的一些特性】</p></p><ol><li><strong>函数不调用不执行。</strong></li><li>同名函数，后面会覆盖前面的。</li><li>形参与实参的数量可以不一致。（形参过多undefined;实参过多由函数内部arguments变量装载）</li><li>return后就不执行了。（return结束函数；break结束循环和switch）</li></ol><h2 id="9-1-函数传参"><a href="#9-1-函数传参" class="headerlink" title="9.1 函数传参"></a>9.1 函数传参</h2><p>通过给函数赋予参数，可以实现对函数的输入。<br>例子：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//构建一个getSum函数，对一段数字序列进行求和。</span><br><span class="line">function getSum(start, end) &#123;           // 这里start和end属于“形参”: 形式上的参数。</span><br><span class="line">  let sum = 0</span><br><span class="line">  for (let i = start; i &lt;= end; i++) &#123;</span><br><span class="line">    sum += i</span><br><span class="line">  &#125;</span><br><span class="line">  console.log(sum)</span><br><span class="line">&#125;</span><br><span class="line">getSum(100, 200)  // 这里给的“100”和“200”属于“实参”：实际的参数。</span><br></pre></td></tr></table></figure><br>且通常为了让函数稳定不报错，会给形参赋予一个默认值。</p><details class="folding-tag" ><summary> 小练习-函数封装-数组求和 </summary>              <div class='content'>              <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function getArrSum(arr = []) &#123;</span><br><span class="line">  let sum = 0</span><br><span class="line">  for (let i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">    sum += arr[i]</span><br><span class="line">  &#125;</span><br><span class="line">  console.log(sum)</span><br><span class="line">&#125;</span><br><span class="line">getArrSum([1, 2, 3, 4, 5])</span><br><span class="line">getArrSum([11, 22, 33])</span><br><span class="line">getArrSum()  // 0</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="9-2-函数返回值"><a href="#9-2-函数返回值" class="headerlink" title="9.2 函数返回值"></a>9.2 函数返回值</h2><p>通过给函数加返回值，可以实现函数的输出。<br>在函数体中写“return 返回值”可以输出返回值。<br>例如：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//一种经典的返回值调用结构</span><br><span class="line">function fn()&#123;</span><br><span class="line">  return 20</span><br><span class="line">&#125;</span><br><span class="line">let re = fn()</span><br><span class="line">console.log(re)</span><br></pre></td></tr></table></figure><br>在这里，函数处理数据，但不输出，由返回值形式，以函数名“存储”输出，该使用时调出。<br>(a) 在使用return后，后面的代码不会被执行，函数会立刻结束。<br>(b) 如果不return，函数的返回值默认为undefined。</p><details class="folding-tag" ><summary> 小练习-函数返回值-求最大值函数 </summary>              <div class='content'>              <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function getMax(arr = []) &#123;</span><br><span class="line">  //遍历求数组最大元素</span><br><span class="line">  for (let i = 1; i &lt; arr.length; i++) &#123;</span><br><span class="line">    if(max &lt; arr[i]) &#123;</span><br><span class="line">      max =arr[i]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return max                         //设定函数返回值（返回多个值时请使用数组[x, y, ...]）</span><br><span class="line">&#125;</span><br><span class="line">let max = getMax([1, 2, 3, 4, 5, 6]) //函数输出给变量</span><br><span class="line">console.log(&#x27;该数组的最大值是：$&#123;max&#125;&#x27;)                     //变量正式显示</span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="9-3-函数的断点调试"><a href="#9-3-函数的断点调试" class="headerlink" title="9.3 函数的断点调试"></a>9.3 函数的断点调试</h2><p>网页-F12-Sources-html/js代码所在文件-点击行数进行断点调试-鼠标悬停可以看见各个变量的数值。</p><h2 id="9-4-作用域"><a href="#9-4-作用域" class="headerlink" title="9.4 作用域"></a>9.4 作用域</h2><p>定义：变量的可用范围<br>常见错误：函数内部的作用域 与 函数外的作用域 不互通。<br>一般分为全局作用域与局部作用域，即对应全局变量(script标签内部/js文件内)与局部变量(函数内部)。<br>【特殊情况】如果函数内部不声明直接赋值，就默认为全局变量。（非规范写法）<br>变量访问原则？就近查询，逐级上查。</p><h2 id="9-5-匿名函数"><a href="#9-5-匿名函数" class="headerlink" title="9.5 匿名函数"></a>9.5 匿名函数</h2><p>匿名函数声明方式：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">function () &#123;&#125;</span><br></pre></td></tr></table></figure><br>使用方法：</p><ol><li><p>函数表达式：将匿名函数赋给一个变量，通过变量名来调用匿名函数（不同于具名函数，必须要先声明才能调用）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let fn = function () &#123;</span><br><span class="line">  //函数体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>立即执行函数：防止变量污染。需要加分号，第二个小括号是调用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(function()&#123;&#125;)();</span><br><span class="line">or</span><br><span class="line">(function()&#123;&#125;());</span><br></pre></td></tr></table></figure><p>举个例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(function(x, y)&#123;</span><br><span class="line">  console.log(x + y)</span><br><span class="line">&#125;)(1, 2);</span><br></pre></td></tr></table></figure></li></ol><h2 id="9-6-综合案例：封装时间换算函数"><a href="#9-6-综合案例：封装时间换算函数" class="headerlink" title="9.6 综合案例：封装时间换算函数"></a>9.6 综合案例：封装时间换算函数</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  // 1. 用户输入</span><br><span class="line">  let second = +prompt(&#x27;请输入秒数:&#x27;)</span><br><span class="line">  // 2.封装函数</span><br><span class="line">  function getTime(t) &#123;</span><br><span class="line">    // console.log(t)  // 总的秒数</span><br><span class="line">    // 3. 转换</span><br><span class="line">    // 小时：  h = parseInt(总秒数 / 60 / 60 % 24)</span><br><span class="line">    // 分钟：  m = parseInt(总秒数 / 60 % 60)</span><br><span class="line">    // 秒数:  s = parseInt(总秒数 % 60) </span><br><span class="line">    let h = parseInt(t / 60 / 60 % 24)</span><br><span class="line">    let m = parseInt(t / 60 % 60)</span><br><span class="line">    let s = parseInt(t % 60)</span><br><span class="line">    h = h &lt; 10 ? &#x27;0&#x27; + h : h</span><br><span class="line">    m = m &lt; 10 ? &#x27;0&#x27; + m : m</span><br><span class="line">    s = s &lt; 10 ? &#x27;0&#x27; + s : s</span><br><span class="line">    // console.log(h, m, s)</span><br><span class="line">    return `转换完毕之后是$&#123;h&#125;小时$&#123;m&#125;分$&#123;s&#125;秒`</span><br><span class="line">  &#125;</span><br><span class="line">  let str = getTime(second)</span><br><span class="line">  document.write(str)</span><br><span class="line">  console.log(h)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="9-7-逻辑中断"><a href="#9-7-逻辑中断" class="headerlink" title="9.7 逻辑中断"></a>9.7 逻辑中断</h2><p>在逻辑与/逻辑或的运算时，由于（与中一假全假，或中一真全真）的原则，导致部分情况只需要读取左边就可以输出结果。<br>例1：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">let age = 18</span><br><span class="line">console.log(false &amp;&amp; age++) //使用逻辑中断，不读取右边的代码。</span><br><span class="line">console.log(age)            //由于逻辑中断，所以age依旧为18</span><br><span class="line">console.log(true || age++)  //使用逻辑中断，不读取右边的代码。</span><br><span class="line">console.log(age)            //由于逻辑中断，所以age依旧为18</span><br><span class="line">//如果逻辑与，两边真，则返回最后一个真值。</span><br></pre></td></tr></table></figure><br>例2：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function fn(x, y)&#123;</span><br><span class="line">  x = x || 0                //这里使用逻辑或做了一个逻辑中断，目的是给变量一个默认参数值为0，且不影响正常赋值。</span><br><span class="line">  y = y || 0                //当形参x,y都是未定义undefined，逻辑或中，一假则读后0。</span><br><span class="line">  console.log(x + y)        //当形参接收了实参数据时，逻辑或中，一真则逻辑中断。</span><br><span class="line">&#125;</span><br><span class="line">fn()</span><br></pre></td></tr></table></figure><br>【总结】逻辑与一假则中断；逻辑或一真则中断。</p><h2 id="9-8-转换为布尔型"><a href="#9-8-转换为布尔型" class="headerlink" title="9.8 转换为布尔型"></a>9.8 转换为布尔型</h2><p>对于一个变量，可以使用Boolean函数来转换。<br>‘’/0/undefined/null/false/NaN —&gt; 转换为布尔为false，其余转换为true。</p><p>例子：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(Boolean(&#x27;pink&#x27;)); //true</span><br></pre></td></tr></table></figure></p><h2 id="隐式转换复习"><a href="#隐式转换复习" class="headerlink" title="*隐式转换复习"></a>*隐式转换复习</h2><ol><li>“” + 1 = “1”</li><li>减法-只能用于数字，且遇到空字符串“”会转化为0</li><li>null数字转换后变为0</li><li>undefined数字转换后变为NaN</li></ol>              </div>            </details><details class="folding-tag" ><summary> JavaScript 对象与基本使用 </summary>              <div class='content'>              <h1 id="10-对象"><a href="#10-对象" class="headerlink" title="10. 对象"></a>10. 对象</h1><p><details class="folding-tag" ><summary> JavaScript 思维导图(10) </summary>              <div class='content'>              <p><img src="https://s2.loli.net/2023/06/07/p3WCueQGySRFkB9.png" alt="A007-5s.png"></p>              </div>            </details></p><p><h2 id="10-1-对象的定义"><a href="#10-1-对象的定义" class="headerlink" title="10.1 对象的定义"></a>10.1 对象的定义</h2><p>为了储存用户数据，全是数字很难分辨其实际意义，故而类似C语言的结构体，Javascript中也有这个概念——“对象”<br>“对象”是一种数据类型，是一种无序的数据集合（数组是有序的数据集合）<br>举个例子：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">let obj = &#123;</span><br><span class="line">  unname: &#x27;Niord&#x27;,</span><br><span class="line">  age: 18,</span><br><span class="line">  gender: &#x27;male&#x27;,</span><br><span class="line">  &#x27;my-name&#x27;: &#x27;Niord&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这就是一个典型的对象结构。</p></p><p><h2 id="10-2-对象的声明"><a href="#10-2-对象的声明" class="headerlink" title="10.2 对象的声明"></a>10.2 对象的声明</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let 对象名 = &#123;&#125;</span><br><span class="line">let 对象名 = new Object()</span><br></pre></td></tr></table></figure></p><p><h2 id="10-3-对象的使用"><a href="#10-3-对象的使用" class="headerlink" title="10.3 对象的使用"></a>10.3 对象的使用</h2><p>对象由属性和方法组成：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">let 对象名 = &#123;</span><br><span class="line">  属性名: 属性值, //对应名词、形容词</span><br><span class="line">  方法名: 函数    //对应描述一个动作</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></p><p><h2 id="10-4-对象的操作-增删改查"><a href="#10-4-对象的操作-增删改查" class="headerlink" title="10.4 对象的操作-增删改查"></a>10.4 对象的操作-增删改查</h2><h3 id="查询对象"><a href="#查询对象" class="headerlink" title="查询对象"></a>查询对象</h3><p>(a) 对象名.属性名<br>obj.unname  //Niord</p></p><p><p>(b) 对象名[‘属性名’]<br>obj[‘my-name’]  //Niord<br>(记得使用console.log等方法来输出)</p></p><p><h3 id="增加-修改对象描述"><a href="#增加-修改对象描述" class="headerlink" title="增加/修改对象描述"></a>增加/修改对象描述</h3><p>对象.(新)属性名 = 新值</p></p><p><h3 id="删除对象描述"><a href="#删除对象描述" class="headerlink" title="删除对象描述"></a>删除对象描述</h3><p>delete 对象名.属性<br>（但是最新语法已经不推荐这么做了）</p></p><p><h2 id="10-5-对象的方法-【重要】"><a href="#10-5-对象的方法-【重要】" class="headerlink" title="10.5 对象的方法 【重要】"></a>10.5 对象的方法 【重要】</h2><p>在上文中10.3章节中，我们提到过在对象中除了添加属性描述，还可以添加方法描述，而对应的值则为函数名。<br>这个架构其实和UIS语法中的《元件中动画的调用》有一些相似。<br>先举个例子：<br>这里我们用到了匿名函数来作为对象的方法描述。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">let person = &#123;</span><br><span class="line">  unname: &#x27;Niord&#x27;,</span><br><span class="line">  sayHi: function() &#123;</span><br><span class="line">    document.write(&#x27;Hi!&#x27;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>在这个语句中，我们在person对象中，创建了一个sayHi的方法，并用一个匿名函数来描述，输出一个Hi。<br>如何调用方法？<br>person.sayHi()<br>对象名.方法名()<br>即可调用，与其同样原理的有“document.write()”其实也是document对象中write的方法。</p></p><p><h2 id="10-6-遍历对象-【重要】"><a href="#10-6-遍历对象-【重要】" class="headerlink" title="10.6 遍历对象 【重要】"></a>10.6 遍历对象 【重要】</h2><p>如何便利地输出对象的所有信息？<br>与数组遍历类似，对象也可以遍历，遍历输出。<br>如下所示，我们使用for-in语法：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let arr = [&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;]   //我们先以数组为例，展示一下for-in语法。</span><br><span class="line">for (let k in arr) &#123;      //这里我们可以假设数组中存在一个序列k，但是这里k是字符串类型的。</span><br><span class="line">  console.log(k)</span><br><span class="line">  console.log(arr[k])     //然后我们就可以通过k来查找arr数组中的元素（属性/方法）</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>这是一种通过假设序列k来遍历的方法，在对象遍历中十分常用。<br>下面我们创建一个对象并使用for-in语法进行遍历。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//创建对象</span><br><span class="line">let obj = &#123;</span><br><span class="line">  unname: &#x27;Niord&#x27;,</span><br><span class="line">  age: 18,</span><br><span class="line">  gender: &#x27;male&#x27;,</span><br><span class="line">&#125;</span><br><span class="line">//遍历对象</span><br><span class="line">for (let k in obj) &#123;</span><br><span class="line">  console.log(k)        //先看看k遍历下来都是什么？--&gt;各个属性名，例如：&#x27;unname&#x27;</span><br><span class="line">  console.log(obj[k])   //这里看似obj[k]，实际上是obj[&#x27;unname&#x27;]，是对象查询中的第二种写法。（详见10.4）</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></p><p><h2 id="10-7-对象输出案例"><a href="#10-7-对象输出案例" class="headerlink" title="10.7 对象输出案例"></a>10.7 对象输出案例</h2><details class="folding-tag" ><summary> 对象渲染输出案例 </summary>              <div class='content'>              <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;caption&gt;学生列表&lt;/caption&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;序号&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;年龄&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;性别&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;家乡&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;!-- script写到这里 --&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // 1. 数据准备</span><br><span class="line">        let students = [</span><br><span class="line">            &#123; name: &#x27;小明&#x27;, age: 18, gender: &#x27;男&#x27;, hometown: &#x27;河北省&#x27; &#125;,</span><br><span class="line">            &#123; name: &#x27;小红&#x27;, age: 19, gender: &#x27;女&#x27;, hometown: &#x27;河南省&#x27; &#125;,</span><br><span class="line">            &#123; name: &#x27;小刚&#x27;, age: 17, gender: &#x27;男&#x27;, hometown: &#x27;山西省&#x27; &#125;,</span><br><span class="line">            &#123; name: &#x27;小丽&#x27;, age: 18, gender: &#x27;女&#x27;, hometown: &#x27;山东省&#x27; &#125;,</span><br><span class="line">            &#123; name: &#x27;晓强&#x27;, age: 16, gender: &#x27;女&#x27;, hometown: &#x27;蓝翔技校&#x27; &#125;</span><br><span class="line">        ]</span><br><span class="line">        // 2. 渲染页面</span><br><span class="line">        for (let i = 0; i &lt; students.length; i++) &#123;</span><br><span class="line">            document.write(`</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;$&#123;i + 1&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;students[i].name&#125;&lt;/td&gt;    //查询对象中的属性</span><br><span class="line">                &lt;td&gt;$&#123;students[i].age&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;students[i].gender&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;students[i].hometown&#125;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            `)</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure>              </div>            </details></p><p><h2 id="10-8-JS内置对象"><a href="#10-8-JS内置对象" class="headerlink" title="10.8 JS内置对象"></a>10.8 JS内置对象</h2><p>在JS中有一些对象是提前内置好的，常用的有：<br>console.log()<br>document.write()<br>这两用来输出的内置对象。<br>另外还有比较经典的Math对象，支持一系列数学操作。<br>比如：<br>Math.PI()       //输出PI<br>Math.random()   //输出0-1的随机数，左闭右开<br>Math.ceil()     //输出向上取整<br>Math.floor()    //输出向下取整<br>Math.round()    //四舍五入取整<br>parseInt()      //*暴力切除取整，支持字符串，字符混杂的情况<br>Math.max()<br>Math.min()<br>Math.abs()      //取绝对值<br>Math.pow()      //幂运算<br>更多请见MDN</p></p><p><h2 id="10-9-Math-random-的应用-【重要】"><a href="#10-9-Math-random-的应用-【重要】" class="headerlink" title="10.9 Math.random()的应用 【重要】"></a>10.9 Math.random()的应用 【重要】</h2><p><strong>(a) 生成0~10之间的随机整数</strong><br>Math.floor(Math.random()*(10 + 1))      //[0,1)—[0,10)—[1,11)—向下取整—0~10</p></p><p><p><strong>(b) 从数组中取随机元素</strong><br>Math.floor(Math.random()*arr.length)    //对一定长度的数组序列号取随机—0~？<br>因此，我们可以从中学到(随机点名)的实现方法。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">let arr = [&#x27;red&#x27;, &#x27;green&#x27;, &#x27;blue&#x27;]</span><br><span class="line">let random = Math.floor(Math.random() * arr.length)</span><br><span class="line">console.log(random)           //随机数组序号生成</span><br><span class="line">console.log(arr[random])      //随机抽选出一个数组元素</span><br></pre></td></tr></table></figure></p></p><p><p><strong>(c) 生成N~M之间的随机整数</strong><br>Math.floor(Math.random()*(M-N+1))+N     //[0,1)—[0,M-N+1)—[N,M+1)—向下取整—N~M<br>因此我们甚至可以包装成一个函数：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function getRandom(N, M) &#123;</span><br><span class="line">  return Math.floor(Math.random() * (M - N + 1)) + N</span><br><span class="line">&#125;</span><br><span class="line">console.log(getRandom(4, 8))    //直接输入我们想要的区间</span><br></pre></td></tr></table></figure></p></p><p><p><strong>(d) 猜数字小游戏(限定次数)</strong></p></p><p><details class="folding-tag" ><summary> 点击查看 </summary>              <div class='content'>              <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="comment">// 1. 随机生成一个数字 1~10</span></span><br><span class="line">  <span class="comment">// 取到 N ~ M 的随机整数</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">getRandom</span>(<span class="params">N, M</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (M - N + <span class="number">1</span>)) + N</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> random = <span class="title function_">getRandom</span>(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line">  <span class="comment">// 2. 设定三次  三次没猜对就直接退出</span></span><br><span class="line">  <span class="keyword">let</span> flag = <span class="literal">true</span>  <span class="comment">// 开关变量 </span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= <span class="number">3</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> num = +<span class="title function_">prompt</span>(<span class="string">&#x27;请输入1~10之间的一个数字:&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> (num &gt; random) &#123;</span><br><span class="line">      <span class="title function_">alert</span>(<span class="string">&#x27;您猜大了，继续&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (num &lt; random) &#123;</span><br><span class="line">      <span class="title function_">alert</span>(<span class="string">&#x27;您猜小了，继续&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      flag = <span class="literal">false</span></span><br><span class="line">      <span class="title function_">alert</span>(<span class="string">&#x27;猜对了，真厉害&#x27;</span>)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 写到for的外面来</span></span><br><span class="line">  <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;次数已经用完&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>              </div>            </details></p><p><p><strong>(e) 生成随机颜色</strong><br>这里分别展示两种颜色格式（16进制、RGB格式）</p></p><div class="tabs" id="10.10"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#10.10-1">生成16进制颜色</button></li><li class="tab"><button type="button" data-href="#10.10-2">生成RGB颜色</button></li><li class="tab"><button type="button" data-href="#10.10-3">把颜色赋给盒子</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="10.10-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//生成随机颜色函数</span><br><span class="line">function getRandomColor() &#123;</span><br><span class="line">  //以#ffffff格式生成随机颜色</span><br><span class="line">  let str = &#x27;#&#x27;</span><br><span class="line">  let arr = [&#x27;0&#x27;, &#x27;1&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;4&#x27;, &#x27;5&#x27;, &#x27;6&#x27;, &#x27;7&#x27;, &#x27;8&#x27;, &#x27;9&#x27;, &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;, &#x27;e&#x27;, &#x27;f&#x27;]</span><br><span class="line">  // 利用for循环随机抽6次 累加到str里面</span><br><span class="line">  for (let i = 1; i &lt;= 6; i++) &#123;</span><br><span class="line">    // 每次要随机从数组里面抽取一个  </span><br><span class="line">    // random 是数组的索引号 是随机的</span><br><span class="line">    let random = Math.floor(Math.random() * arr.length)</span><br><span class="line">    // str = str + arr[random]</span><br><span class="line">    str += arr[random]</span><br><span class="line">  &#125;</span><br><span class="line">  return str</span><br><span class="line">&#125;</span><br><span class="line">//函数调用</span><br><span class="line">console.log(getRandomColor())</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="10.10-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">function getRandomColor() &#123;</span><br><span class="line">  let r = Math.floor(Math.random() * 256)</span><br><span class="line">  let g = Math.floor(Math.random() * 256)</span><br><span class="line">  let b = Math.floor(Math.random() * 256)</span><br><span class="line">  return `rgb($&#123;r&#125;,$&#123;g&#125;,$&#123;b&#125;)`</span><br><span class="line">&#125;</span><br><span class="line">//函数调用</span><br><span class="line">console.log(getRandomColor())</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="10.10-3"><p>我们刚才使用getRandomColor()函数生成了随机颜色，那么如何赋给一个网页上的盒子呢？<br>这里我们用到内置document对象的querySelector方法，把创建好的div输入；<br>并通过属性/方法来调用修改颜色。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">style内，w300+h300创建一个300*300的盒子。</span><br><span class="line">script内，输入：</span><br><span class="line">const div = document.querySelector(&#x27;div&#x27;)</span><br><span class="line">div.style.backgroundColor = getRandomColor()</span><br></pre></td></tr></table></figure></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details><details class="folding-tag" ><summary> JavaScript 一些基础综合案例 </summary>              <div class='content'>              <p>构思：通过javascript的使用，循环渲染小部件，用于多部件的网页，并方便进行信息数据的管理。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;!-- 4. box核心内容区域开始 --&gt;</span><br><span class="line">  &lt;div class=&quot;box w&quot;&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div class=&quot;box-hd&quot;&gt;</span><br><span class="line">          &lt;h3&gt;精品推荐&lt;/h3&gt;</span><br><span class="line">          &lt;a href=&quot;#&quot;&gt;查看全部&lt;/a&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div class=&quot;box-bd&quot;&gt;</span><br><span class="line">          &lt;ul class=&quot;clearfix&quot;&gt;</span><br><span class="line"></span><br><span class="line">              //这里写一个小模块，打个样，不输出，待会直接循环输出。</span><br><span class="line">              &lt;!-- &lt;li&gt;</span><br><span class="line">                  &lt;a href=&quot;#&quot;&gt;</span><br><span class="line">                      &lt;img src=&quot;images/course01.png&quot; alt=&quot;&quot;&gt;</span><br><span class="line">                      &lt;h4&gt;</span><br><span class="line">                          Think PHP 5.0 博客系统实战项目演练</span><br><span class="line">                      &lt;/h4&gt;</span><br><span class="line">                      &lt;div class=&quot;info&quot;&gt;</span><br><span class="line">                          &lt;span&gt;高级&lt;/span&gt; • &lt;span&gt;1125&lt;/span&gt;人在学习</span><br><span class="line">                      &lt;/div&gt;</span><br><span class="line">                  &lt;/a&gt;</span><br><span class="line">              &lt;/li&gt; --&gt;</span><br><span class="line"></span><br><span class="line">              &lt;script&gt;</span><br><span class="line">                  //创建一个数组对象，存放一些数据。</span><br><span class="line">                  let data = [</span><br><span class="line">                      &#123;</span><br><span class="line">                          src: &#x27;images/course01.png&#x27;,</span><br><span class="line">                          title: &#x27;Think PHP 5.0 博客系统实战项目演练&#x27;,</span><br><span class="line">                          num: 1125     // 学习人数</span><br><span class="line">                      &#125;,</span><br><span class="line">                      //。。。中间省略一堆模块。。。</span><br><span class="line">                      &#123;</span><br><span class="line">                          src: &#x27;images/course04.png&#x27;,</span><br><span class="line">                          title: &#x27;自动添加的模块&#x27;,</span><br><span class="line">                          num: 1000</span><br><span class="line">                      &#125;</span><br><span class="line">                  ]</span><br><span class="line"></span><br><span class="line">                  //for循环输出对象信息（包在li标签、a标签里面）</span><br><span class="line">                  for (let i = 0; i &lt; data.length; i++) &#123;</span><br><span class="line">                      document.write(`</span><br><span class="line">                      &lt;li&gt;</span><br><span class="line">                          &lt;a href=&quot;#&quot;&gt;</span><br><span class="line">                              &lt;img src=$&#123;data[i].src&#125; title=&quot;$&#123;data[i].title&#125;&quot;&gt;</span><br><span class="line">                              &lt;h4&gt;</span><br><span class="line">                                  $&#123;data[i].title&#125;</span><br><span class="line">                              &lt;/h4&gt;</span><br><span class="line">                              &lt;div class=&quot;info&quot;&gt;</span><br><span class="line">                                  &lt;span&gt;高级&lt;/span&gt; • &lt;span&gt;$&#123;data[i].num&#125;&lt;/span&gt;人在学习</span><br><span class="line">                              &lt;/div&gt;</span><br><span class="line">                          &lt;/a&gt;</span><br><span class="line">                      &lt;/li&gt;</span><br><span class="line">                    `)</span><br><span class="line">                  &#125;</span><br><span class="line">              &lt;/script&gt;</span><br><span class="line">          &lt;/ul&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>              </div>            </details><details class="folding-tag" ><summary> JavaScript 堆与栈 </summary>              <div class='content'>              <h1 id="11-堆与栈"><a href="#11-堆与栈" class="headerlink" title="11. 堆与栈"></a>11. 堆与栈</h1><p><img src="https://s2.loli.net/2023/06/07/r2ZFvjWVz5m7fJk.png" alt="简单数据类型的堆栈存储.png"><br>可以从图中看到，简单数据类型直接将值存储在栈中，赋值后不会引起重赋值影响。<br><img src="https://s2.loli.net/2023/06/07/Xl2Y7RyzOk5Ndgp.png" alt="复杂数据类型的堆栈存储.png"><br>对应的，复杂数据类型（对象），会将值和属性存在堆中，栈中只有对应指向的地址，因此存在赋值后引起的重赋值变动影响。</p><h2 id="11-1-声明变量const优先"><a href="#11-1-声明变量const优先" class="headerlink" title="11.1 声明变量const优先"></a>11.1 声明变量const优先</h2><p>声明变量优先const，如果变量需要变化，再换成let。</p><p>简单数据类型，变量发生变化，就必须用let；<br>但是复杂数据类型，对象/数组发生追加，还是可以用const，因为栈中地址未发生变化。<br>但是，如果对象/数组中存储的类型发生了改变，就会导致地址发生变动，就会让const报错。（比如空变有）</p><p>因此，变量声明用const居多。</p><p>什么时候用let?<br>(a) 基本数据类型的值/复杂数据类型的地址发生改变，需要let<br>(b) 一个变量需要加减运算，例如循环中的i++等，需要let</p>              </div>            </details><p>更多JavaScript内容放在第二份js笔记中，将会记录一些API调用相关的内容。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> VSCode </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS3学习笔记2</title>
      <link href="/2022/12/23/CSS3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/"/>
      <url>/2022/12/23/CSS3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A006(Article006) --><div class="note info flat"><p>本文将在CSS3学习笔记1的基础内容上，记录CSS的更多内容。<br>涵盖了CSS盒子，CSS浮动，CSS定位，CSS装饰等知识内容。</p></div><details class="folding-tag" ><summary> CSS3盒子模型 </summary>              <div class='content'>              <p><details class="folding-tag" ><summary> CSS盒子-思维导图 </summary>              <div class='content'>              <p><img src="https://s2.loli.net/2022/12/25/xFRAX1bkodOJy4G.jpg" alt="A006-1s.jpg"></p>              </div>            </details></p><p><h1 id="1-CSS盒子模型"><a href="#1-CSS盒子模型" class="headerlink" title="1. CSS盒子模型"></a>1. CSS盒子模型</h1><p>盒子其实就是标签；盒子可分为4个部分：<br>（1）内容区域content-蓝色<br>（2）内边距区域padding-绿色<br>（3）边框区域border-黄色<br>（4）外边距区域margin-橙色</p></p><p>效果如图所示：<br><img src="https://s2.loli.net/2022/12/25/8fUwRzpyoH5M2Lh.jpg" alt="A006-1.jpg"></p><h2 id="1-1-内容content"><a href="#1-1-内容content" class="headerlink" title="1.1 内容content"></a>1.1 内容content</h2><p>常见属性有：<br>width/height(px)<br>bgc等等一系列的属性值<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">w200+h200+bgc</span><br></pre></td></tr></table></figure></p><h2 id="1-2-边框border"><a href="#1-2-边框border" class="headerlink" title="1.2 边框border"></a>1.2 边框border</h2><p>属性名: border<br>复合属性：线粗 线型 颜色；(可以不分先后顺序)<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">border: 10px solid red;</span><br></pre></td></tr></table></figure></p><ul><li>快捷键：bd + tab</li><li>线型：solid/dashed/dotted</li><li>只对某个方向显示边框？border-left/right/top/bottom属性</li><li>复合属性拆分？border-width/style/color等属性（用不上）</li></ul><h3 id="1-2-1-border例子"><a href="#1-2-1-border例子" class="headerlink" title="1.2.1 border例子"></a>1.2.1 border例子</h3><ul><li><p>例子1<br>需求：画一个400*400大小的盒子，要求边框线为黑色10px的实线。<br>解答：需要注意的是，边框线的粗也算在盒子大小里，需要考虑。<br>border会撑大盒子大小！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    width: 380px;</span><br><span class="line">    height: 380px;</span><br><span class="line">    background-color: green;</span><br><span class="line">    border: 10px solid #000;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>例子2<br>需求：给定一张png，画一个盒子<br>解答：使用PxCook确认测量与色号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">div&#123;</span><br><span class="line">    width: 280px;</span><br><span class="line">    height: 280px;</span><br><span class="line">    background-color: #ef4123;</span><br><span class="line">    border: 10px solid #00f;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="1-2-2-新浪导航例子"><a href="#1-2-2-新浪导航例子" class="headerlink" title="1.2.2 新浪导航例子"></a>1.2.2 新浪导航例子</h3><p>这是一个新浪导航栏的案例，涉及了盒子模型。<br><div class="tabs" id="1.2.2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.2.2-1">代码</button></li><li class="tab"><button type="button" data-href="#1.2.2-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.2.2-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">    &lt;title&gt;导航栏-盒子案例&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        .box&#123;</span><br><span class="line">            height: 40px;</span><br><span class="line">            background-color: #fff;</span><br><span class="line">            border-top: 3px solid #ff8500;</span><br><span class="line">            border-bottom: 1px solid #ededf0;</span><br><span class="line">        &#125;</span><br><span class="line">        .box a &#123;</span><br><span class="line">            /* 后代选择器：选中box类选择器后代中的a标签 */</span><br><span class="line">            width: 80px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            /* background-color: #ededf0; */</span><br><span class="line">            /* 推荐留着，可以看盒子的大小 */</span><br><span class="line">            display: inline-block;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 40px;</span><br><span class="line">            /* tac+lh使得文字居中 */</span><br><span class="line">            color: #4c4c4c;</span><br><span class="line">            font-size: 12px;</span><br><span class="line">            /* 字体高度fs */</span><br><span class="line">        &#125;</span><br><span class="line">        .box a:hover &#123;</span><br><span class="line">            background-color: #ededf0;</span><br><span class="line">            color: #ff8400;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 从外到内，从上到下 --&gt;</span><br><span class="line">    &lt;!-- 先尺寸，后格式 --&gt;</span><br><span class="line">    &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot;&gt;新浪导航&lt;/a&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot;&gt;新浪导航&lt;/a&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot;&gt;新浪导航&lt;/a&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot;&gt;新浪导航&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.2.2-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/24/cLEz9DGIYNXrm5g.jpg" alt="A006-1-2-2.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p><h2 id="1-3-内边距padding"><a href="#1-3-内边距padding" class="headerlink" title="1.3 内边距padding"></a>1.3 内边距padding</h2><p>padding可以用作复合属性。</p><ol><li>padding: 1个值—四个方向的内边距都是该值。</li><li>padding: 2个值—（上下-左右）</li><li>padding: 3个值—（上-左右-下）</li><li>padding: 4个值—顺时针（上-右-下-左）</li></ol><h3 id="1-3-1-padding例子"><a href="#1-3-1-padding例子" class="headerlink" title="1.3.1 padding例子"></a>1.3.1 padding例子</h3><p>需要注意的是padding也会撑大盒子大小！</p><p>需求：盒子300*300，背景粉，边框10px实线黑色，上下左右20px内边距。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">div&#123;</span><br><span class="line">    /* 300-2*20-2*10=240px */</span><br><span class="line">    width: 240px;</span><br><span class="line">    height: 240px;</span><br><span class="line">    background-color: pink;</span><br><span class="line">    border: 10px solid #000;</span><br><span class="line">    padding: 20px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="1-3-2-内减模式"><a href="#1-3-2-内减模式" class="headerlink" title="1.3.2 内减模式"></a>1.3.2 内减模式</h3><p>减法太麻烦了！可以用内减模式哦 — box-sizing: border-box;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">div&#123;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    /* 该模式下，wh直接限定了盒子的大小 */</span><br><span class="line">    width: 300px;</span><br><span class="line">    height: 300px;</span><br><span class="line">    background-color: pink;</span><br><span class="line">    border: 10px solid #000;</span><br><span class="line">    padding: 20px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3-3-新浪导航-盒子案例padding优化"><a href="#1-3-3-新浪导航-盒子案例padding优化" class="headerlink" title="1.3.3 新浪导航-盒子案例padding优化"></a>1.3.3 新浪导航-盒子案例padding优化</h3><p>如果文本内容不是四个字，而是5个字甚至更多？有概率会让a标签过大从而独行显示。是因为宽度属性限定死了，超出就会换行。<br>如何让宽度自动撑开？<br>首先，取消width属性，然后加入padding属性。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">    /* width: 80px; */</span><br><span class="line">    padding: 0 16px;</span><br><span class="line">    /* 优化撑开 */</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><h2 id="1-4-外边距margin"><a href="#1-4-外边距margin" class="headerlink" title="1.4 外边距margin"></a>1.4 外边距margin</h2><p>写法和padding一模一样，一个里一个外。<br>故而，略。</p><h3 id="1-4-1-margin相关问题"><a href="#1-4-1-margin相关问题" class="headerlink" title="1.4.1 margin相关问题"></a>1.4.1 margin相关问题</h3><h4 id="1-合并现象"><a href="#1-合并现象" class="headerlink" title="1. 合并现象"></a>1. 合并现象</h4><p>对于两个垂直布局的块元素，上下的margin会合并，取最大值。<br>解决方案：</p><ul><li>只给一个设置margin</li></ul><h4 id="2-塌陷现象"><a href="#2-塌陷现象" class="headerlink" title="2. 塌陷现象"></a>2. 塌陷现象</h4><p>对于两个互相嵌套的块元素，子元素的margin-top会让父元素一起往下塌陷。<br>解决方案：</p><ul><li>给父元素设置border-top/padding-top, 避开对子元素用margin-top.</li><li>给父元素设定overflow: hidden (推荐)</li><li>转换为行内块元素</li><li>设置浮动</li></ul><h2 id="1-5-清除默认样式"><a href="#1-5-清除默认样式" class="headerlink" title="1.5 清除默认样式"></a>1.5 清除默认样式</h2><p>一些标签会自带默认的margin和padding<br>如何清除？<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>或者也可以用并集选择器。<br>是一定会用的。</p><h2 id="1-6-版心居中"><a href="#1-6-版心居中" class="headerlink" title="1.6 版心居中"></a>1.6 版心居中</h2><p>常见的盒子，丢在水平居中位置。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/* 版心居中 */</span><br><span class="line">margin: 0 auto;</span><br></pre></td></tr></table></figure></p><h2 id="1-7-行内元素的垂直内外边距问题"><a href="#1-7-行内元素的垂直内外边距问题" class="headerlink" title="1.7 行内元素的垂直内外边距问题"></a>1.7 行内元素的垂直内外边距问题</h2><p>如果想用margin/padding改变行内标签的位置，垂直方向不会生效。<br>即：行内标签的margin/padding-top/bottom都不会生效。</p><p>解决方案：</p><ul><li>使用line-height属性</li></ul><h2 id="1-8-盒子案例-网页新闻列表"><a href="#1-8-盒子案例-网页新闻列表" class="headerlink" title="1.8 盒子案例-网页新闻列表"></a>1.8 盒子案例-网页新闻列表</h2><p>思路：从外到内，从上到下。考虑宽高，背景，框内外距，内容格式。<br><div class="tabs" id="1.7"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.7-1">代码</button></li><li class="tab"><button type="button" data-href="#1.7-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.7-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">    &lt;title&gt;网页新闻案例&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        /* 首先清除所有标签的默认盒子属性，并切换到内减模式 */</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* 用类选择器设定这个div盒子的属性值 */</span><br><span class="line">        /* 盒子宽高；边框线；外边距调节位置；内边距调节内容显示位置 */</span><br><span class="line">        .news&#123;</span><br><span class="line">            width: 500px;</span><br><span class="line">            height: 400px;</span><br><span class="line">            border: 1px solid #ccc;</span><br><span class="line">            margin: 50px auto;</span><br><span class="line">            padding: 42px 30px 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* h2来设定标题 */</span><br><span class="line">        /* 加边框底线，设定字的大小 */</span><br><span class="line">        .news h2 &#123;</span><br><span class="line">            border-bottom: 1px solid #ccc;</span><br><span class="line">            font-size: 30px;</span><br><span class="line"></span><br><span class="line">            /* 行高是1倍,给字和线之间加入内边距（非必须） */</span><br><span class="line">            line-height: 1;</span><br><span class="line">            padding-bottom: 9px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* 【拓展】去掉列表的标识符 */</span><br><span class="line">        ul&#123;</span><br><span class="line">            list-style: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* 对li操作，高度；边框底线；左缩进；内容垂直居中 */</span><br><span class="line">        .news li&#123;</span><br><span class="line">            height: 50px;</span><br><span class="line">            border-bottom: 1px dashed #ccc;</span><br><span class="line">            padding-left: 28px;</span><br><span class="line">            line-height: 50px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* 对a操作，去下划线；设定内容字体大小和颜色 */</span><br><span class="line">        .news a&#123;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">            font-size: 18px;</span><br><span class="line">            color: #666;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;news&quot;&gt;</span><br><span class="line">        &lt;h2&gt;最新文章/ New Article&lt;/h2&gt;</span><br><span class="line">        &lt;!-- ul&gt;li&gt;a --&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;北京招聘网页设计，平面设计，php&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;体验java魅力&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;ababababababababab&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;玛卡巴卡&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.7-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/24/tZfdTA6Q2hcN7kg.jpg" alt="A006-1-7.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p>              </div>            </details><details class="folding-tag" ><summary> CSS3浮动 </summary>              <div class='content'>              <h1 id="2-CSS浮动"><a href="#2-CSS浮动" class="headerlink" title="2. CSS浮动"></a>2. CSS浮动</h1><p><details class="folding-tag" ><summary> CSS浮动-思维导图 </summary>              <div class='content'>              <p><img src="https://s2.loli.net/2022/12/28/1HdTtGu9mhIivxq.jpg" alt="A006-2s.jpg"></p>              </div>            </details></p><p><h2 id="2-1-结构伪类选择器"><a href="#2-1-结构伪类选择器" class="headerlink" title="2.1 结构伪类选择器"></a>2.1 结构伪类选择器</h2><p>结构伪类选择器是一种利用H5结构寻找标签的选择器，常用于li标签。<br>常见选择器有：</p></p><p><ul></p><p><li>li:first-child {css}  //找第一个li</li></p><p><li>li:last-child {css}  //找最后一个li</li></p><p><li>li:nth-child(x) {css}  //找第x个li 【常用】</li></p><p><li>li:nth-last-child(x) {css}  //找倒数第x个li</li></p><p><li>li:nth-child(2n) {css}  //找第偶数个li 【常用】<br>其中，li:nth-child(x) {css}是最常用的形式，x可以用公式表达，n会从0开始数。<br>例如：</li></p><p><li>偶数：2n</li></p><p><li>奇数：2n+1</li></p><p><li>前5个：-n+5</li></p><p><li>从第5个开始：n+5</li><br>&lt;/ul&gt;</p><p><h2 id="2-2-伪元素"><a href="#2-2-伪元素" class="headerlink" title="2.2 伪元素"></a>2.2 伪元素</h2><p>伪元素是使用CSS做出的伪标签，常用于装饰，依赖于父标签可分为前和后两种，必须设置content属性才能生效，默认是行内元素。<br>常见形式：</p></p><p><ul></p><p><li>.father::before {css}</li></p><p><li>.father::after {css}<br>默认是行内元素，需要改变显示模式才可以调整宽高。</li><br>&lt;/ul&gt;</p><p>例如：“老鼠 爱 大米”<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">        .father &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line">        .father::before &#123;</span><br><span class="line">            /* 前置伪元素 */</span><br><span class="line">            content: &#x27;老鼠&#x27;;</span><br><span class="line">            color: blueviolet;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            /* 可以看见基本就是一个标签（大小需要调display，因为默认行内元素无法改变宽高） */</span><br><span class="line">        &#125;</span><br><span class="line">        .father::after &#123;</span><br><span class="line">            /* 后置伪元素 */</span><br><span class="line">            content: &#x27;大米&#x27;;</span><br><span class="line">            /* content必须有，可以留空--content: &#x27;&#x27;; */</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- .father --&gt;</span><br><span class="line">    &lt;div class=&quot;father&quot;&gt;爱&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p><h2 id="2-3-标准流"><a href="#2-3-标准流" class="headerlink" title="2.3 标准流"></a>2.3 标准流</h2><p>标准流：标签的默认排列规则，也称文档流<br>即，类似div默认1行1个，span默认1行多个，诸如此类。</p><h2 id="2-4-浮动"><a href="#2-4-浮动" class="headerlink" title="2.4 浮动"></a>2.4 浮动</h2><p>浮动：可以让块元素完美地在一行中排列，不同于行内块显示模式。</p><h3 id="2-4-1-起因-行内块问题"><a href="#2-4-1-起因-行内块问题" class="headerlink" title="2.4.1 起因: 行内块问题"></a>2.4.1 起因: 行内块问题</h3><p>当使用行内块显示模式时，div如果换行写，显示时就会产生1个空格的间距，这样就很麻烦！<br>例如：<br><div class="tabs" id="2.4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#2.4-1">代码</button></li><li class="tab"><button type="button" data-href="#2.4-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="2.4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            display: inline-block;</span><br><span class="line">        &#125;</span><br><span class="line">        .one &#123;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line">        .two &#123;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;one&quot;&gt;one&lt;/div&gt;&lt;div class=&quot;two&quot;&gt;two&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="2.4-2"><p><img src="https://s2.loli.net/2022/12/27/U4LOIlAWsw1Y9oe.jpg" alt="A006-2-4.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p><p>如果要实现无缝的话，就需要将多个div写在一行内，但是这样不便于阅读维护。<br>所以就需要使用浮动。</p><h3 id="2-4-2-浮动的作用"><a href="#2-4-2-浮动的作用" class="headerlink" title="2.4.2 浮动的作用"></a>2.4.2 浮动的作用</h3><p>浮动拥有2种作用：<br>（1）图文环绕<br>（2）网页布局</p><h3 id="2-4-3-浮动的代码实现"><a href="#2-4-3-浮动的代码实现" class="headerlink" title="2.4.3 浮动的代码实现"></a>2.4.3 浮动的代码实现</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">float: left/right;</span><br></pre></td></tr></table></figure><h3 id="2-4-4-浮动的特点"><a href="#2-4-4-浮动的特点" class="headerlink" title="2.4.4 浮动的特点"></a>2.4.4 浮动的特点</h3><p>（1）浮动元素会脱离标准流，在标准流中不占位置(脱标)<br>（2）浮动元素浮在空中,不在同一个图层了，但是下方标准流的文本还是会避开遮挡以正常显示(半脱)<br>（3）浮动找浮动，一行可以多个，可以设置宽高，具备行内块特点。<br>（4）浮动元素不可以tac/margin:0 auto来居中标签(这个特点是在说浮动元素/标签，并不是说标签内容/文本)，即浮动优先级更高。<br>例如：<br><div class="tabs" id="2.4.4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#2.4.4-1">代码</button></li><li class="tab"><button type="button" data-href="#2.4.4-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="2.4.4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">    &lt;style&gt;</span><br><span class="line">        .one &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        .two &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        .three &#123;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: orange;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;one&quot;&gt;one&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;two&quot;&gt;two&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;three&quot;&gt;three&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="2.4.4-2"><p><img src="https://s2.loli.net/2022/12/27/iTghuYrJVKADwbt.jpg" alt="A006-2-4-4.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p><h2 id="2-5-浮动案例-小米"><a href="#2-5-浮动案例-小米" class="headerlink" title="2.5 浮动案例-小米"></a>2.5 浮动案例-小米</h2><div class="tabs" id="2.5"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#2.5-1">代码</button></li><li class="tab"><button type="button" data-href="#2.5-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="2.5-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line">    &lt;title&gt;CSS浮动案例-小米&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        /* 清除默认盒子边距 */</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        /* 通栏 */</span><br><span class="line">        .top &#123;</span><br><span class="line">            height: 40px;</span><br><span class="line">            background-color: #333;</span><br><span class="line">        &#125;</span><br><span class="line">        /* 头部 */</span><br><span class="line">        .header &#123;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            width: 1226px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: #ffc0cb;</span><br><span class="line">        &#125;</span><br><span class="line">        /* 父级版心居中 */</span><br><span class="line">        .content &#123;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            width: 1226px;</span><br><span class="line">            height: 460px;</span><br><span class="line">            background-color: #ccc;</span><br><span class="line">        &#125;</span><br><span class="line">        /* 子级浮动一左一右 */</span><br><span class="line">        .left&#123;</span><br><span class="line">            float: left;</span><br><span class="line">            width: 234px;</span><br><span class="line">            height: 460px;</span><br><span class="line">            background-color: #ffa500;</span><br><span class="line">        &#125;</span><br><span class="line">        .right &#123;</span><br><span class="line">            float: right;</span><br><span class="line">            width: 992px;</span><br><span class="line">            height: 460px;</span><br><span class="line">            background-color: #87ceeb;</span><br><span class="line">        &#125;</span><br><span class="line">        /* 【重要】CSS书写顺序(快且快)</span><br><span class="line">            1. 浮动float/display</span><br><span class="line">            2. 盒子模型: margin, border, padding, whbgc</span><br><span class="line">            3. 文字样式</span><br><span class="line">         */</span><br><span class="line">        .box &#123;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            width: 1226px;</span><br><span class="line">            height: 614px;</span><br><span class="line">            background-color: #ccc;</span><br><span class="line">        &#125;</span><br><span class="line">        .left1 &#123;</span><br><span class="line">            float: left;</span><br><span class="line">            width: 234px;</span><br><span class="line">            height: 614px;</span><br><span class="line">            background-color: #800080;</span><br><span class="line">        &#125;</span><br><span class="line">        .right1 &#123;</span><br><span class="line">            float: right;</span><br><span class="line">            width: 978px;</span><br><span class="line">            height: 614px;</span><br><span class="line">            background-color: green;</span><br><span class="line">        &#125;</span><br><span class="line">        ul &#123;</span><br><span class="line">            list-style: none;</span><br><span class="line">        &#125;</span><br><span class="line">        /* 如果父级宽度不够，子级会自动换行 */</span><br><span class="line">        .right1 li &#123;</span><br><span class="line">            float: left;</span><br><span class="line">            margin-right: 14px;</span><br><span class="line">            margin-bottom: 14px;</span><br><span class="line">            width: 234px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: #98c6bf;</span><br><span class="line">        &#125;</span><br><span class="line">        li:nth-child(4n)&#123;</span><br><span class="line">            margin-right: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .header li &#123;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">        .header li a &#123;</span><br><span class="line">            display: inline-block;</span><br><span class="line">            width: 153.25px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 100px;</span><br><span class="line">            color: white;</span><br><span class="line">        &#125;</span><br><span class="line">        .header li a:hover &#123;</span><br><span class="line">            background-color: green;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;top&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;header&quot;&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;新闻1&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;新闻2&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;新闻3&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;新闻4&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;新闻5&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;新闻6&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;新闻7&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href=&quot;#&quot;&gt;新闻8&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;left&quot;&gt;left&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;right&quot;&gt;right&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;left1&quot;&gt;侧边栏&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;right1&quot;&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">                &lt;li&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="2.5-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/27/6vehGrzUZgK1Psp.jpg" alt="A006-2-5.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-6-清除浮动"><a href="#2-6-清除浮动" class="headerlink" title="2.6 清除浮动"></a>2.6 清除浮动</h2><p>清除浮动，是清除浮动给别的标签带来的影响。<br>本节会介绍1个场景和4种解决方案。</p><h3 id="2-6-1-浮动问题场景"><a href="#2-6-1-浮动问题场景" class="headerlink" title="2.6.1 浮动问题场景"></a>2.6.1 浮动问题场景</h3><p>当有一组父子级标签，其中子级浮动，而父级无高度设定，则位于后面的标准流盒子会往上顶替。<br>如图所示:<br><img src="https://s2.loli.net/2022/12/28/tEWSacqRnH6bsvU.jpg" alt="A006-2-6-1.jpg"><br>图中，灰、蓝色为两个子元素，都使用了浮动；且父元素没有进行高度设定；所以位于后面的绿色标准流元素就顶替上去了，呈多图层效果。<br>这是一个经典的浮动影响场景。</p><h3 id="2-6-2-浮动清除1-父级加高法"><a href="#2-6-2-浮动清除1-父级加高法" class="headerlink" title="2.6.2 浮动清除1-父级加高法"></a>2.6.2 浮动清除1-父级加高法</h3><p>该浮动问题的根源在于父元素没有高度设定，故而只需要对父级进行高度设定就可以清除浮动带来的影响。<br>缺点：<br>（1）部分网页设计下，父元素不适合加高度设定。<br>例如：<br>会在将来无限拉长的新闻公告栏，高度会一直发生变动。</p><h3 id="2-6-3-浮动清除2-额外标签法"><a href="#2-6-3-浮动清除2-额外标签法" class="headerlink" title="2.6.3 浮动清除2-额外标签法"></a>2.6.3 浮动清除2-额外标签法</h3><p>这种方法引入一个额外标签来清除浮动。在父元素的最后添加一个块级元素，并给这个块级元素添加clear:both;属性。</p><div class="tabs" id="2.2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#2.2-1">代码</button></li><li class="tab"><button type="button" data-href="#2.2-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="2.2-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">    &lt;title&gt;浮动清除-额外标签法&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        .top &#123;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            width: 1000px;</span><br><span class="line">            /* height: 300px; */</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line">        .bottom &#123;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: green;</span><br><span class="line">        &#125;</span><br><span class="line">        .left &#123;</span><br><span class="line">            float: left;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: #ccc;</span><br><span class="line">        &#125;</span><br><span class="line">        .right &#123;</span><br><span class="line">            float: right;</span><br><span class="line">            width: 790px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clearfix &#123;</span><br><span class="line">            /* 清除左右两侧浮动的影响 */</span><br><span class="line">            clear: both;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;top&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;left&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;right&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;!-- 这里引入额外标签，调用类选择器，清除浮动 --&gt;</span><br><span class="line">        &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;bottom&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="2.2-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/28/GstzhHy1CepOI9a.jpg" alt="A006-2-6-2.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>缺点：<br>（1）又把父级的高撑开了。<br>（2）添加了额外的标签和选择器，变复杂了。</p><h3 id="2-6-4-浮动清除3-单伪元素清除法"><a href="#2-6-4-浮动清除3-单伪元素清除法" class="headerlink" title="2.6.4 浮动清除3-单伪元素清除法"></a>2.6.4 浮动清除3-单伪元素清除法</h3><p>这种方法本质与额外标签法相同，不同的是采用了伪元素来代替额外标签。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">    &lt;title&gt;浮动清除-单伪元素清除法&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        .top &#123;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            width: 1000px;</span><br><span class="line">            /* height: 300px; */</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .bottom &#123;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: green;</span><br><span class="line">        &#125;</span><br><span class="line">        .left &#123;</span><br><span class="line">            float: left;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: #ccc;</span><br><span class="line">        &#125;</span><br><span class="line">        .right &#123;</span><br><span class="line">            float: right;</span><br><span class="line">            width: 790px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clearfix::after &#123;</span><br><span class="line">            content: &#x27;&#x27;;</span><br><span class="line">            /* 伪元素添加的标签默认是行内的 */</span><br><span class="line">            display: block;</span><br><span class="line">            clear:both;</span><br><span class="line">            /* 这两条为了低级浏览器兼容 */</span><br><span class="line">            height: 0;</span><br><span class="line">            visibility: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        /* 单伪元素法本质与额外标签的原理相同 */</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 调用两个类，用单伪元素法清除浮动 --&gt;</span><br><span class="line">    &lt;div class=&quot;top clearfix&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;left&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;right&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;!-- 通过css添加伪元素 --&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;bottom&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><br>优点：<br>（1）以后直接给标签加类就可以清除浮动了</p><h3 id="2-6-5-浮动清除4-双伪元素清除法"><a href="#2-6-5-浮动清除4-双伪元素清除法" class="headerlink" title="2.6.5 浮动清除4-双伪元素清除法"></a>2.6.5 浮动清除4-双伪元素清除法</h3><p>这种方法采用了两个伪元素来配合，一个::before一个::after;<br>两个都要转显示模式为table;<br>然后需要对after加clear:both;<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">    &lt;title&gt;浮动清除-双伪元素清除法&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        .top &#123;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            width: 1000px;</span><br><span class="line">            /* height: 300px; */</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .bottom &#123;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: green;</span><br><span class="line">        &#125;</span><br><span class="line">        .left &#123;</span><br><span class="line">            float: left;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: #ccc;</span><br><span class="line">        &#125;</span><br><span class="line">        .right &#123;</span><br><span class="line">            float: right;</span><br><span class="line">            width: 790px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* 清除浮动-双伪元素清除法 */</span><br><span class="line">        /* 这一段作用是解决margin塌陷问题 */</span><br><span class="line">        /* margin塌陷？父子级标签，都是块，子级加margin会影响父级位置 */</span><br><span class="line">        /* 这里转成table了，直接避开了块 */</span><br><span class="line">        /* 故而双伪元素清除法，不但可以浮动清除，还可以解决margin塌陷，只要调用clearfix类就可以。 */</span><br><span class="line">        .clearfix::before,</span><br><span class="line">        .clearfix::after &#123;</span><br><span class="line">            content: &#x27;&#x27;;</span><br><span class="line">            display: table;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* 真正清除浮动的标签 */</span><br><span class="line">        .clearfix::after &#123;</span><br><span class="line">            clear: both;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;top clearfix&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;left&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;right&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;bottom&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><br>优点：<br>（1）以后直接调用类就可以了。<br>（2）不但可以清除浮动，还可以解决margin外边距的问题。</p><h3 id="2-6-6-浮动清除5-overflow清除法"><a href="#2-6-6-浮动清除5-overflow清除法" class="headerlink" title="2.6.6 浮动清除5-overflow清除法"></a>2.6.6 浮动清除5-overflow清除法</h3><p>这种方法是最简单的。直接给父元素的css添加 overflow : hidden; 属性就能解决此类问题。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">    &lt;title&gt;浮动清除-overflow清除法&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        .top &#123;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            width: 1000px;</span><br><span class="line">            /* height: 300px; */</span><br><span class="line">            background-color: pink;</span><br><span class="line">            </span><br><span class="line">            /* overflow浮动清除法 */</span><br><span class="line">            overflow: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .bottom &#123;</span><br><span class="line">            height: 100px;</span><br><span class="line">            background-color: green;</span><br><span class="line">        &#125;</span><br><span class="line">        .left &#123;</span><br><span class="line">            float: left;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: #ccc;</span><br><span class="line">        &#125;</span><br><span class="line">        .right &#123;</span><br><span class="line">            float: right;</span><br><span class="line">            width: 790px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;top&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;left&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;right&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;bottom&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><br>这也是最方便快捷的方法。</p>              </div>            </details><details class="folding-tag" ><summary> CSS3定位装饰 </summary>              <div class='content'>              <h1 id="3-CSS定位装饰"><a href="#3-CSS定位装饰" class="headerlink" title="3. CSS定位装饰"></a>3. CSS定位装饰</h1><p>本章将思维导图分别放在3.1定位和3.2装饰的标题后。</p><h2 id="3-1-定位"><a href="#3-1-定位" class="headerlink" title="3.1 定位"></a>3.1 定位</h2><p><details class="folding-tag" ><summary> CSS定位-思维导图 </summary>              <div class='content'>              <p><img src="https://s2.loli.net/2022/12/29/v8LFUmbikfs7HjZ.jpg" alt="A006-3-1s.jpg"></p>              </div>            </details></p><p><h3 id="3-1-1-作用与使用步骤"><a href="#3-1-1-作用与使用步骤" class="headerlink" title="3.1.1 作用与使用步骤"></a>3.1.1 作用与使用步骤</h3><h4 id="（1）特点"><a href="#（1）特点" class="headerlink" title="（1）特点"></a>（1）特点</h4><p>“定位”不同于标准流和浮动，它支持自由摆放，盒子堆叠的布局效果。</p></p><p><h4 id="（2）场景"><a href="#（2）场景" class="headerlink" title="（2）场景"></a>（2）场景</h4><p>“定位”通常用于一些元素堆叠，以及盒子始终不动等应用场景。</p></p><p><h4 id="（3）使用步骤"><a href="#（3）使用步骤" class="headerlink" title="（3）使用步骤"></a>（3）使用步骤</h4><p>“定位”的使用分为两步：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">position: relative/absolute/fixed;</span><br><span class="line">left/right/top/bottom: xxpx/xx%;</span><br></pre></td></tr></table></figure><br>先是设置定位属性，然后是设置定位偏移值。<br>left表示，与左边相距xxpx.</p></p><p><h3 id="3-1-2-定位的分类"><a href="#3-1-2-定位的分类" class="headerlink" title="3.1.2 定位的分类"></a>3.1.2 定位的分类</h3><p>“定位”可以分为静态定位、相对定位、绝对定位、固定定位4类。<br>其中静态定位其实就是不定位。</p></p><p><h4 id="3-1-2-1-相对定位"><a href="#3-1-2-1-相对定位" class="headerlink" title="3.1.2.1 相对定位"></a>3.1.2.1 相对定位</h4><p>“相对定位”是指相对自己之前的位置发生偏移；<br>一般拥有以下几个特点：<br>（1）空空占用原有的位置；<br>（2）仍然具有原有显示模式的特点；<br>（3）改变位置是基于自己原来的位置。</p><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">position:relative;</span><br><span class="line">+偏移值设定</span><br></pre></td></tr></table></figure></p><p>Q: 如果只有定位，没有偏移设定？<br>A: 那等于没定位。</p><p>Q: 如果又设置左偏移，又设置右偏移，又设置上偏移，又设置下偏移？<br>A: 那只会读left/top的值。</p><h4 id="3-1-2-2-绝对定位"><a href="#3-1-2-2-绝对定位" class="headerlink" title="3.1.2.2 绝对定位"></a>3.1.2.2 绝对定位</h4><p>“绝对定位”可以分为两种情形。<br>（i）如果父级没有定位，那就以浏览器窗口为参照进行定位。(一般不会用)<br>（ii）如果父级有定位，那就以这个父级为参照进行定位。（这个常用）<br>且使用“绝对定位”会让子元素的显示模式变成行内块的特性。（需要大小设定）</p><p>其中，在（ii）情形中，父元素的定位一般采用相对定位。此时，子级绝对定位且父级相对定位，被称为“子绝父相”。<br>（这里的“父级”是广义的，爷爷级也算。）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">position:absolute;</span><br><span class="line">+偏移值设定</span><br></pre></td></tr></table></figure><p>Q: 如果只有定位，没有偏移设定？<br>A: 那元素会脱标，变得像浮动一样。</p><h4 id="绝对定位的一些案例"><a href="#绝对定位的一些案例" class="headerlink" title="*绝对定位的一些案例"></a>*绝对定位的一些案例</h4><h5 id="例1：图片角标"><a href="#例1：图片角标" class="headerlink" title="例1：图片角标"></a>例1：图片角标</h5><div class="tabs" id="31221"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#31221-1">H5代码</button></li><li class="tab"><button type="button" data-href="#31221-2">CSS代码</button></li><li class="tab"><button type="button" data-href="#31221-3">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="31221-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;box wrapper&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">            &lt;h2&gt;精品推荐&lt;/h2&gt;</span><br><span class="line">            &lt;a href=&quot;#&quot;&gt;查看全部&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;content clearfix&quot;&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                    &lt;a href=&quot;#&quot;&gt;</span><br><span class="line">                        &lt;img src=&quot;./images/course07.png&quot; alt=&quot;&quot;&gt;</span><br><span class="line">                        &lt;h3&gt;Think PHP 5.0 博客系统实战项目演练&lt;/h3&gt;</span><br><span class="line">                        &lt;p&gt;&lt;span&gt;高级&lt;/span&gt;  •  1125人在学习&lt;/p&gt;</span><br><span class="line">                        &lt;!-- 定位的hot小图 --&gt;</span><br><span class="line">                        &lt;img src=&quot;./images/hot.png&quot; alt=&quot;&quot; class=&quot;hot&quot;&gt;</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                ......</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="31221-2"><p>/<em> 课程模块 hot 定位小图 </em>/<br>.box .content li {<br>    position: relative;<br>}</p><p>.box .content li .hot {<br>    position: absolute;<br>    right: -4px;<br>    top: 4px;<br>}</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="31221-3"><p>效果图：<br><img src="https://s2.loli.net/2022/12/29/MTg4lCWcxtkUOVf.jpg" alt="A006-31221.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>可以看到css部分采用了子绝父相，对a标签中的img标签进行了布局调整。</p><h5 id="例2：绝对定位的居中"><a href="#例2：绝对定位的居中" class="headerlink" title="例2：绝对定位的居中"></a>例2：绝对定位的居中</h5><p>在使用定位后，会有一个问题场景：“绝对定位的盒子不能使用margin: 0 auto;进行居中”<br>这里有两种解决方法。</p><p>解决方法1:  绝对定位的盒子，直接设置偏移值：<br>left:50%; margin-left: -width/2;<br>top: 50%; margin-top: -height/2;<br>缺点: 位置受到了盒子大小的影响，永远要调整。</p><p>解决方案2:    绝对定位的盒子，使用transform设置偏移值：<br>left: 50%; top: 50%;<br>transform: translate(-50%, -50%) ;<br>从而实现自身宽高一半的位移。<br>这种方法会更好。</p><div class="tabs" id="31222"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#31222-1">css代码</button></li><li class="tab"><button type="button" data-href="#31222-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="31222-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line"></span><br><span class="line">    left: 50%;</span><br><span class="line">    top: 50%;</span><br><span class="line">    /* margin-left: -150px; */</span><br><span class="line">    /* margin-top: -150px; */</span><br><span class="line"></span><br><span class="line">    /* 位移: 自己宽度高度的一半 */</span><br><span class="line">    transform: translate(-50%, -50%);</span><br><span class="line"></span><br><span class="line">    width: 400px;</span><br><span class="line">    height: 300px;</span><br><span class="line">    background-color: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="31222-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/29/iSz1Thsq5RkZAO2.jpg" alt="A006-31222.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h5 id="例3：图片调整"><a href="#例3：图片调整" class="headerlink" title="例3：图片调整"></a>例3：图片调整</h5><p>这个例子是导航二维码的居中定位案例。<br><div class="tabs" id="31223"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#31223-1">代码</button></li><li class="tab"><button type="button" data-href="#31223-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="31223-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">  &lt;title&gt;导航二维码-居中定位&lt;/title&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    * &#123;</span><br><span class="line">      margin: 0;</span><br><span class="line">      padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /* 因为有通栏：占满一行的边框，所以需要有一个通栏：占满一行的盒子 */</span><br><span class="line">    .nav &#123;</span><br><span class="line">      height: 40px;</span><br><span class="line">      border-bottom: 1px solid #ccc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /* 因为ul中所有的内容都是在网页的宽度固定并且水平居中的盒子内部，所以设置ul为宽度固定并且水平居中的效果（后面项目中所用到的版心） */</span><br><span class="line">    ul &#123;</span><br><span class="line">      list-style: none;</span><br><span class="line">      width: 1200px;</span><br><span class="line">      margin: 0 auto;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ul li &#123;</span><br><span class="line">      float: left;</span><br><span class="line">      width: 20%;</span><br><span class="line">      height: 40px;</span><br><span class="line">      border-right: 1px solid #ccc;</span><br><span class="line">      /* 自动内减 */</span><br><span class="line">      box-sizing: border-box;</span><br><span class="line">      text-align: center;</span><br><span class="line">      line-height: 40px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ul .last &#123;</span><br><span class="line">     border-right: none;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ul li a &#123;</span><br><span class="line">      /* a标签默认是行内元素，宽高由内容撑开，并且无法设置宽高，此时默认情况用户只能点击文字区域才能调整 */</span><br><span class="line">      /* 如果把a标签转换成块级元素，此时可以设置宽高，会让a标签范围更大，用户可以点击调整的区域也越大 */</span><br><span class="line">      display: block;</span><br><span class="line">      /* 宽度不设置块元素会默认占满一行 */</span><br><span class="line">      height: 40px;</span><br><span class="line">      text-decoration: none;</span><br><span class="line">      color: #000;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /* 这里可以看到：子绝父相 */</span><br><span class="line">    ul li .app &#123;</span><br><span class="line">      position: relative;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .code &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      left: 50%;</span><br><span class="line">      top: 41px;</span><br><span class="line">      transform: translate(-50%);</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;!-- 导航 --&gt;</span><br><span class="line">  &lt;div class=&quot;nav&quot;&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;我要投资&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;平台介绍&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;新手专区&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;!-- 因为用户鼠标放在二维码图片上也能跳转，所以证明img也是在a的范围内，因此把img写在a标签的内部 --&gt;</span><br><span class="line">      &lt;li&gt;&lt;a href=&quot;#&quot; class=&quot;app&quot;&gt;手机微金所 &lt;img src=&quot;./images/code.jpg&quot; alt=&quot;&quot; class=&quot;code&quot;&gt; &lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;li class=&quot;last&quot;&gt;&lt;a href=&quot;#&quot;&gt;个人中心&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="31223-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/29/cxpXgyNaQT7EuZG.jpg" alt="A006-31223.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p><h5 id="例4：遮罩效果"><a href="#例4：遮罩效果" class="headerlink" title="例4：遮罩效果"></a>例4：遮罩效果</h5><div class="tabs" id="31224"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#31224-1">代码</button></li><li class="tab"><button type="button" data-href="#31224-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="31224-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">    &lt;title&gt;banner的遮罩效果&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        .banner &#123;</span><br><span class="line">            position: relative;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            width: 1226px;</span><br><span class="line">            height: 600px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .mask &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 0;</span><br><span class="line">            bottom: 0;</span><br><span class="line">            /* 绝对定位的盒子显示模式具备行内块特点: 加宽度高度生效, 如果没有宽度也没有内容, 盒子的宽度尺寸就是0 */</span><br><span class="line">            /* width: 1226px; */</span><br><span class="line">            /* 如果子级和父级的宽度相同  */</span><br><span class="line">            width: 100%;</span><br><span class="line">            height: 150px;</span><br><span class="line">            background-color: rgba(0,0,0, .5);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;banner&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;./images/bg.jpg&quot; alt=&quot;&quot;&gt;</span><br><span class="line">        &lt;!-- 遮罩 --&gt;</span><br><span class="line">        &lt;div class=&quot;mask&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="31224-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/29/qzd69ZKJM4RpDPx.jpg" alt="A006-31224.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h4 id="3-1-2-3-固定定位"><a href="#3-1-2-3-固定定位" class="headerlink" title="3.1.2.3 固定定位"></a>3.1.2.3 固定定位</h4><p>“固定定位”是指相对浏览器进行移动，无论怎么滚动都不动。<br>一般拥有以下几个特点：<br>（1）会脱标。<br>（2）基于窗口。<br>（3）具备行内块特点（需要大小设定）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">position:fixed;</span><br><span class="line">+偏移值设定</span><br></pre></td></tr></table></figure><p>如果此时left:0;top:0;则会吸附到浏览器左上角（常用于导航栏）</p><h4 id="3-1-2-4-显示层级关系"><a href="#3-1-2-4-显示层级关系" class="headerlink" title="3.1.2.4 显示层级关系"></a>3.1.2.4 显示层级关系</h4><p>标准流&lt;浮动&lt;定位<br>其中，各种定位的默认层级相同，但是遵循“后来居上”原则。</p><h2 id="3-2-装饰"><a href="#3-2-装饰" class="headerlink" title="3.2 装饰"></a>3.2 装饰</h2><details class="folding-tag" ><summary> CSS装饰-思维导图 </summary>              <div class='content'>              <p><img src="https://s2.loli.net/2022/12/29/jyZcd4tHbvCnFGL.jpg" alt="A006-3-2s.jpg"></p>              </div>            </details><h3 id="3-2-1-垂直对齐方式"><a href="#3-2-1-垂直对齐方式" class="headerlink" title="3.2.1 垂直对齐方式"></a>3.2.1 垂直对齐方式</h3><p>浏览器在处理行内/行内块元素时，都是按文字来处理的。由于文字的基线存在，有的元素大，有的元素小，会存在元素之间垂直不对齐的情况。<br>这个时候可以用vertical-align属性来调节。</p><p>需要注意的是，这个属性只可以在行内/行内块标签内使用。<br>部分情况也可以考虑转成 块元素 来处理。</p><p>vertical-align属性有四种取值情况：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vertical-align: baseline; (默认，基线对齐)</span><br><span class="line">vertical-align: top; (顶部对齐)</span><br><span class="line">vertical-align: middle (中部对齐)【常用】</span><br><span class="line">vertical-align: bottom (底部对齐)</span><br></pre></td></tr></table></figure><br>专门用于调节垂直上的对齐问题。</p><h3 id="3-2-2-光标类型"><a href="#3-2-2-光标类型" class="headerlink" title="3.2.2 光标类型"></a>3.2.2 光标类型</h3><p>光标类型通过cursor属性来进行调整。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cursor: default; 箭头</span><br><span class="line">cursor: pointer; 小手</span><br><span class="line">cursor: text; 工/选择文字</span><br><span class="line">cursor: move; 十字/移动</span><br></pre></td></tr></table></figure></p><h3 id="3-2-3-边框圆角"><a href="#3-2-3-边框圆角" class="headerlink" title="3.2.3 边框圆角"></a>3.2.3 边框圆角</h3><p>边框圆角一般用border-radius属性来设定。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">border-radius: xxpx/xx%;</span><br></pre></td></tr></table></figure><br>1个值：4个角的圆角半径<br>4个值：左上顺时针4个角的分别的圆角半径<br>缺少的值就看对角，这个和margin/padding一样。</p><h4 id="圆角案例1-正圆"><a href="#圆角案例1-正圆" class="headerlink" title="圆角案例1 正圆"></a>圆角案例1 正圆</h4><p>border-radius: 50%<br>前提：元素本身就是正方形。</p><h4 id="圆角案例2-胶囊"><a href="#圆角案例2-胶囊" class="headerlink" title="圆角案例2 胶囊"></a>圆角案例2 胶囊</h4><p>border-radius: 盒子高度的一半<br>前提：元素本身是长方形。</p><h3 id="3-2-4-溢出显示管理-overflow"><a href="#3-2-4-溢出显示管理-overflow" class="headerlink" title="3.2.4 溢出显示管理-overflow"></a>3.2.4 溢出显示管理-overflow</h3><p>overflow属性可以控制溢出盒子的部分。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">overflow: visible; 默认，溢出显示</span><br><span class="line">overflow: hidden; 溢出部分隐藏</span><br><span class="line">overflow: scroll; 无论是否溢出都显示滚动条(一般不用)</span><br><span class="line">overflow: auto; 根据溢出与否，自动显示隐藏滚动条</span><br></pre></td></tr></table></figure></p><h3 id="3-2-5-元素的显示与隐藏"><a href="#3-2-5-元素的显示与隐藏" class="headerlink" title="3.2.5 元素的显示与隐藏"></a>3.2.5 元素的显示与隐藏</h3><p>常用于子菜单的隐藏与显示。</p><h4 id="占位隐藏"><a href="#占位隐藏" class="headerlink" title="占位隐藏"></a>占位隐藏</h4><p>visibility: hidden;<br>原地隐藏，但是占用的位置依旧占用。（占位隐藏效果）不常用</p><h4 id="不占位隐藏"><a href="#不占位隐藏" class="headerlink" title="不占位隐藏"></a>不占位隐藏</h4><p>display: none;<br>彷佛就不曾存在过（不占位隐藏）常用</p><h4 id="案例-悬停显示图片"><a href="#案例-悬停显示图片" class="headerlink" title="案例-悬停显示图片"></a>案例-悬停显示图片</h4><div class="tabs" id="3251"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#3251-1">代码</button></li><li class="tab"><button type="button" data-href="#3251-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="3251-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">  &lt;title&gt;悬停显示图片&lt;/title&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    * &#123;</span><br><span class="line">      margin: 0;</span><br><span class="line">      padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /* 因为有通栏：占满一行的边框，所以需要有一个通栏：占满一行的盒子 */</span><br><span class="line">    .nav &#123;</span><br><span class="line">      height: 40px;</span><br><span class="line">      border-bottom: 1px solid #ccc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /* 因为ul中所有的内容都是在网页的宽度固定并且水平居中的盒子内部，所以设置ul为宽度固定并且水平居中的效果（后面项目中所用到的版心） */</span><br><span class="line">    ul &#123;</span><br><span class="line">      list-style: none;</span><br><span class="line">      width: 1200px;</span><br><span class="line">      margin: 0 auto;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ul li &#123;</span><br><span class="line">      float: left;</span><br><span class="line">      width: 20%;</span><br><span class="line">      height: 40px;</span><br><span class="line">      border-right: 1px solid #ccc;</span><br><span class="line">      /* 自动内减 */</span><br><span class="line">      box-sizing: border-box;</span><br><span class="line">      text-align: center;</span><br><span class="line">      line-height: 40px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ul .last &#123;</span><br><span class="line">     border-right: none;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ul li a &#123;</span><br><span class="line">      /* a标签默认是行内元素，宽高由内容撑开，并且无法设置宽高，此时默认情况用户只能点击文字区域才能调整 */</span><br><span class="line">      /* 如果把a标签转换成块级元素，此时可以设置宽高，会让a标签范围更大，用户可以点击调整的区域也越大 */</span><br><span class="line">      display: block;</span><br><span class="line">      /* 宽度不设置块元素会默认占满一行 */</span><br><span class="line">      height: 40px;</span><br><span class="line">      text-decoration: none;</span><br><span class="line">      color: #000;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ul li .app &#123;</span><br><span class="line">      position: relative;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .code &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      left: 50%;</span><br><span class="line">      top: 41px;</span><br><span class="line">      display: none;</span><br><span class="line">      transform: translate(-50%);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /* 鼠标悬停a 显示二维码图片 */</span><br><span class="line">    .nav li a:hover img &#123;</span><br><span class="line">        display: block;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;!-- 导航 --&gt;</span><br><span class="line">  &lt;div class=&quot;nav&quot;&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;我要投资&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;平台介绍&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;li&gt;&lt;a href=&quot;#&quot;&gt;新手专区&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;!-- 因为用户鼠标放在二维码图片上也能跳转，所以证明img也是在a的范围内，因此把img写在a标签的内部 --&gt;</span><br><span class="line">      &lt;li&gt;&lt;a href=&quot;#&quot; class=&quot;app&quot;&gt;手机微金所 &lt;img src=&quot;./images/code.jpg&quot; alt=&quot;&quot; class=&quot;code&quot;&gt; &lt;/a&gt;&lt;/li&gt;</span><br><span class="line">      &lt;li class=&quot;last&quot;&gt;&lt;a href=&quot;#&quot;&gt;个人中心&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="3251-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/29/62ZjPOqiIBc7uxV.gif" alt="A006-3251.gif"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="3-2-6-元素整体透明度"><a href="#3-2-6-元素整体透明度" class="headerlink" title="3.2.6 元素整体透明度"></a>3.2.6 元素整体透明度</h3><p>opacity: xx;<br>取值：0-1</p>              </div>            </details><p>CSS部分到这里就告一段落了，接下来会进行Javascript的学习内容。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> VSCode </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【开发日志】网页版定轨下落式音游开发笔记</title>
      <link href="/2022/12/20/%E3%80%90%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97%E3%80%91%E7%BD%91%E9%A1%B5%E7%89%88%E5%AE%9A%E8%BD%A8%E4%B8%8B%E8%90%BD%E5%BC%8F%E9%9F%B3%E6%B8%B8%E6%A8%A1%E6%8B%9F%E5%99%A8%E5%88%B6%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/12/20/%E3%80%90%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97%E3%80%91%E7%BD%91%E9%A1%B5%E7%89%88%E5%AE%9A%E8%BD%A8%E4%B8%8B%E8%90%BD%E5%BC%8F%E9%9F%B3%E6%B8%B8%E6%A8%A1%E6%8B%9F%E5%99%A8%E5%88%B6%E4%BD%9C%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info flat"><p>本文为网页版定轨下落式音游开发笔记，初衷是记录在开发过程中的一些技术问题，类似老船长的航海日志，希望未来能看见到岸的那一天。<br>本项目由ChatGPT作为技术顾问，Niord负责主要推进。</p></div><details class="folding-tag" ><summary> Javascript的键盘事件监听器 </summary>              <div class='content'>              <p>在 JavaScript 中，可以使用 addEventListener 方法来监听键盘事件。<br>举个例子，如果要在按下 A 键时打印一条消息，可以这样写：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">document.addEventListener(&quot;keydown&quot;, function(event) &#123;</span><br><span class="line">  if (event.keyCode === 65) &#123;</span><br><span class="line">    console.log(&quot;A 键被按下了！&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>还可以使用 keyup 事件监听键盘抬起事件，以及 keypress 事件监听键盘敲击事件。</p>              </div>            </details><details class="folding-tag" ><summary> HTML5的Canvas元素 </summary>              <div class='content'>              <p>HTML5 中的 canvas 元素是一个可以使用 JavaScript 在浏览器中绘制图形的元素。<br>使用 canvas 元素需要在 HTML 文档中添加一个 canvas 元素，然后通过 JavaScript 来访问这个元素并绘制图形。<br>例如，下面是一个简单的 canvas 元素：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas id=&quot;myCanvas&quot; width=&quot;200&quot; height=&quot;100&quot;&gt;&lt;/canvas&gt;</span><br></pre></td></tr></table></figure><br>这段代码会创建一个 canvas 元素，并设置它的宽度为 200 像素，高度为 100 像素。<br>然后，可以使用 JavaScript 来访问这个 canvas 元素并绘制图形。例如，下面的代码会在 canvas 中绘制一条直线：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var canvas = document.getElementById(&quot;myCanvas&quot;);</span><br><span class="line">var context = canvas.getContext(&quot;2d&quot;);</span><br><span class="line"></span><br><span class="line">context.moveTo(0, 0);</span><br><span class="line">context.lineTo(200, 100);</span><br><span class="line">context.stroke();</span><br></pre></td></tr></table></figure><br>在 canvas 元素中绘制了一条从 (0, 0) 到 (200, 100) 的直线。</p><p>canvas 元素还可以用来显示图片、视频等多媒体内容，或者将 canvas 元素作为图像的来源，从而实现图像处理和转换等功能。</p>              </div>            </details><details class="folding-tag" ><summary> AJAX加载谱面文件 </summary>              <div class='content'>              <p>使用 AJAX（Asynchronous JavaScript and XML） 可以在不重新加载整个页面的情况下，使用 JavaScript 向服务器发送请求并获取响应数据。这样就可以在页面上更新部分内容，而不需要重新加载整个页面。<br>使用 AJAX 的一个常见例子就是在网页中使用搜索框时，可以在输入搜索关键词时实时地将关键词发送到服务器进行搜索，并在搜索结果返回时更新页面上的搜索结果。<br>AJAX 的实现需要使用 JavaScript 的 XMLHttpRequest 对象，以及一些服务器端的技术，如 PHP、Java、ASP.NET 等。<br>下面是一个简单的示例代码，展示了如何使用 AJAX 加载音乐谱面文件：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var request = new XMLHttpRequest();</span><br><span class="line">request.open(&quot;GET&quot;, &quot;music.json&quot;, true);</span><br><span class="line">request.responseType = &quot;json&quot;;</span><br><span class="line">request.onload = function() &#123;</span><br><span class="line">  var musicData = request.response;</span><br><span class="line">  // 在这里处理谱面文件</span><br><span class="line">&#125;;</span><br><span class="line">request.send();</span><br></pre></td></tr></table></figure><br>这段代码中，首先创建了一个 XMLHttpRequest 对象，然后使用 open 方法初始化 HTTP 请求，设置请求方法为 GET，请求地址为 “music.json”，并设置为异步请求。<br>然后设置 responseType 属性为 “json”，表示期望响应数据为 JSON 格式。<br>接下来，设置 onload 属性为一个回调函数，在响应数据返回时执行。在回调函数中，使用 response 属性获取响应数据，并将其赋值给变量 musicData。<br>最后，使用 send 方法发送请求。</p><p>这段代码的意思是：使用 AJAX 发送一个 GET 请求，获取 “music.json” 文件，并在响应数据返回时将其转化为 JSON 格式并保存在变量 musicData 中。</p><p>所以，简单来说，使用 AJAX 加载音乐谱面文件的流程是：<br>1.在服务器端准备一个 JSON 格式的音乐谱面文件。<br>2.使用 JavaScript 的 XMLHttpRequest 对象发送 HTTP 请求，获取该文件。<br>3.在响应数据返回时，将其自动转化为 JSON 格式并保存在变量中。<br>4.使用保存的谱面数据进行游戏的绘制等操作。</p>              </div>            </details><details class="folding-tag" ><summary> 如何实现从变量musicdata到音符的显示 </summary>              <div class='content'>              <p>下面是一个简单的示例代码，展示了如何实现从 musicData 到实际 note 显示并下落的过程：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// 定义一个函数来更新游戏界面</span><br><span class="line">function updateGame() &#123;</span><br><span class="line">  // 遍历 musicData 中的每一个 note</span><br><span class="line">  for (var i = 0; i &lt; musicData.length; i++) &#123;</span><br><span class="line">    var note = musicData[i];</span><br><span class="line">    // 根据 note 的数据来绘制音符</span><br><span class="line">    drawNote(note.x, note.y, note.color);</span><br><span class="line">    // 使音符下落</span><br><span class="line">    note.y += note.speed;</span><br><span class="line">    // 如果音符超出了界面，则从 musicData 中移除它</span><br><span class="line">    if (note.y &gt; canvas.height) &#123;</span><br><span class="line">      musicData.splice(i, 1);</span><br><span class="line">      i--;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  // 重复执行 updateGame 函数，以持续更新游戏界面</span><br><span class="line">  requestAnimationFrame(updateGame);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 调用 updateGame 函数开始更新游戏界面</span><br><span class="line">updateGame();</span><br></pre></td></tr></table></figure><br>这段代码中，首先定义了一个函数 updateGame，用于更新游戏界面。<br>在函数中，使用循环遍历 musicData 中的每一个 note，并根据 note 的数据来绘制音符。这里使用的是一个名为 drawNote 的函数，你需要自己定义这个函数来绘制音符。<br>然后，使用 note.y += note.speed 将音符下落，使用 if 语句判断音符是否超出了界面，如果是则使用 splice 方法从 musicData 中移除该音符。<br>最后，使用 requestAnimationFrame 方法重复执行 updateGame 函数，以持续更新游戏界面。<br>这段代码的意思是：每一帧都遍历 musicData 中的所有音符，根据音符的数据绘制音符，然后使其下落，如果超出界面则从 musicData 中移除。并且持续不断地执行这个过程，以更新游戏界面。<br>这样就可以实现从 musicData 到实际 note 显示并下落的过程。</p>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 开发日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Web开发 </tag>
            
            <tag> Javascript </tag>
            
            <tag> 音乐游戏 </tag>
            
            <tag> 项目 </tag>
            
            <tag> 开发日志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UIS学习笔记</title>
      <link href="/2022/12/18/UIS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/12/18/UIS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A005(Article005) --><div class="note info flat"><p>本文专注于介绍UIS的基本框架与基本内容，可作为初级使用者指南帮助参考。</p></div><details class="folding-tag" ><summary> UIS基础知识 </summary>              <div class='content'>              <h2 id="第一步：对皮肤文件的处理"><a href="#第一步：对皮肤文件的处理" class="headerlink" title="第一步：对皮肤文件的处理"></a>第一步：对皮肤文件的处理</h2><p>Malody的皮肤文件后缀为<em>.msz，将其后缀改为</em>.zip后，再解压至文件夹，就可以进行进一步的操作。<br>相反之，需要对该皮肤文件夹内的所有物件全选(Ctrl+A)，并右键压缩为<em>.zip，再更改它的后缀为</em>.msz，就可以把皮肤文件打包成msz文件。（注意：这里不要对文件夹去压缩，否则在后续解压时会多出一层文件夹，导致皮肤文件无法正常读取。）</p><h2 id="第二步：对皮肤文件内部组成结构的认识"><a href="#第二步：对皮肤文件内部组成结构的认识" class="headerlink" title="第二步：对皮肤文件内部组成结构的认识"></a>第二步：对皮肤文件内部组成结构的认识</h2><p>在进行过上一步中，解压的操作后，可以在文件夹中看见一堆文件与资源。这些文件资源可以被分成以下3类：<br>①mui文件<br>②素材贴图(xxx.png)<br>③plist文件</p><h2 id="第三步：认识mui文件"><a href="#第三步：认识mui文件" class="headerlink" title="第三步：认识mui文件"></a>第三步：认识mui文件</h2><p>mui文件是 “负责把皮肤文件中的那些资源和素材，调用、调整并布置到游戏中” 的一个诠释性的文件。<br>其中，mui文件可被分为以下2类：<br>①系统默认能读取的mui（至少有1个）<br>例如：script_slide.mui或者script_taiko.mui或script-key-6K.mui 。<br>这种是系统默认对应的mui名称，也是系统只会读取的mui文件名称。<br>②自己设计添加的mui（可以没有）<br>例如：base.mui，xxxx.mui等。<br>这种mui不会被系统直接读取，需要在默认能读取的mui里去引用，可随意命名，通常用以节省重复代码。</p><h2 id="第四步：认识plist文件"><a href="#第四步：认识plist文件" class="headerlink" title="第四步：认识plist文件"></a>第四步：认识plist文件</h2><p>要认识plist文件，首先需要从皮肤文件中的素材贴图资源的分类开始说起。<br>皮肤文件中的素材贴图，可分为：<br>①单个素材贴图(类似xxx.png)（不需要plist文件去诠释它们）<br>②多个贴图组成的打包整合图（必须有相应的plist文件来诠释打包的整合图）<br>那么很明显，单个的素材会直接被mui调去游戏中，而打包的整合素材贴图会经过plist文件的诠释，再被mui调去游戏中。</p><p>问：为什么要打包素材？这不是节外生枝搞了个plist出来吗？<br>答：这是因为一方面打包素材可以降低系统的性能损耗，减少IO口。另一方面，可以使皮肤文件内部更加干净。所以打包素材很重要！干净又卫生，一定要打包！<br>P.S. 相关打包软件为：TexturePacker</p><h2 id="第五步：一些闲话"><a href="#第五步：一些闲话" class="headerlink" title="第五步：一些闲话"></a>第五步：一些闲话</h2><p>相信经过上述四步，你已经对皮肤文件的内部非常熟悉了！<br>那么如何修改皮肤呢？首先要提示3点。<br>1.如果只是想看上去不一样，基本游玩方式不改变的话，那么建议是只用学好PS，直接对非整合的素材贴图进行修改，这样子是最快的。<br>2.不建议把自己魔改的半成品皮肤文件到处传播！很重要。<br>3.新手上路，修改一两步就最好调试一下，会有不少意想不到的冲突导致崩溃。<br>（可以查看文件目录下log文件夹内的崩溃日志寻找错误原因）</p><p>那么接着让我们开始介绍皮肤文件如何修改编辑吧！</p><h2 id="第六步：编辑皮肤文件的准备"><a href="#第六步：编辑皮肤文件的准备" class="headerlink" title="第六步：编辑皮肤文件的准备"></a>第六步：编辑皮肤文件的准备</h2><p>【移动端设备】<br>需要你有：<br>①安卓的设备<br>②MT管理器（用以编辑mui文件（文本编辑可打开））<br>③PhotoEditor (用以修改制作贴图素材)<br>优点：修改完mui数据可以直接切后台到malody查看效果，短时间内可以进行多次微调。<br>（但在更换贴图后，还是需要重启Malody才能生效）<br>缺点：手机上的图片素材不方便ps，且打包素材比较麻烦，不直观。<br>【电脑设备】<br>需要你有：<br>①支持自动换行的写字板（来编辑mui文件）<br>当然VScode/ python之类的也都可以ww<br>②Photoshop（用来修改制作贴图素材）<br>③TexturePacker（用来打包整合图片素材）</p><h2 id="第七步：认识mui文件内部结构"><a href="#第七步：认识mui文件内部结构" class="headerlink" title="第七步：认识mui文件内部结构"></a>第七步：认识mui文件内部结构</h2><p>用VS Code打开mui文件，你可以在mui内部，看到一堆ABCD，不要慌。<br>首先你可以看见它们是一段一段的，都是一个元件名称，紧跟着这个元件的属性和属性值（前面会有空格或者Tab来区分它们）<br>类似下面这种：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">note</span><br><span class="line">    tex=素材图片文件</span><br><span class="line">    anchor=锚定位</span><br><span class="line">    zindex=图层高度</span><br><span class="line">    size=长度,高度</span><br><span class="line">    pos=横坐标，纵坐标</span><br><span class="line">    .......</span><br><span class="line">    (具体属性可以查看wiki手册，每个不同的默认元件都有着不同的属性需要。)</span><br><span class="line">_ZiDingYiYuanJian</span><br><span class="line">    (自定义元件也是有着一堆属性，不同的是，它是根据type类型的不同，从而有着不同的属性需要。)</span><br></pre></td></tr></table></figure><br>那么通过观察，相信聪明的你可以判断出，mui本质上就是定义了一堆元件的一堆属性，像摆拼图一样，把各式各样拥有不同属性的元件拼在屏幕上，组成了皮肤整体。<br>那么就要讲到元件的区分了，元件可以分为默认元件和自定义元件两类。<br>其中，默认元件都是固定存在的（当然你也可以不去调用它），具体有note、key、hit、press、judge、score一家子、progress、musicbar、hit-fast/slow、pause、touch、bar等等，这些都是有着固定的一系列属性设定的默认元件。<br>那么自定义元件顾名思义就是自己定义的元件了，它经常被分为图片、文字、纯色、动画这几类，默认元件无法满足的设定，就会交给自定义元件去完成。（特点：自定义元件的名称前面一定有一个下划线符号）<br>关于，到底有哪些元件，它们又都有哪些属性，属性值都该如何去输入，这就需要你去看wiki的UIS手册慢慢查找了。<br>总结：总之mui里就是有着一堆属性的一堆元件就是了。</p><h2 id="第八步：后续学习方法"><a href="#第八步：后续学习方法" class="headerlink" title="第八步：后续学习方法"></a>第八步：后续学习方法</h2><p>经过上述7步，相信你已经初步对Malody的UIS皮肤结构有了一定的认识与了解，那么你接下来要做的就是以下几条：<br>1.翻看学习官网上大佬们写的皮肤，学习并思考他们的写法。<br>2.不停地翻看UIS wiki 手册，反复看反复用。<br>3.遇到问题时，冷静地带逻辑地去思考自己到底是哪一步出了问题。<br>4.多看优秀的美化设计，培养自己的艺术美感，不做丑陋皮肤。<br>5.多交流多学习多思考，多看多问多听，总之就是积累经验。<br>6.把灵感记下来，说不定以后会用上。<br>7.大胆假设，小心求证。<br>8.坚持并热爱，不断地学习并保持初心。</p>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> malody </tag>
            
            <tag> skin </tag>
            
            <tag> UIS </tag>
            
            <tag> 界面设计 </tag>
            
            <tag> UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>osu!做谱笔记</title>
      <link href="/2022/11/22/osu!%E5%81%9A%E5%9B%BE%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/11/22/osu!%E5%81%9A%E5%9B%BE%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：M000(MUG000) --><h1 id="1-使用you-get下载音视频"><a href="#1-使用you-get下载音视频" class="headerlink" title="1. 使用you-get下载音视频"></a>1. 使用you-get下载音视频</h1><p>you-get是一个基于Python3的库，功能类似于“硕鼠”和“IDM”，只要在F12开发者模式下能够找到音视频图片的地址，就都能下载。</p><h2 id="准备步骤："><a href="#准备步骤：" class="headerlink" title="准备步骤："></a>准备步骤：</h2><ol><li>安装python3的环境</li><li>安装pip</li><li>使用pip安装you-get库<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install you-get</span><br></pre></td></tr></table></figure><h2 id="操作步骤："><a href="#操作步骤：" class="headerlink" title="操作步骤："></a>操作步骤：</h2></li><li>查询下载格式<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">you-get -i https://www.bilibili.com/video/BV</span><br></pre></td></tr></table></figure></li><li>开始下载<figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">you-get --<span class="built_in">format</span>=(清晰度) -o 本地存放路径 -O 文件重命名名称 https://www.??????.com/??????</span><br></pre></td></tr></table></figure></li></ol><ul><li>例子：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">you-get --format=dash-flv480 -o D:\Download -O 230418 https://www.bilibili.com/video/BV</span><br></pre></td></tr></table></figure></li></ul><h1 id="2-寻找或制作谱子封面"><a href="#2-寻找或制作谱子封面" class="headerlink" title="2. 寻找或制作谱子封面"></a>2. 寻找或制作谱子封面</h1><h2 id="2-1-寻找封面"><a href="#2-1-寻找封面" class="headerlink" title="2.1 寻找封面"></a>2.1 寻找封面</h2><p>封面可以有以下几种获取方式：</p><ol><li>使用pivix等软件查找理想的图片(注意作者授权)</li><li>使用B站视频封面提取工具(在URL中的bilibili后面加一个q)</li><li>使用you-get下载图片(不常用)</li><li>使用waifu AI 智能生成背景图片(质量存在波动)<br>更多寻找理想的封面的方法有待更新。</li></ol><h2 id="2-2-对封面加作者标题信息"><a href="#2-2-对封面加作者标题信息" class="headerlink" title="2.2 对封面加作者标题信息"></a>2.2 对封面加作者标题信息</h2><p>一般可以直接使用封面，但为了美观与必要，最好注上画师id，歌曲名称，作曲者信息等。<br>推荐使用PS加描边字体，一般考虑以下这几种操作。</p><ul><li>添加文字后，调整字体（考虑曲画风格，选择圆滑、棱角、冷硬、无衬线等字体）</li><li>添加图层样式进行描边（考虑外描边以帮助显眼、外发光以增加凸出感）</li><li>文字位置要考虑到黄金比例与实际游玩时的可见原则</li></ul><h1 id="3-开始确认歌曲timing"><a href="#3-开始确认歌曲timing" class="headerlink" title="3. 开始确认歌曲timing"></a>3. 开始确认歌曲timing</h1><p>由于音游的制谱特殊性，故而BPM稳定，类EDM等风格的歌曲具有稳定的timing，十分方便制谱。<br>但是像变BPM、现场live、人声演唱、摇滚表演等风格的歌曲，就具有复杂的timing，严重一些的可能timing会复杂上百倍甚至上千倍。<br>如果是一开始进行谱面创作，推荐是采用BPM恒定的歌曲进行谱写，最好是打次打次分明的4拍子歌曲。</p><h2 id="3-1-确认变速与否以及BPM"><a href="#3-1-确认变速与否以及BPM" class="headerlink" title="3.1 确认变速与否以及BPM"></a>3.1 确认变速与否以及BPM</h2><ul><li>根据个人习惯找一个敲拍子的软件，osu自带的敲拍在不稳定时会发生回退，故而本人不常用。</li><li>这里使用安卓端的Soundbrenner APP，点击Player菜单，右下角有TAP按钮，一边听目标歌曲一边进行拍子与BPM的确认。</li><li>关注歌曲鼓点，并同时观察显示的BPM有无明显的变化，尤其在段落切换时。</li><li>如果全曲BPM基本恒定，那恭喜；如果BPM确实有明显变化，在估计难度后再考虑要不要进行下一步操作，并记录分段与bpm区段。</li><li>使用PC端MixMeister BPM Analyzer软件进行第二次测试作为参考（FL studio也可以）</li><li>打开osu!editor进行目标歌曲的编辑，在timing中输入BPM数值。</li><li>在输入BPM时，有一点需要注意：输入的BPM数值不宜过高、过低，会对后续写排列造成影响。建议数值范围在150~300之间。如果测出的数值过大、过小，可以考虑对原数值乘上一定倍数（例如：2x,3x,0.5x）</li></ul><h2 id="3-2-找到第一小节的第一拍"><a href="#3-2-找到第一小节的第一拍" class="headerlink" title="3.2 找到第一小节的第一拍"></a>3.2 找到第一小节的第一拍</h2><ul><li>在得知实际BPM并设定后，需要找到歌曲第一小节的第一处鼓点，对上大白线，并种下“红线”</li><li>可以开0.25x对音反复校准，添加第一个小节的note进行测试，对offset进行微调。</li><li>如果第一个小节的鼓点并不明显，可以对偏后一些的小节进行观察，先在后面鼓点明确的小节中种下“红线”。</li></ul><h2 id="3-3-对歌曲进行分段并确认无变速偏移"><a href="#3-3-对歌曲进行分段并确认无变速偏移" class="headerlink" title="3.3 对歌曲进行分段并确认无变速偏移"></a>3.3 对歌曲进行分段并确认无变速偏移</h2><ul><li>利用书签功能将整体音乐划分为若干小块，找到乐器、乐风的变化的白线处，按下Ctrl+B可以打一条蓝线（也可以打绿线）</li><li>按下Ctrl+Shift+B可以取消附近的书签蓝线。</li><li>在确定各个分段时，需要注意各个小节的重音是否对上了白线（BPM是否发生了变化/BPM是否偏快/偏慢）</li><li>就像拿砖头砌墙一样，一段段地去确认（如果BPM发生了明显的变化，可以第一时间敲红线纠正）</li><li>对部分分段（主要是副歌、后半段副歌端、耐力段等）打上kari区域（对绿线设置就可以设置kari的开始与结束）</li></ul><h1 id="4-对音"><a href="#4-对音" class="headerlink" title="4. 对音"></a>4. 对音</h1><p>对歌曲对音是非常重要的一环，这部分需要在精准完成timing的前提下进行操作。<br>部分歌曲可能不同于4拍子，可能是3拍子,会出现4分，6分音混杂的情况。严重一些的地方还有24分与32分音的混杂情况。这部分需要开0.5x,0.25x去仔细数，仔细听，如果实在无法确定，也可以开AU去看火焰图。<br>这一部分的操作比较考验耳朵，一般新人是无法一次性做好的。（就算是老谱师也有翻车的时候）<br>对音是一首谱子的基础，也是最耗费耐心与精力的一块，是一个谱子是否达到及格线的评判标准。<br>对音将会贯穿整首谱子的全程，需要持续注意。</p><h1 id="5-结构化设计"><a href="#5-结构化设计" class="headerlink" title="5. 结构化设计"></a>5. 结构化设计</h1><p>拿到一首歌曲的时候，需要对它的段落进行划分与构思。思考每一部分的最好表达。<br>通常会使用“书签”功能（蓝线Ctrl+B）来进行段落划分。<br>通常可以给一个大概的描述：</p><ul><li>这段intro，可以单点切入</li><li>这段铺垫，可以适当加难度</li><li>这段小提琴、人声、效果音，可以适当加面</li><li>这段有强烈节奏感，可以适当切换</li><li>这段有重复的重音，可以适当叠一下</li><li>这段是副歌，可以复杂一些</li><li>这段是尾杀，<strong><strong><em>*</em></strong></strong></li></ul><h1 id="6-采音"><a href="#6-采音" class="headerlink" title="6. 采音"></a>6. 采音</h1><p>对于部分老谱师来说，采音是很必要的一环。传统的切音音游，都有着按一下响一下的独特模拟演奏的特性。这部分特性同样适用于大多数老传统音游人的胃口。<br>对于一个新谱师而言，采音也是一门必修。需要做到的有：</p><ul><li>忠实于音乐的音，有就是有，没有就是没有（这里先不考虑dump与部分练习谱）</li><li>分清同时出现了哪些音，并做出采音数量的决定，以及采音的取舍。</li><li>对同样音乐部分的采音最好要统一，才能更好的还原模拟演奏与call back的感觉（被老谱师称为“一致性原则”）</li></ul><p>比如说：</p><ol><li>我把大部分鼓音(Drum)全抓在1轨（BMS风格）</li><li>重音拍始终比弱拍多1-2押(比如：重2弱1，重3弱2，…)但一般的弱拍不会超过3押。</li><li>同样的音高，采同样的轨道。(且在低密度时遵循“左低右高”的钢琴模拟原则)</li><li>独特的音色，可以对应独特的键押。(比如: 我会把重钝鼓采3合押，钝鼓采2合押，脆和音采2押(隔1)，钝和音采2押(隔2)，单音单押)但每个谱师都有自己独特的一套设计逻辑，需要自行探索，才能写出个人风格强烈的谱子。</li><li>同一时间段乐器混杂时，只采其中一个音轨的音。(比如：人声和钢琴和鼓混合，根据前后段的继承性，适当选择是全抓乐器，全抓人声，还是抓钢琴，抓鼓，还是抓乐器并适当抓人声面)<br>当然部分采音规则在面对手感和排列的需求时，是可以做出一定的让步的。(比如：镜像音高，适当加减押)<br>可以先来一首midi转谱体验一下，也许能有不同的视角去理解。<br>如果采音做好了，那么即使这个谱子的手感稀烂，但是模拟演奏感还是一流的，即基本满足游玩条件。</li></ol><h1 id="7-排列"><a href="#7-排列" class="headerlink" title="7. 排列"></a>7. 排列</h1><p>排列是指一段时间内，全轨道范围内的按键组合。<br>通常认为：按键的组合达到一定规模，就会形成排列；而根据各种排列的不同特性，会被分为不同的键型。<br>相关术语有“排列走向”、“排列手感”、“排列密度”等。</p><ol><li><p>最小的排列可以从“切”和“叠”开始说起。<br>“切”，全称“切换”，在大多数情形下，通常指单手侧控制下，不同轨道间的按键交替(不同时间点下的按键)—切换。<br>如果是在不同手的控制下，出现的按键交替，通常会被称为“散点”/“交互”/“跑键”等。<br>“叠”，在大多数情形下，会指相同轨道中，不同时间点下的按键层叠—叠键。<br>根据押数大小的区别，叠通常会被分为“大叠”、“中叠”、“小叠”、“纵叠”等。</p></li><li><p>随着轨道数量的上升，“切”会有一定的延展，出现“胶囊”，“裤衩”这种通常需要3行以上才能认定的键型。<br>这类键型用文字会比较难以描述，在这里先做一些抽象的介绍。<br>“胶囊”: 本质是一种拍切，拍的很大的切，且通常会形成闭合。<br>“裤衩”：本质是一种吃协调的速切，排的很满的双向切。通常一个“衩”的范围是3X3</p></li></ol><p>但排列不仅仅受限于键型。键型是前人谱师的一些优秀的排列成果，也有众多排列并没有被赋予键型的名号。(虽然大多数冷门的排列的手感可能都不是很好(划掉))<br>如果一位谱师的排列功底过硬，那么最直观的呈现就是这个谱师的谱子的手感会很棒(๑•̀ㅂ•́)و✧<br>但如果单方面过于注重排列，就可能缺失掉一些谱面的音乐表达力，逐渐失去谱子的音乐灵魂。<br>如果是优秀的排列，不但手感会很好，而且也会有很棒的音乐表现力，让人拍案叫绝，直呼十分有趣。</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> osu </tag>
            
            <tag> 做谱 </tag>
            
            <tag> you-get </tag>
            
            <tag> 音频 </tag>
            
            <tag> 视频 </tag>
            
            <tag> 下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS3学习笔记</title>
      <link href="/2022/11/16/CSS3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/11/16/CSS3%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A004(Article004) --><div class="note info flat"><p>本笔记记录了一些CSS3相关的基础和进阶知识，另附有4个案例，以便复习查阅。</p></div><details class="folding-tag" ><summary> CSS3基础知识 </summary>              <div class='content'>              <p><details class="folding-tag" ><summary> CSS基础-思维导图 </summary>              <div class='content'>              <p><img src="https://s2.loli.net/2022/12/25/1XshvnkzcK3HmPw.jpg" alt="A004-1s.jpg"></p>              </div>            </details></p><p><h1 id="1-CSS的三种使用方式"><a href="#1-CSS的三种使用方式" class="headerlink" title="1. CSS的三种使用方式"></a>1. CSS的三种使用方式</h1><p>一个标准的html文件框架如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;网站标题&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;这里是CSS区域&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    这里是HTML语言区域</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><br>CSS有三种写法：内嵌、外联、行内</p></p><p><p>小案例—-内嵌式写法<br>项目—-外联式写法<br>配合js—-行内写法</p></p><p><h2 id="1-1-CSS的内嵌式写法"><a href="#1-1-CSS的内嵌式写法" class="headerlink" title="1.1 CSS的内嵌式写法"></a>1.1 CSS的内嵌式写法</h2><p>内嵌式写法，在head标签的style标签内即可使用。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;CSS的内嵌式写法&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        /* 这里是CSS的注释 */</span><br><span class="line">        /* 选择器&#123;属性:属性值；&#125; */</span><br><span class="line">        /* 选择器用来定位标签，后面负责定义 */</span><br><span class="line">        p &#123;</span><br><span class="line">            /* 定义p标签的颜色 */</span><br><span class="line">            color: blue;</span><br><span class="line">            /* 定义p标签的字体大小 */</span><br><span class="line">            font-size: 30px;</span><br><span class="line">            /* 定义p标签的背景颜色 */</span><br><span class="line">            background-color: blueviolet;</span><br><span class="line">            /* 定义p标签的宽高度 */</span><br><span class="line">            width: 400;</span><br><span class="line">            height: 400;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 这里是HTML的注释 --&gt;</span><br><span class="line">    &lt;p&gt;Welcome!&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p></p><p><h2 id="1-2-CSS的外联式写法"><a href="#1-2-CSS的外联式写法" class="headerlink" title="1.2 CSS的外联式写法"></a>1.2 CSS的外联式写法</h2><p>外联式写法，在head标签的link标签内添加路径即可使用。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;CSS的外联式导入&lt;/title&gt;</span><br><span class="line">    /* 外联式CSS写法 */</span><br><span class="line">    /* 外联写法需要link标签 */</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;./2-CSS L1-2.css&quot;&gt; </span><br><span class="line">    /* href属性填css文件的路径与文件名称 */</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;p&gt;Welcome!!&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p></p><p><h2 id="1-3-CSS的行内式写法"><a href="#1-3-CSS的行内式写法" class="headerlink" title="1.3 CSS的行内式写法"></a>1.3 CSS的行内式写法</h2><p>行内式写法，直接在body标签内的具体标签内写style属性就好。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 这里是行内式CSS写法 --&gt;</span><br><span class="line">    &lt;div style=&quot;color: red; font-size: large;&quot;&gt;这里是div&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p></p><p><h1 id="2-CSS选择器"><a href="#2-CSS选择器" class="headerlink" title="2. CSS选择器"></a>2. CSS选择器</h1><p>CSS样式的具体定义需要使用“选择器”来进行定义具体对哪些部分进行格式配置。</p></p><p><p>选择器具体可以分为：<br>（1）标签选择器<br>（2）类选择器<br>（3）id选择器<br>（4）通配符选择器<br>这4类，更多的进阶选择器在后续会提及。</p></p><p><h2 id="2-1-标签选择器"><a href="#2-1-标签选择器" class="headerlink" title="2.1 标签选择器"></a>2.1 标签选择器</h2><p>选择器名直接用标签名指定。<br>例如，直接使用p{}对p标签进行css指定。<br>【格式】<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">标签名 &#123;css&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/* 默认在css的style标签内 */</span><br><span class="line">/* 第一种选择器：标签选择器 */</span><br><span class="line"></span><br><span class="line">p &#123;</span><br><span class="line">    color: blueviolet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></p><p><h2 id="2-2-类选择器"><a href="#2-2-类选择器" class="headerlink" title="2.2 类选择器"></a>2.2 类选择器</h2><p>【格式】<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.自定义名字 &#123;css&#125;</span><br></pre></td></tr></table></figure><br>类选择器使用注意点：<br>（1）类选择器的名字必须以数字、字母、下划线、中划线组成，不能以数字、中划线开头。<br>（2）一个标签可以有多个类名，以空格分开。<br>（3）类选择器可以对已定义过的进行覆盖(单独定义)</p><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/* 第二种选择器：类选择器 */</span><br><span class="line">.aqua &#123;</span><br><span class="line">    color: aqua;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 这部分是在body标签内 --&gt;</span><br><span class="line">&lt;div class=&quot;aqua&quot;&gt;这里是第二行&lt;/div&gt;</span><br><span class="line">&lt;!-- class属性添加类名,对应css用类选择器定义 --&gt;</span><br><span class="line">&lt;div class=&quot;aqua large&quot;&gt;一个标签可以用多个类选择器&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p><h2 id="2-3-id选择器"><a href="#2-3-id选择器" class="headerlink" title="2.3 id选择器"></a>2.3 id选择器</h2><p>【格式】<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#唯一的id &#123;css&#125;</span><br></pre></td></tr></table></figure></p></p><p><p>id需要唯一，无法反复使用（某种意义上不如行内式）id选择器用来给js加动态效果</p><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/* 第三种选择器：id选择器（配合js找标签使用，独一无二的对应） */</span><br><span class="line">#blue &#123;</span><br><span class="line">    color: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;blue&quot;&gt;id选择器的使用&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p><h2 id="2-4-通配符选择器"><a href="#2-4-通配符选择器" class="headerlink" title="2.4 通配符选择器"></a>2.4 通配符选择器</h2><p>【格式】<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*&#123;css&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/* 第四种选择器：通配符选择器 */</span><br><span class="line">/* 极少使用，全局定义的选择器，不论什么标签都会被改变 */</span><br><span class="line">/* 一般用来全选标签，并清除内外边距(全局格式) */</span><br><span class="line">* &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></p><p><h1 id="3-字体与文本样式"><a href="#3-字体与文本样式" class="headerlink" title="3. 字体与文本样式"></a>3. 字体与文本样式</h1><p><img src="https://s2.loli.net/2022/12/18/nyDOWCgZd1ukx3V.jpg" alt="A004-1-3.JPG"></p></p><p><h2 id="3-1-字体样式"><a href="#3-1-字体样式" class="headerlink" title="3.1 字体样式"></a>3.1 字体样式</h2><h3 id="3-1-1-斜体-font-style"><a href="#3-1-1-斜体-font-style" class="headerlink" title="3.1.1 斜体(font-style)"></a>3.1.1 斜体(font-style)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.font-style &#123;</span><br><span class="line">    font-style: italic</span><br><span class="line">   /* 默认normal、斜体italic */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><h3 id="3-1-2-粗体-font-weight"><a href="#3-1-2-粗体-font-weight" class="headerlink" title="3.1.2 粗体(font-weight)"></a>3.1.2 粗体(font-weight)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.font-weight &#123;</span><br><span class="line">        font-weight: 700;</span><br><span class="line">        /* 正常粗细normal、400 */</span><br><span class="line">        /* 加粗bold、700 */</span><br><span class="line">        /* 数字范围100-900 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><h3 id="3-1-3-大小-font-size"><a href="#3-1-3-大小-font-size" class="headerlink" title="3.1.3 大小(font-size)"></a>3.1.3 大小(font-size)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.font-size &#123;</span><br><span class="line">        font-size: 20px;</span><br><span class="line">        /* font-size属性默认16px */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><h3 id="3-1-4-字体-font-family"><a href="#3-1-4-字体-font-family" class="headerlink" title="3.1.4 字体(font-family)"></a>3.1.4 字体(font-family)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.font-family &#123;</span><br><span class="line">        font-family: &#x27;Times New Roman&#x27;, Times, serif;</span><br><span class="line">        /* 多个逗号以备多种字体输出，以便用户显示（，serif以兼容） */</span><br><span class="line">        /* font-family属性选择字体 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><p>【设计建议】 字体win用微软雅黑；mac用苹方等无衬线字体sans-serif（黑体、Arial）；报纸用衬线字体（宋体、新罗马）；等宽字体一般做海报（Consolas/fira code）</p></p><p><h3 id="3-1-5-一次性定义-“斜粗大体”-【重点】"><a href="#3-1-5-一次性定义-“斜粗大体”-【重点】" class="headerlink" title="3.1.5 一次性定义(“斜粗大体”)【重点】"></a>3.1.5 一次性定义(“斜粗大体”)【重点】</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.font &#123;</span><br><span class="line">    font:italic 700 60px 黑体;</span><br><span class="line">    /* 常用的组合化简写法（复合属性），“斜粗大体”，只能省略前两个属性 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.one &#123;</span><br><span class="line">    font: italic 700 32px/2 宋体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><p>CSS的属性遵循层叠覆盖原则，后来的会覆盖前面的。</p></p><p><h2 id="3-2-文本样式"><a href="#3-2-文本样式" class="headerlink" title="3.2 文本样式"></a>3.2 文本样式</h2><h3 id="3-2-1-缩进"><a href="#3-2-1-缩进" class="headerlink" title="3.2.1 缩进"></a>3.2.1 缩进</h3><p>text-indent属性<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">p &#123;</span><br><span class="line">    text-indent: 2em;</span><br><span class="line">    /* text-indent属性用于缩进；有xxpx和xxem两种写法(em为一个字的宽度) */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></p><p><h3 id="3-2-2-布局"><a href="#3-2-2-布局" class="headerlink" title="3.2.2 布局"></a>3.2.2 布局</h3><h4 id="1-内容布局（标签内），text-align属性-center-left-right"><a href="#1-内容布局（标签内），text-align属性-center-left-right" class="headerlink" title="1. 内容布局（标签内），text-align属性(center,left,right)"></a>1. 内容布局（标签内），text-align属性(center,left,right)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    /* text-align属性用于布局左中右对齐【重要】 */</span><br><span class="line">    /* center/left/right */</span><br><span class="line">    /* 该align属性也可用于文本、span、a、input、img等标签(需要对父级标签使用) */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><p>例子：使用text-align属性让图片居中<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">.deb &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    /* 这个用于图片居中 */</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&lt;div class=&quot;deb&quot;&gt;&lt;img src=&quot;./pic/ui-edit-bg3.png&quot; alt=&quot;显示失败&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p></p><p><h4 id="2-标签布局（标签本身），margin属性"><a href="#2-标签布局（标签本身），margin属性" class="headerlink" title="2. 标签布局（标签本身），margin属性"></a>2. 标签布局（标签本身），margin属性</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    margin: 0 auto;</span><br><span class="line">    /* 让标签本身水平居中 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><h3 id="3-2-3-文本修饰"><a href="#3-2-3-文本修饰" class="headerlink" title="3.2.3 文本修饰"></a>3.2.3 文本修饰</h3><p>关于文字的下划线，删除线，上划线，清除下划线<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    text-decoration: line-through;</span><br><span class="line">    /* underline（下划线）;line-through（删除线）;overline（上划线）;none(用于清除a标签的下划线) */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></p><p><h3 id="3-2-4-行高设置"><a href="#3-2-4-行高设置" class="headerlink" title="3.2.4 行高设置"></a>3.2.4 行高设置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    line-height: normal;</span><br><span class="line">    /* line-height属性用于控制行间距，值可用xxpx,或者一个基于fontsize的倍数 */</span><br><span class="line">    /* 值取1时，取消上下间距 */</span><br><span class="line">    /* 在“斜粗大体”的复合写法中，跟在大/后面 */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><h1 id="4-颜色"><a href="#4-颜色" class="headerlink" title="4. 颜色"></a>4. 颜色</h1><p>有关颜色有color，bgc(background-color)这几种属性。</p></p><p><p>具体颜色可以有四种表达方式：</p></p><p><ol></p><p><li>关键词(blue\yellow) </li></p><p><li>rgb表示方法rgb(255,0,0)</li></p><p><li>rgba(255,0,0,0-1) </li></p><p><li>16进制表示法#ef4123<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.color &#123;</span><br><span class="line">    color: blanchedalmond;</span><br><span class="line">    color: #ef4123;</span><br><span class="line">    background-color: rgba(255,255,0,0.5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>              </div>            </details></li></ol><details class="folding-tag" ><summary> CSS3进阶知识 </summary>              <div class='content'>              <p><details class="folding-tag" ><summary> CSS进阶-思维导图 </summary>              <div class='content'>              <p><img src="https://s2.loli.net/2022/12/25/5tNWEycRqQMPgSw.jpg" alt="A004-2s.jpg"></p>              </div>            </details></p><p><h1 id="5-更多选择器"><a href="#5-更多选择器" class="headerlink" title="5. 更多选择器"></a>5. 更多选择器</h1><p>（1）复合选择器<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;后代选择器 (对后代的对应标签全部定义)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;子代选择器 (只对子代对应标签进行定义)<br>（2）并集选择器 (选中多种标签，设置同样的css)<br>（3）交集选择器 (对添加过特定类选择器的标签单独定义)<br>（4）hover伪类选择器 (设定鼠标悬停样式)</p></p><p><h2 id="5-1-复合选择器"><a href="#5-1-复合选择器" class="headerlink" title="5.1 复合选择器"></a>5.1 复合选择器</h2><h3 id="5-1-1-后代选择器"><a href="#5-1-1-后代选择器" class="headerlink" title="5.1.1 后代选择器"></a>5.1.1 后代选择器</h3><p>对A标签内所有嵌套下的B标签进行全部设定。<br>形式：父选择器 子选择器 {css内容}<br>(优点：不用取名，直接套用现有环境)<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        /* 单独对div标签下的p标签进行颜色设置 */</span><br><span class="line">        div p &#123;</span><br><span class="line">            color: blue;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;p&gt;这里是p标签&lt;/p&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;p&gt;这里是div标签下的p标签&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><br>其结果是，p标签文字内容不受到div p选择器设定，正常显示黑色；而div标签下的p标签文字内容受到后代选择器设定，显示为蓝色。</p></p><p><h3 id="5-1-2-子代选择器"><a href="#5-1-2-子代选择器" class="headerlink" title="5.1.2 子代选择器"></a>5.1.2 子代选择器</h3><p>后代选择器会把儿子孙子辈的同名标签全部选中，如果只是想选中子代的标签，可以用子代选择器。<br>形式：父选择器&gt;子代选择器 {css内容}<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div&gt;a &#123;</span><br><span class="line">            color: aqua;    /* 子代选择-div-a 青色 */</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;a href=&quot;#&quot;&gt;这里是div-a&lt;/a&gt;</span><br><span class="line">            &lt;p&gt;</span><br><span class="line">                &lt;a href=&quot;#&quot;&gt;这里是div-p-a&lt;/a&gt;</span><br><span class="line">            &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><br>其结果是，div/a受到子代选择器设定，显示为青色；div/p/a未受到子代选择器的设定，正常显示超链接颜色。</p></p><p><h2 id="5-2-并集选择器"><a href="#5-2-并集选择器" class="headerlink" title="5.2 并集选择器"></a>5.2 并集选择器</h2><p>并集选择器可以对多个标签设置同样的样式。<br>选择器名用逗号隔开，可以用类选择器，id选择器等。<br>形式如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        /* p,span,div,h1设置为红色 */</span><br><span class="line">        p,</span><br><span class="line">        div,</span><br><span class="line">        span,</span><br><span class="line">        h1 &#123;</span><br><span class="line">            color: brown;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;p&gt;p&lt;/p&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        div</span><br><span class="line">        &lt;span&gt;1&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;span&gt;span&lt;/span&gt;</span><br><span class="line">    &lt;h1&gt;h1&lt;/h1&gt;</span><br><span class="line">    &lt;h2&gt;h2&lt;/h2&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><br>其结果是，p,span,div,h1标签内容都显示为红色，h2正常显示。</p></p><p><h2 id="5-3-交集选择器"><a href="#5-3-交集选择器" class="headerlink" title="5.3 交集选择器"></a>5.3 交集选择器</h2><p>对有特定类属性的标签进行单独定义，是类选择器的完全体。<br>形式：选择器.类选择器 {css内容}<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        /* 比如，对有box类属性的p标签进行css定义 */</span><br><span class="line">        p.box &#123;</span><br><span class="line">            color: aqua;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- 对有特定类属性的标签进行单独定义 --&gt;</span><br><span class="line">    &lt;p&gt;ppp&lt;/p&gt;</span><br><span class="line">    &lt;p class=&quot;box&quot;&gt;p（box）&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><br>其结果是，带有box属性的p标签显示为青色，不带box属性的p标签正常显示。</p></p><p><h2 id="5-4-hover伪类选择器"><a href="#5-4-hover伪类选择器" class="headerlink" title="5.4 hover伪类选择器"></a>5.4 hover伪类选择器</h2><p>鼠标悬停的css样式，任何标签都可以写。<br>形式：选择器:hover {css}<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        /* 比如，a标签悬停变紫 */</span><br><span class="line">        a:hover &#123;</span><br><span class="line">            color: blueviolet;</span><br><span class="line">            background-color: bisque;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot;&gt;aaaaaaaaaaaaaa&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><br>其结果是，a标签鼠标悬停变紫。</p></p><p><h1 id="6-Emmet语法"><a href="#6-Emmet语法" class="headerlink" title="6. Emmet语法"></a>6. Emmet语法</h1><p>记录了一些快捷输入<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            /* fsz */</span><br><span class="line">            font-size: 10;</span><br><span class="line">            /* fw */</span><br><span class="line">            font-weight: normal;</span><br><span class="line">            /* w700 */</span><br><span class="line">            width: 700px;</span><br><span class="line">            /* bgc */</span><br><span class="line">            background-color: #fff;</span><br><span class="line">            /* lh */</span><br><span class="line">            line-height: 14;</span><br><span class="line">            /* w300+h200+bgc */</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: #fff;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;Emmet语法&lt;/h1&gt;</span><br><span class="line">    &lt;img src=&quot;/pic/Emmet语法实例.png&quot; alt=&quot;&quot;&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">    &lt;!-- h1 --&gt;</span><br><span class="line">    &lt;h1&gt;&lt;/h1&gt;</span><br><span class="line">    &lt;!-- .box --&gt;</span><br><span class="line">    &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;!-- p.box --&gt;</span><br><span class="line">    &lt;p class=&quot;box&quot;&gt;&lt;/p&gt;</span><br><span class="line">    &lt;!-- #box --&gt;</span><br><span class="line">    &lt;div id=&quot;box&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;!-- p#box --&gt;</span><br><span class="line">    &lt;p id=&quot;box&quot;&gt;&lt;/p&gt;</span><br><span class="line">    &lt;!-- p.red#one --&gt;</span><br><span class="line">    &lt;p class=&quot;red&quot; id=&quot;one&quot;&gt;&lt;/p&gt;</span><br><span class="line">    &lt;!-- div+p --&gt;</span><br><span class="line">    &lt;div&gt;&lt;/div&gt;</span><br><span class="line">    &lt;p&gt;&lt;/p&gt;</span><br><span class="line">    &lt;!-- div&gt;p --&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;p&gt;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- ul&gt;li --&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;!-- ul&gt;li*3 --&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;!-- ul&gt;li&#123;wenzi&#125;*3 --&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;wenzi&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;wenzi&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;wenzi&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;!-- ul&gt;li&#123;$&#125;*3 --&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;1&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;2&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;3&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;!-- end --&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p></p><p><h1 id="7-盒子背景相关"><a href="#7-盒子背景相关" class="headerlink" title="7. 盒子背景相关"></a>7. 盒子背景相关</h1><p>img图片标签与背景图片的区别</p></p><ol><li>背景图片依赖盒子，需要设置宽高</li><li>img用于产品展示等重要插入图片</li></ol><p>本章代码内容均默认在div选择器内书写。<br>先召唤一个400x400的盒子：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">width: 400px;</span><br><span class="line">height: 400px;  /* 申请一个400*400的盒子 */</span><br><span class="line">color: azure;  /* 文字颜色 */</span><br></pre></td></tr></table></figure></p><h2 id="7-1-背景色"><a href="#7-1-背景色" class="headerlink" title="7.1 背景色"></a>7.1 背景色</h2><p>背景色，background-color,bgc, 有3种书写形式。</p><ul><li>英文语句，十六进制，RGBa<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">background-color: rgba(0,0,0,.5);</span><br><span class="line">background-color: pink;</span><br><span class="line">background-color: #ccc;</span><br></pre></td></tr></table></figure></li></ul><h2 id="7-2-背景图"><a href="#7-2-背景图" class="headerlink" title="7.2 背景图"></a>7.2 背景图</h2><p>背景图片，background-image，bgi, 默认会自动平铺（铺地砖）<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-image: url(./pic/200x200.jpg);</span><br></pre></td></tr></table></figure></p><h2 id="7-3-背景图平铺"><a href="#7-3-背景图平铺" class="headerlink" title="7.3 背景图平铺"></a>7.3 背景图平铺</h2><p>背景图片平铺设定，background-repeat，bgr, 通常用于设定让小图片不要平铺，只显示1次。</p><ul><li>repeat: 水平垂直平铺</li><li>no-repeat: 不平铺</li><li>repeat-x: 水平平铺</li><li>repeat-y: 垂直平铺<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background-repeat: no-repeat;</span><br></pre></td></tr></table></figure></li></ul><h2 id="7-4-背景图位置"><a href="#7-4-背景图位置" class="headerlink" title="7.4 背景图位置"></a>7.4 背景图位置</h2><p>背景图片位置，用于定义背景图片在盒子中的位置。<br>background-position，bgp, 书写形式如下：<br>background-position: 水平位置 垂直位置;<br>其中支持方位词与数值2种表达方式。</p><ul><li>方位词 水平位置：left, center, right ; 垂直位置：top, center, bottom </li><li>数字+px<br>例如：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">background-position: center center; (可以缩写成一个center)</span><br><span class="line">background-position: -50px 100px; （左上角0，0）</span><br></pre></td></tr></table></figure></li></ul><h2 id="7-5-复合属性连写"><a href="#7-5-复合属性连写" class="headerlink" title="7.5 复合属性连写"></a>7.5 复合属性连写</h2><p>背景相关属性连写（色图平位）<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: pink url(./pic/200x200.jpg) no-repeat center</span><br></pre></td></tr></table></figure><br>其中，英文可以乱序写，但数值不可以乱序写(过于智能了)</p><h1 id="8-元素显示模式"><a href="#8-元素显示模式" class="headerlink" title="8. 元素显示模式"></a>8. 元素显示模式</h1><p>标签，也称标记，也称元素。<br>元素显示模式，也就是标签的几种显示样式。<br>元素一共有3种显示模式：块、行内、行内块</p><ol><li>块级显示模式：独占一行；宽度默认和父级一样宽；可以css设置宽高；（例如：div）</li><li>行内显示模式：一行多个；宽高由内容决定，不可以css设置宽高；（例如：span,a）</li><li>行内块显示模式：一行多个；可以css设置宽高；（例如：input,textarea,img）<br> ps.加宽加高加背景色的css可以分辨标签的到底是块还是行内<br>显示模式转换？display属性写在css里<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">display: block /转换为块</span><br><span class="line">display: inline-block /转换为行内块</span><br><span class="line">display: inline /转换为行内</span><br></pre></td></tr></table></figure>显示模式经常用于元素的换行与否以及元素的宽高设定布局等等。</li></ol><ul><li>【拓展】标签嵌套<br>  块一般作为大容器，当中嵌套多个元素，但p标签里不要丢div/p/h等；<br>  a标签里可以嵌套任何元素。</li></ul><h1 id="9-CSS特性"><a href="#9-CSS特性" class="headerlink" title="9. CSS特性"></a>9. CSS特性</h1><ol><li>继承性：子元素默认继承父元素的样式（文字控制属性都会继承）<br> 但a的color, h系列的font-size都会继承失效</li><li>层叠性：不同的属性会叠加，相同的属性以最后的为准。<br> （选择器优先级相同时，才有层叠性）</li></ol>              </div>            </details><details class="folding-tag" ><summary> CSS3基础案例(1-4) </summary>              <div class='content'>              <h1 id="例1：新闻网站布置"><a href="#例1：新闻网站布置" class="headerlink" title="例1：新闻网站布置"></a>例1：新闻网站布置</h1><div class="tabs" id="2.1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#2.1-1">代码</button></li><li class="tab"><button type="button" data-href="#2.1-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="2.1-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div &#123;</span><br><span class="line">            width: 800px;</span><br><span class="line">            height: 600px;</span><br><span class="line">            background-color: antiquewhite;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line">        .center &#123;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        .suojian &#123;</span><br><span class="line">            text-indent: 2em;</span><br><span class="line">        &#125;</span><br><span class="line">        .color1 &#123;</span><br><span class="line">            color: #808080;</span><br><span class="line">        &#125;</span><br><span class="line">        .color2 &#123;</span><br><span class="line">            color: #87ceeb;</span><br><span class="line">            font-weight: 700;</span><br><span class="line">        &#125;</span><br><span class="line">        a &#123;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">...</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h1 class=&quot;center&quot;&gt;中国房地产市场的长期需求测算（上）&lt;/h1&gt;</span><br><span class="line">        &lt;p class=&quot;center&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;color1&quot;&gt;2022-10-25 13:13&lt;/span&gt;</span><br><span class="line">            &lt;span class=&quot;color2&quot;&gt;第一财经&lt;/span&gt;</span><br><span class="line">            &lt;a href=&quot;#&quot;&gt;收藏本文&lt;/a&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">        &lt;hr&gt;</span><br><span class="line">        &lt;p class=&quot;suojian&quot;&gt;根据我们的预测结果，2022-2035年，中国新增商品房需求将呈现“L”型的回落趋势——2022-2025年，新增商品房的需求中枢约为11.3亿平方米，2026-2030年约为9.6亿平方米，2031-2035年约为8.7亿平方米。&lt;/p&gt;</span><br><span class="line">        &lt;p class=&quot;suojian&quot;&gt;2022年，由于投机性需求集中衰退，相比于2021年，新增商品房需求将出现较大幅度的回落；而此后，尽管新增商品房需求仍在逐年回落，但回落的斜率将逐渐放缓。&lt;/p&gt;</span><br><span class="line">        &lt;p class=&quot;suojian&quot;&gt;从这个角度来看，房地产短期问题的答案实际上一目了然：&lt;/p&gt;</span><br><span class="line">        &lt;p class=&quot;suojian&quot;&gt;第一，房地产需求进入了新的周期，真实需求长期回落的情况下，小规模刺激效果有限。&lt;/p&gt;</span><br><span class="line">        &lt;p class=&quot;suojian&quot;&gt;第二，未来想要实现此前几轮放松周期的政策效果，需要比以往更大的刺激力度，相应带来的高杠杆、高房价等潜在问题也会更大，因此我们认为，再次出台大规模刺激政策的可能性有限。&lt;/p&gt;</span><br><span class="line">        &lt;p class=&quot;suojian&quot;&gt;&lt;b&gt;风险提示：&lt;/b&gt;户籍政策变化可能导致城镇化进程超预期；房地产政策可能超预期；文中测算具有一定主观性，仅供参考。&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="2.1-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/MyibZahAVj4KF5p.jpg" alt="A004-2-2.JPG"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="例2：产品展示"><a href="#例2：产品展示" class="headerlink" title="例2：产品展示"></a>例2：产品展示</h1><div class="tabs" id="2.2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#2.2-1">代码</button></li><li class="tab"><button type="button" data-href="#2.2-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="2.2-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">&lt;style&gt;</span><br><span class="line">        body &#123;</span><br><span class="line">            background-color: #f5f5f5;</span><br><span class="line">        &#125;</span><br><span class="line">        .goods &#123;</span><br><span class="line">            width: 234px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: #fff;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            text-align: center;</span><br><span class="line">            /* margin让div盒子居中，align让内容居中 */</span><br><span class="line">        &#125;</span><br><span class="line">        img &#123;</span><br><span class="line">            width: 160px;</span><br><span class="line">        &#125;</span><br><span class="line">        .title &#123;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            line-height: 25px;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        .info &#123;</span><br><span class="line">            font-size: 12px;</span><br><span class="line">            color:#ccc ;</span><br><span class="line">        &#125;</span><br><span class="line">        .money &#123;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            color: #ffa500;</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">...</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;goods&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;./pic/ui-edit-bg3.png&quot; alt=&quot;显示失败&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;title&quot;&gt;无敌魔方&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;info&quot;&gt;纯水晶打造&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;money&quot;&gt;1999RMB&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="2.2-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/pj7equQ3GlgXvFc.jpg" alt="A004-2-1.JPG"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details><details class="folding-tag" ><summary> CSS3进阶案例(5-9) </summary>              <div class='content'>              <h1 id="例3：导航按钮的CSS"><a href="#例3：导航按钮的CSS" class="headerlink" title="例3：导航按钮的CSS"></a>例3：导航按钮的CSS</h1><div class="tabs" id="3.1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#3.1-1">代码</button></li><li class="tab"><button type="button" data-href="#3.1-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="3.1-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;CSS+ 综合案例 - 导航按钮&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        a &#123;</span><br><span class="line">            text-decoration: none; </span><br><span class="line">            /* 消除链接下划线,tdn */</span><br><span class="line">            /* w100+h50+bgc */</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background-color: red;</span><br><span class="line">            /* 宽高不生效？a是行内，需要转行内块 */</span><br><span class="line">            display: inline-block;</span><br><span class="line">            color: white;</span><br><span class="line">            /* 文本水平居中，tac */</span><br><span class="line">            text-align: center;</span><br><span class="line">            /* 文本垂直居中，行高与元素高度一致 */</span><br><span class="line">            line-height: 50px;</span><br><span class="line">        &#125;</span><br><span class="line">        a:hover &#123;</span><br><span class="line">            background-color: orange;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!-- a&#123;导航$&#125;*5 （Emmet语法） --&gt;</span><br><span class="line">    &lt;!-- 【小秘诀】一次性在多行输入：alt+shift+鼠标点击，可以在多处出现光标，一次性在多处输入 --&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot;&gt;导航1&lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot;&gt;导航2&lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot;&gt;导航3&lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot;&gt;导航4&lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot;&gt;导航5&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="3.1-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/23/uEMevFYTjRq9JNg.jpg" alt="A004-3-1.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="例4：图片背景导航按钮的CSS"><a href="#例4：图片背景导航按钮的CSS" class="headerlink" title="例4：图片背景导航按钮的CSS"></a>例4：图片背景导航按钮的CSS</h1><div class="tabs" id="3.2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#3.2-1">代码</button></li><li class="tab"><button type="button" data-href="#3.2-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="3.2-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;CSS+ 综合案例 - 导航按钮2&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        a &#123;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 60px;</span><br><span class="line">            /* background-color: pink; */</span><br><span class="line">            display: inline-block;</span><br><span class="line">            text-align: center;</span><br><span class="line">            line-height: 50px;</span><br><span class="line">            /* 50px正好是圆角矩形的高度 */</span><br><span class="line">            color: #fff;</span><br><span class="line">        &#125;</span><br><span class="line">        /* 每个a的背景图片不同？单独加样式，这里用class类选择器来实现 */</span><br><span class="line">        .one &#123;</span><br><span class="line">            background-image: url(./pic/an-red.png);</span><br><span class="line">        &#125;</span><br><span class="line">        .two &#123;</span><br><span class="line">            background-image: url(./pic/an-green.png);</span><br><span class="line">        &#125;</span><br><span class="line">        .three &#123;</span><br><span class="line">            background-image: url(./pic/an-orange.png);</span><br><span class="line">        &#125;</span><br><span class="line">        .four &#123;</span><br><span class="line">            background-image: url(./pic/an-p.png);</span><br><span class="line">        &#125;</span><br><span class="line">        /* 悬停全部显示蓝色 */</span><br><span class="line">        .one:hover &#123;</span><br><span class="line">            background-image: url(./pic/an-blue.png);</span><br><span class="line">        &#125;</span><br><span class="line">        .two:hover &#123;</span><br><span class="line">            background-image: url(./pic/an-blue.png);</span><br><span class="line">        &#125;</span><br><span class="line">        .three:hover &#123;</span><br><span class="line">            background-image: url(./pic/an-blue.png);</span><br><span class="line">        &#125;</span><br><span class="line">        .four:hover &#123;</span><br><span class="line">            background-image: url(./pic/an-blue.png);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot; class=&quot;one&quot;&gt;五彩导航&lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot; class=&quot;two&quot;&gt;五彩导航&lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot; class=&quot;three&quot;&gt;五彩导航&lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot; class=&quot;four&quot;&gt;五彩导航&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="3.2-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/23/E2AVzOJZGh9seax.jpg" alt="A-004-3-2.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details><p>【CSS的更多笔记请见《CSS3学习笔记2》】</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> VSCode </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML5学习笔记</title>
      <link href="/2022/11/15/HTML5%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/11/15/HTML5%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A001(Article001) --><div class="note info flat"><p>本笔记记录了一些HTML5相关的基础知识，以便复习查阅。</p></div><details class="folding-tag" ><summary> HTML5基础知识 </summary>              <div class='content'>              <h1 id="0-使用VScode进行编辑"><a href="#0-使用VScode进行编辑" class="headerlink" title="0. 使用VScode进行编辑"></a>0. 使用VScode进行编辑</h1><p>建议使用插件“open in browser”</p><h2 id="一些快捷键记录"><a href="#一些快捷键记录" class="headerlink" title="一些快捷键记录"></a>一些快捷键记录</h2><ul><li>“Alt + B”               快速渲染出网页窗口</li><li>“！+ Enter”             调出H5框架</li><li>“Ctrl+/”                快捷备注</li><li>“Shift + Alt + down”    向下复制黏贴</li><li>“Shift + tab”           反向缩进</li></ul><h1 id="1-H5排版标签"><a href="#1-H5排版标签" class="headerlink" title="1. H5排版标签"></a>1. H5排版标签</h1><ul><li>标题标签 h1,h2,h3,h4,h5,h6</li><li>段落标签 p</li><li>换行标签 br</li><li>分割线标签 hr</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;标签的基本形式&lt;/p&gt;</span><br></pre></td></tr></table></figure><h1 id="2-文本格式标签"><a href="#2-文本格式标签" class="headerlink" title="2. 文本格式标签"></a>2. 文本格式标签</h1><ul><li>加粗 strong/b</li><li>下划线 ins/u</li><li>斜体 em/i</li><li>删除线 del/s</li></ul><h1 id="3-路径调用基础"><a href="#3-路径调用基础" class="headerlink" title="3. 路径调用基础"></a>3. 路径调用基础</h1><ul><li>同级目录：“/文件名称”或者“./文件名称”</li><li>下级目录：“文件夹名/文件名称”</li><li>上级目录：“../文件名称”</li></ul><h1 id="4-多媒体元件调用"><a href="#4-多媒体元件调用" class="headerlink" title="4. 多媒体元件调用"></a>4. 多媒体元件调用</h1><ul><li>图片：img<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;./xxx.jpg&quot; alt=&quot;如果加载失败的替换文本&quot; title=&quot;悬停时的解释文本&quot;&gt;</span><br></pre></td></tr></table></figure></li><li>还有width和height等属性，如果缺乏定义则按比例缩放</li><li>音频：audio<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;audio src=&quot;./xxx.mp3&quot;(mp3/wav/ogg) controls(显示控制器) autoplay(自动播放) loop(循环)&gt;&lt;/audio&gt;</span><br></pre></td></tr></table></figure></li><li>视频：video<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video src=&quot;./xxx.mp4&quot;(mp4/WebM/ogg) controls(显示控制器) autoplay(muted) loop(循环)&gt;&lt;/video&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="5-超链接标签"><a href="#5-超链接标签" class="headerlink" title="5. 超链接标签"></a>5. 超链接标签</h1><ul><li>链接：a<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;./xxx.html&quot;(目标地址) target=&quot;_self/_blank&quot;&gt;链接文本&lt;/a&gt;</span><br></pre></td></tr></table></figure>其中目标地址可以填#空链接，url链接等，target属性的“_self/_blank”对应着(覆盖式跳转/保留源网页跳转)</li></ul><h1 id="6-列表元件"><a href="#6-列表元件" class="headerlink" title="6. 列表元件"></a>6. 列表元件</h1><h2 id="6-1-无序列表（新闻公告类"><a href="#6-1-无序列表（新闻公告类" class="headerlink" title="6.1 无序列表（新闻公告类)"></a>6.1 无序列表（新闻公告类)</h2><ul><li>ul+li标签<div class="tabs" id="1.6.1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.6.1-1">代码</button></li><li class="tab"><button type="button" data-href="#1.6.1-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.6.1-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li&gt;无序1&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;无序2&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;无序3&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.6.1-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/rboatSi3mwsp2fX.png" alt="A001-1-6-1.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li></ul><h2 id="6-2-有序列表（热门搜索类）"><a href="#6-2-有序列表（热门搜索类）" class="headerlink" title="6.2 有序列表（热门搜索类）"></a>6.2 有序列表（热门搜索类）</h2><ul><li>ol+li标签<div class="tabs" id="1.6.2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.6.2-1">代码</button></li><li class="tab"><button type="button" data-href="#1.6.2-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.6.2-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ol&gt;</span><br><span class="line">    &lt;li&gt;第一个&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;第二个&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;第三个&lt;/li&gt;</span><br><span class="line">&lt;/ol&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.6.2-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/lQ42TYPoGdeF1Zg.png" alt="A001-1-6-2.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li></ul><h2 id="6-3-自定义列表（分类功能类）"><a href="#6-3-自定义列表（分类功能类）" class="headerlink" title="6.3 自定义列表（分类功能类）"></a>6.3 自定义列表（分类功能类）</h2><ul><li>dl+dt+dd标签 （召唤+主题+内容）<div class="tabs" id="1.6.3"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.6.3-1">代码</button></li><li class="tab"><button type="button" data-href="#1.6.3-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.6.3-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dl&gt;</span><br><span class="line">    &lt;dt&gt;帮助中心&lt;/dt&gt;</span><br><span class="line">    &lt;dd&gt;功能1&lt;/dd&gt;</span><br><span class="line">    &lt;dd&gt;功能2&lt;/dd&gt;</span><br><span class="line">&lt;/dl&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.6.3-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/mJUBwOTxARQ51bF.png" alt="A001-1-6-3.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li></ul><h1 id="7-表格元件"><a href="#7-表格元件" class="headerlink" title="7. 表格元件"></a>7. 表格元件</h1><h2 id="7-1-表格的基础标签：table-tr-td标签"><a href="#7-1-表格的基础标签：table-tr-td标签" class="headerlink" title="7.1 表格的基础标签：table+tr+td标签"></a>7.1 表格的基础标签：table+tr+td标签</h2><p>table属性：border, width, height(宽高一般在CSS中应用)</p><div class="tabs" id="1.7.1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.7.1-1">代码</button></li><li class="tab"><button type="button" data-href="#1.7.1-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.7.1-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;table border=&quot;1&quot;&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;A1&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;A2&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;A3&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;B1&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;B2&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;B3&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.7.1-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/5fv9tHuCjZwNypW.png" alt="A001-1-7-1.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="7-2-表格的标题标签：caption（标题）-th标签（表头）"><a href="#7-2-表格的标题标签：caption（标题）-th标签（表头）" class="headerlink" title="7.2 表格的标题标签：caption（标题）, th标签（表头）"></a>7.2 表格的标题标签：caption（标题）, th标签（表头）</h2><div class="tabs" id="1.7.2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.7.2-1">代码</button></li><li class="tab"><button type="button" data-href="#1.7.2-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.7.2-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;table border=&quot;1&quot;&gt;</span><br><span class="line">    &lt;caption&gt;&lt;b&gt;表格标题&lt;/b&gt;&lt;/caption&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;A1&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;A2&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;A3&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;B1&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;B2&lt;/td&gt;</span><br><span class="line">        &lt;td&gt;B3&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.7.2-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/AzyTi7lYdwMBrIn.png" alt="A001-1-7-2.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="7-3-表格的结构标签：thead-tbody-tfoot标签"><a href="#7-3-表格的结构标签：thead-tbody-tfoot标签" class="headerlink" title="7.3 表格的结构标签：thead, tbody, tfoot标签"></a>7.3 表格的结构标签：thead, tbody, tfoot标签</h2><p>(只是为了规范提高渲染效率，并没有视觉效果)</p><div class="tabs" id="1.7.3"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.7.3-1">代码</button></li><li class="tab"><button type="button" data-href="#1.7.3-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.7.3-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;table border=&quot;1&quot;&gt;</span><br><span class="line">    &lt;caption&gt;&lt;b&gt;表格标题&lt;/b&gt;&lt;/caption&gt;</span><br><span class="line">    &lt;thead&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;A1&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;A2&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;A3&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/thead&gt;</span><br><span class="line">    &lt;tbody&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;B1&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;B2&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;B3&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/tbody&gt;</span><br><span class="line">    &lt;tfoot&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;C1&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;C2&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;C3&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/tfoot&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.7.3-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/XUcmHNqS5fMy4jG.png" alt="A001-1-7-3.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="7-4-表格的合并单元格"><a href="#7-4-表格的合并单元格" class="headerlink" title="7.4 表格的合并单元格"></a>7.4 表格的合并单元格</h2><ol><li>不能跨结构合并单元格</li><li>确定要合并的单元格；</li><li>左上原则删除；</li><li>使用跨行合并rowspan/跨列合并colspan<div class="tabs" id="1.7.4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.7.4-1">代码</button></li><li class="tab"><button type="button" data-href="#1.7.4-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.7.4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;table border=&quot;1&quot;&gt;</span><br><span class="line">    &lt;caption&gt;&lt;b&gt;合并单元格演示(B2-C2/D2-D3)&lt;/b&gt;&lt;/caption&gt;</span><br><span class="line">    &lt;thead&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;A1&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;A2&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;A3&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/thead&gt;</span><br><span class="line">    &lt;tbody&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;B1&lt;/td&gt;</span><br><span class="line">            &lt;td rowspan=&quot;2&quot;&gt;B2&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;B3&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;C1&lt;/td&gt;</span><br><span class="line"></span><br><span class="line">            &lt;td&gt;C3&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;D1&lt;/td&gt;</span><br><span class="line">            &lt;td colspan=&quot;2&quot;&gt;D2&lt;/td&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/tbody&gt;</span><br><span class="line">    &lt;tfoot&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;T1&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;T2&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;T3&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/tfoot&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.7.4-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/6ohIU5ZdQ7VuiLR.png" alt="A001-1-7-4.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li></ol><h1 id="8-表单元件"><a href="#8-表单元件" class="headerlink" title="8. 表单元件"></a>8. 表单元件</h1><p>表单元件将用于：输入、搜索、注册、登录填入等情形</p><h2 id="8-1-input系列标签"><a href="#8-1-input系列标签" class="headerlink" title="8.1 input系列标签"></a>8.1 input系列标签</h2><p> input负责所有输入的部分，根据type属性不同，会有不同类型<br><img src="https://s2.loli.net/2022/12/18/32WKpj4bf1IgqHn.jpg" alt="A001-1-8-1.JPG"></p><h3 id="8-1-1-text类型，文本单行输入，直接显示"><a href="#8-1-1-text类型，文本单行输入，直接显示" class="headerlink" title="8.1.1 text类型，文本单行输入，直接显示"></a>8.1.1 text类型，文本单行输入，直接显示</h3><div class="tabs" id="1.8.1.1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.8.1.1-1">代码</button></li><li class="tab"><button type="button" data-href="#1.8.1.1-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.8.1.1-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请输入账户名：&lt;input type=&quot;text&quot;&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.8.1.1-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/gN15IT8DqVOR2p6.png" alt="A001-1-8-1-1.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="8-1-2-password类型，文本单行输入，不直接显示"><a href="#8-1-2-password类型，文本单行输入，不直接显示" class="headerlink" title="8.1.2 password类型，文本单行输入，不直接显示"></a>8.1.2 password类型，文本单行输入，不直接显示</h3><div class="tabs" id="1.8.1.2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.8.1.2-1">代码</button></li><li class="tab"><button type="button" data-href="#1.8.1.2-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.8.1.2-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请输入密码：&lt;input type=&quot;password&quot;&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.8.1.2-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/5fXITPGNr3dy9Fs.png" alt="A001-1-8-1-2.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="8-1-3-radio类型，单选圆框"><a href="#8-1-3-radio类型，单选圆框" class="headerlink" title="8.1.3 radio类型，单选圆框"></a>8.1.3 radio类型，单选圆框</h3><div class="tabs" id="1.8.1.3"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.8.1.3-1">代码</button></li><li class="tab"><button type="button" data-href="#1.8.1.3-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.8.1.3-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请选择登录方式：&lt;input type=&quot;radio&quot;&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.8.1.3-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/JsLuSMjHB1GyUcd.png" alt="A001-1-8-1-3.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="8-1-4-checkbox类型，多选方框"><a href="#8-1-4-checkbox类型，多选方框" class="headerlink" title="8.1.4 checkbox类型，多选方框"></a>8.1.4 checkbox类型，多选方框</h3><div class="tabs" id="1.8.1.4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.8.1.4-1">代码</button></li><li class="tab"><button type="button" data-href="#1.8.1.4-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.8.1.4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">已阅读免责声明：&lt;input type=&quot;checkbox&quot;&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.8.1.4-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/8wUS52kc7jLvAPX.png" alt="A001-1-8-1-4.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="8-1-5-file类型，文件选择与上传"><a href="#8-1-5-file类型，文件选择与上传" class="headerlink" title="8.1.5 file类型，文件选择与上传"></a>8.1.5 file类型，文件选择与上传</h3><div class="tabs" id="1.8.1.5"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.8.1.5-1">代码</button></li><li class="tab"><button type="button" data-href="#1.8.1.5-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.8.1.5-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请选择文件：&lt;input type=&quot;file&quot;&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.8.1.5-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/NHGiuwhqFERTD2L.png" alt="A001-1-8-1-5.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="8-1-6-submit类型，提交按钮"><a href="#8-1-6-submit类型，提交按钮" class="headerlink" title="8.1.6 submit类型，提交按钮"></a>8.1.6 submit类型，提交按钮</h3><div class="tabs" id="1.8.1.6"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.8.1.6-1">代码</button></li><li class="tab"><button type="button" data-href="#1.8.1.6-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.8.1.6-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请提交文件：&lt;input type=&quot;submit&quot;&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.8.1.6-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/G8aQ6SuPYcqKxlR.png" alt="A001-1-8-1-6.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="8-1-7-reset类型，用于重置"><a href="#8-1-7-reset类型，用于重置" class="headerlink" title="8.1.7 reset类型，用于重置"></a>8.1.7 reset类型，用于重置</h3><div class="tabs" id="1.8.1.7"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.8.1.7-1">代码</button></li><li class="tab"><button type="button" data-href="#1.8.1.7-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.8.1.7-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">点击重置：&lt;input type=&quot;reset&quot;&gt;</span><br></pre></td></tr></table></figure><p>submit和reset类型的使用需要定义预表单form</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.8.1.7-2"><pre><code>效果图：</code></pre><p><img src="https://s2.loli.net/2022/12/18/Vfakrxi5cz3SnmZ.png" alt="A001-1-8-1-7.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="8-1-8-button类型，js结合自定义使用"><a href="#8-1-8-button类型，js结合自定义使用" class="headerlink" title="8.1.8 button类型，js结合自定义使用"></a>8.1.8 button类型，js结合自定义使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;button&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="8-1-9-更多知识点-—-gt"><a href="#8-1-9-更多知识点-—-gt" class="headerlink" title="8.1.9 更多知识点 —&gt;"></a>8.1.9 更多知识点 —&gt;</h3><ol><li><p>text类型：输入框的占位符使用</p><div class="tabs" id="1.8.191"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.8.191-1">代码</button></li><li class="tab"><button type="button" data-href="#1.8.191-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.8.191-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;text&quot; placeholder=&quot;请输入用户名&quot;&gt;</span><br><span class="line">&lt;input type=&quot;password&quot; placeholder=&quot;请输入密码&quot;&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.8.191-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/gTweEvFyIu2XALK.png" alt="A001-1-8-1-9-1.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li><p>radio和checkbox类型：单选功能与默认选中<br>name属性相同则为一组，同组的radio只能选中一个；checked属性默认选中</p><div class="tabs" id="1.8.192"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.8.192-1">代码</button></li><li class="tab"><button type="button" data-href="#1.8.192-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.8.192-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">性别：&lt;input type=&quot;radio&quot; name=&quot;gender&quot; checked&gt;男  &lt;input type=&quot;radio&quot; name=&quot;gender&quot;&gt;女</span><br><span class="line">默认选中：&lt;input type=&quot;checkbox&quot; checked&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.8.192-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/TfbqYGDImjEgiLR.png" alt="A001-1-8-1-9-2.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li><li><p>file类型：上传多个文件<br>file类型中加multiple属性，可以多选文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;file&quot; multiple&gt;</span><br></pre></td></tr></table></figure></li><li><p>submit/reset/button类型：预表单、更换按钮显示<br>使用form标签绑定submit和reset;使用value属性改变按钮显示</p><div class="tabs" id="1.8.194"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.8.194-1">代码</button></li><li class="tab"><button type="button" data-href="#1.8.194-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.8.194-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;&quot;&gt;</span><br><span class="line">    账户名：&lt;input type=&quot;text&quot;&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    密码：  &lt;input type=&quot;password&quot;&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;注册&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;reset&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;button&quot; value=&quot;自定义按钮的显示文本&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.8.194-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/8SlmBOXqvI3inMt.png" alt="A001-1-8-1-9-4.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></li></ol><h2 id="8-2-button按钮标签"><a href="#8-2-button按钮标签" class="headerlink" title="8.2 button按钮标签"></a>8.2 button按钮标签</h2><p>点击的按钮也可以用表单元件中的按钮标签来表达，与input系列标签相似，button系列标签也有一堆类型（type）</p><h3 id="8-2-1-无类型button标签"><a href="#8-2-1-无类型button标签" class="headerlink" title="8.2.1 无类型button标签"></a>8.2.1 无类型button标签</h3><pre><code>    &lt;button&gt;按钮显示文本&lt;/button&gt;</code></pre><h3 id="8-2-2-submit类型button标签"><a href="#8-2-2-submit类型button标签" class="headerlink" title="8.2.2 submit类型button标签"></a>8.2.2 submit类型button标签</h3><pre><code>    &lt;button type=&quot;submit&quot;&gt;提交&lt;/button&gt;</code></pre><h3 id="8-2-3-reset类型button标签"><a href="#8-2-3-reset类型button标签" class="headerlink" title="8.2.3 reset类型button标签"></a>8.2.3 reset类型button标签</h3><pre><code>    &lt;button type=&quot;reset&quot;&gt;重置&lt;/button&gt;</code></pre><h3 id="8-2-4-button类型的button标签"><a href="#8-2-4-button类型的button标签" class="headerlink" title="8.2.4 button类型的button标签"></a>8.2.4 button类型的button标签</h3><pre><code>    &lt;button type=&quot;button&quot;&gt;等待js结合&lt;/button&gt;</code></pre><h2 id="8-3-select下拉菜单标签"><a href="#8-3-select下拉菜单标签" class="headerlink" title="8.3 select下拉菜单标签"></a>8.3 select下拉菜单标签</h2><p>通常用于日期选择、区号选择、地区选择等<br>由select+option标签组成，常见属性为selected</p><div class="tabs" id="1.8.3"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.8.3-1">代码</button></li><li class="tab"><button type="button" data-href="#1.8.3-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.8.3-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;select&gt;</span><br><span class="line">    &lt;option&gt;北京&lt;/option&gt;</span><br><span class="line">    &lt;option&gt;上海&lt;/option&gt;</span><br><span class="line">    &lt;option selected&gt;苏州&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.8.3-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/sIAhXl8F5Z4mj1G.png" alt="A001-1-8-3.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="8-4-textarea文本域标签"><a href="#8-4-textarea文本域标签" class="headerlink" title="8.4 textarea文本域标签"></a>8.4 textarea文本域标签</h2><p>可以输入多行文字的文本框，常见属性cols可见宽度；rows可见行数(以后用CSS调节宽高，并且禁用拖拽大小)</p><div class="tabs" id="1.8.4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.8.4-1">代码</button></li><li class="tab"><button type="button" data-href="#1.8.4-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.8.4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea name=&quot;&quot; id=&quot;&quot; cols=&quot;30&quot; rows=&quot;10&quot;&gt;&lt;/textarea&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.8.4-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/SjB9VzPFtuMys7Y.png" alt="A001-1-8-4.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="8-5-label标签"><a href="#8-5-label标签" class="headerlink" title="8.5 label标签"></a>8.5 label标签</h2><p>用处：选择时点击文字也可以选中单选框（可用两种方法实现）<br>法1：label包裹文本，添加表单标签的id属性，label标签的for属性设置对应id值<br>法2：label包裹文本和表单，把for属性删除</p><div class="tabs" id="1.8.5"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#1.8.5-1">代码</button></li><li class="tab"><button type="button" data-href="#1.8.5-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="1.8.5-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">性别：</span><br><span class="line">&lt;input type=&quot;radio&quot; name=&quot;sex&quot; id=&quot;id-for&quot;&gt; &lt;label for=&quot;id-for&quot;&gt;男&lt;/label&gt;</span><br><span class="line">&lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot;&gt;女&lt;/label&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="1.8.5-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/XQ3hgsoziwGMTOP.png" alt="A001-1-8-5.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="9-语义化标签"><a href="#9-语义化标签" class="headerlink" title="9. 语义化标签"></a>9. 语义化标签</h1><p>没有什么意思，单纯拿来布局的标签</p><h2 id="9-1-无语义布局标签-div-amp-span标签-高频"><a href="#9-1-无语义布局标签-div-amp-span标签-高频" class="headerlink" title="9.1 无语义布局标签-div&amp;span标签(高频)"></a>9.1 无语义布局标签-div&amp;span标签(高频)</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;div一行只显示一个、span一行显示多个&lt;/p&gt;</span><br><span class="line">&lt;div&gt;这个div永远单行显示&lt;/div&gt;</span><br><span class="line">&lt;span&gt;这个span一行可以塞很多个&lt;/span&gt;</span><br></pre></td></tr></table></figure><h2 id="9-2-有语义的布局标签（手机端网页用这个布局标签）"><a href="#9-2-有语义的布局标签（手机端网页用这个布局标签）" class="headerlink" title="9.2 有语义的布局标签（手机端网页用这个布局标签）"></a>9.2 有语义的布局标签（手机端网页用这个布局标签）</h2><p><img src="https://s2.loli.net/2022/12/18/PCTgiymFqNQ38o2.jpg" alt="A001-1-9-2-1.JPG"><br>一些有语义的布局标签<br><img src="https://s2.loli.net/2022/12/18/xrApVjWciLOM1ft.jpg" alt="A001-1-9-2-2.JPG"><br>具体对应显示的布局</p><h1 id="10-字符实体"><a href="#10-字符实体" class="headerlink" title="10. 字符实体"></a>10. 字符实体</h1><ol><li>用来加多个空格</li><li>用来加一些特殊字符<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">比如说这&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;样</span><br></pre></td></tr></table></figure>效果图：<br><img src="https://s2.loli.net/2022/12/18/tU5ZLQAFdxf3rnp.png" alt="A001-1-10-1.png"></li></ol>              </div>            </details><details class="folding-tag" ><summary> HTML5基础案例 </summary>              <div class='content'>              <p>本节介绍了HTML的表格案例与表单案例。</p><h1 id="例1：表格案例"><a href="#例1：表格案例" class="headerlink" title="例1：表格案例"></a>例1：表格案例</h1><div class="tabs" id="2.1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#2.1-1">代码</button></li><li class="tab"><button type="button" data-href="#2.1-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="2.1-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;table border=&quot;1&quot; width=&quot;500&quot; height=&quot;300&quot;&gt;</span><br><span class="line">        &lt;caption&gt;&lt;h3&gt;优秀信息表&lt;/h3&gt;&lt;/caption&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;年级&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;学号&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;班级&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td rowspan=&quot;2&quot;&gt;高三&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;张三&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;110&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;三年二班&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;李四&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;120&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;三年三班&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;评语&lt;/td&gt;</span><br><span class="line">            &lt;td colspan=&quot;3&quot;&gt;优秀&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="2.1-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/Lz4cBJCQgnTof1s.png" alt="A001-2-1.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="例2：表单案例"><a href="#例2：表单案例" class="headerlink" title="例2：表单案例"></a>例2：表单案例</h1><div class="tabs" id="2.2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#2.2-1">代码</button></li><li class="tab"><button type="button" data-href="#2.2-2">效果图</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="2.2-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;XXX婚恋网站&lt;/h1&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line">    &lt;form action=&quot;&quot;&gt;</span><br><span class="line">        昵称：&lt;input type=&quot;text&quot; placeholder=&quot;请输入昵称&quot;&gt;</span><br><span class="line">        &lt;br&gt;&lt;br&gt;</span><br><span class="line">        性别：</span><br><span class="line">        &lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot; checked&gt;男&lt;/label&gt;</span><br><span class="line">        &lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;sex&quot;&gt;女&lt;/label&gt;</span><br><span class="line">        &lt;br&gt;&lt;br&gt;</span><br><span class="line">        所在城市：</span><br><span class="line">        &lt;select&gt;</span><br><span class="line">            &lt;option selected&gt;北京&lt;/option&gt;</span><br><span class="line">            &lt;option&gt;上海&lt;/option&gt;</span><br><span class="line">            &lt;option&gt;广州&lt;/option&gt;</span><br><span class="line">        &lt;/select&gt;</span><br><span class="line">        &lt;br&gt;&lt;br&gt;</span><br><span class="line">        婚姻状况：</span><br><span class="line">        &lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;hyzk&quot; checked&gt;未婚&lt;/label&gt;</span><br><span class="line">        &lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;hyzk&quot;&gt;已婚&lt;/label&gt;</span><br><span class="line">        &lt;label&gt;&lt;input type=&quot;radio&quot; name=&quot;hyzk&quot;&gt;离异&lt;/label&gt;</span><br><span class="line">        &lt;br&gt;&lt;br&gt;</span><br><span class="line">        喜欢的类型：</span><br><span class="line">        &lt;label&gt;&lt;input type=&quot;checkbox&quot; checked&gt;可爱&lt;/label&gt;</span><br><span class="line">        &lt;label&gt;&lt;input type=&quot;checkbox&quot;&gt;傲娇&lt;/label&gt;</span><br><span class="line">        &lt;label&gt;&lt;input type=&quot;checkbox&quot;&gt;高冷&lt;/label&gt;</span><br><span class="line">        &lt;br&gt;&lt;br&gt;</span><br><span class="line">        个人介绍：&lt;br&gt;</span><br><span class="line">        &lt;textarea name=&quot;&quot; id=&quot;&quot; cols=&quot;60&quot; rows=&quot;10&quot;&gt;&lt;/textarea&gt;</span><br><span class="line">        &lt;h3&gt;我承诺&lt;/h3&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;年满18单身&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;严肃态度&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;真诚找寻&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;label&gt;&lt;input type=&quot;checkbox&quot;&gt;我同意所有条款&lt;/label&gt;</span><br><span class="line">        &lt;br&gt;&lt;br&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot; value=&quot;免费注册&quot;&gt;</span><br><span class="line">        &lt;button type=&quot;reset&quot;&gt;点击重置&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="2.2-2"><p>效果图：<br><img src="https://s2.loli.net/2022/12/18/ZRwk1xmOrfBEAhY.png" alt="A001-2-2.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> 前端 </tag>
            
            <tag> VSCode </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo框架下博客的一些指令</title>
      <link href="/2022/11/05/Hexo%E6%A1%86%E6%9E%B6%E7%9A%84%E4%B8%80%E4%BA%9B%E6%8C%87%E4%BB%A4/"/>
      <url>/2022/11/05/Hexo%E6%A1%86%E6%9E%B6%E7%9A%84%E4%B8%80%E4%BA%9B%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A000(Article000) --><div class="note info flat"><p>欢迎来到我的博客! 这里是我的第一篇文章。（其实是一份hexo给的文章模板）<a href="https://hexo.io/docs/">点击这里</a> 以查看更多官方的文档配置信息。 如果有关于hexo相关的问题可以去<a href="https://hexo.io/docs/troubleshooting.html">这个网站</a>找找答案 ，或者可以去<a href="https://github.com/hexojs/hexo/issues">GitHub的issues区</a>主动提问。</p></div><hr><h2 id="1-部署快捷指令"><a href="#1-部署快捷指令" class="headerlink" title="1. 部署快捷指令"></a>1. 部署快捷指令</h2><h3 id="1-1-创建一篇新文章"><a href="#1-1-创建一篇新文章" class="headerlink" title="1.1 创建一篇新文章"></a>1.1 创建一篇新文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="1-2-跑一跑服务器看看"><a href="#1-2-跑一跑服务器看看" class="headerlink" title="1.2 跑一跑服务器看看"></a>1.2 跑一跑服务器看看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>or<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><br>更多信息: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="1-3-生成静态文件"><a href="#1-3-生成静态文件" class="headerlink" title="1.3 生成静态文件"></a>1.3 生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>or<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><br>更多信息: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="1-4-部署到远程站点"><a href="#1-4-部署到远程站点" class="headerlink" title="1.4 部署到远程站点"></a>1.4 部署到远程站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>or<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><br>更多信息: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="1-5-常用指令组合-hexo四连"><a href="#1-5-常用指令组合-hexo四连" class="headerlink" title="1.5 常用指令组合(hexo四连)"></a>1.5 常用指令组合(hexo四连)</h3><p>注意，以下几个指令必须在路径：blog-demo下的终端进行调度。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo cl;hexo s          //本地端口浏览网页</span><br><span class="line">hexo cl;hexo g;hexo d   //推库到GitHub Pages上</span><br></pre></td></tr></table></figure><hr><h2 id="2-外挂标签语法-Tag-Plugins"><a href="#2-外挂标签语法-Tag-Plugins" class="headerlink" title="2. 外挂标签语法 (Tag Plugins)"></a>2. 外挂标签语法 (Tag Plugins)</h2><p>本节内容搬运自作者: Jerry<br>本家連結: <a href="https://butterfly.js.org/posts/2df239ce/#mermaid">https://butterfly.js.org/posts/2df239ce/#mermaid</a></p><h3 id="2-1-居中标签"><a href="#2-1-居中标签" class="headerlink" title="2.1 居中标签"></a>2.1 居中标签</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;center&gt;LaTex菜单&lt;/center&gt; </span><br></pre></td></tr></table></figure><p>使用center标签，可以使该标签居中，常用于图片图名。</p><h3 id="2-2-行中按钮（Inline）"><a href="#2-2-行中按钮（Inline）" class="headerlink" title="2.2 行中按钮（Inline）"></a>2.2 行中按钮（Inline）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is my website, click the button &#123;% btn &#x27;https://butterfly.js.org&#x27;,Butterfly,,outline%&#125;</span><br></pre></td></tr></table></figure><p>效果如下：<br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org"   title="Butterfly"><span>Butterfly</span></a></p><h3 id="2-3-文末按钮（Block）"><a href="#2-3-文末按钮（Block）" class="headerlink" title="2.3 文末按钮（Block）"></a>2.3 文末按钮（Block）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This is my website, click the button  &#123;% btn &#x27;https://butterfly.js.org&#x27;,Butterfly,far fa-hand-point-right,block blue larger %&#125;</span><br><span class="line">This is my website, click the button  &#123;% btn &#x27;https://butterfly.js.org&#x27;,Butterfly,far fa-hand-point-right,block center blue larger %&#125;</span><br><span class="line">This is my website, click the button  &#123;% btn &#x27;https://butterfly.js.org&#x27;,Butterfly,far fa-hand-point-right,block right blue larger %&#125;</span><br></pre></td></tr></table></figure><p>效果如下：<br>This is my website, click the button  <a class="btn-beautify block blue larger" href="https://butterfly.js.org"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button  <a class="btn-beautify block center blue larger" href="https://butterfly.js.org"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button  <a class="btn-beautify block right blue larger" href="https://butterfly.js.org"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p><h3 id="2-4-彩虹选项按钮（Option）"><a href="#2-4-彩虹选项按钮（Option）" class="headerlink" title="2.4 彩虹选项按钮（Option）"></a>2.4 彩虹选项按钮（Option）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;btn-center&quot;&gt;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org&#x27;,Butterfly,far fa-hand-point-right,outline larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org&#x27;,Butterfly,far fa-hand-point-right,outline blue larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org&#x27;,Butterfly,far fa-hand-point-right,outline pink larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org&#x27;,Butterfly,far fa-hand-point-right,outline red larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org&#x27;,Butterfly,far fa-hand-point-right,outline purple larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org&#x27;,Butterfly,far fa-hand-point-right,outline orange larger %&#125;</span><br><span class="line">&#123;% btn &#x27;https://butterfly.js.org&#x27;,Butterfly,far fa-hand-point-right,outline green larger %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>效果如下：</p><div class="btn-center"><a class="btn-beautify outline larger" href="https://butterfly.js.org"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline blue larger" href="https://butterfly.js.org"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline pink larger" href="https://butterfly.js.org"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline red larger" href="https://butterfly.js.org"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline purple larger" href="https://butterfly.js.org"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline orange larger" href="https://butterfly.js.org"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify outline green larger" href="https://butterfly.js.org"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></div><h3 id="2-5-便签贴（Note）"><a href="#2-5-便签贴（Note）" class="headerlink" title="2.5 便签贴（Note）"></a>2.5 便签贴（Note）</h3><div class="tabs" id="simple"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#simple-1">Simple 效果</button></li><li class="tab"><button type="button" data-href="#simple-2">Code</button></li><li class="tab"><button type="button" data-href="#simple-3">Modern 效果</button></li><li class="tab"><button type="button" data-href="#simple-4">Code</button></li><li class="tab"><button type="button" data-href="#simple-5">Flat 效果</button></li><li class="tab"><button type="button" data-href="#simple-6">Code</button></li><li class="tab"><button type="button" data-href="#simple-7">Disabled 效果</button></li><li class="tab"><button type="button" data-href="#simple-8">Code</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="simple-1"><div class="note simple"><p>默認 提示塊標籤</p></div><div class="note default simple"><p>default 提示塊標籤</p></div><div class="note primary simple"><p>primary 提示塊標籤</p></div><div class="note success simple"><p>success 提示塊標籤</p></div><div class="note info simple"><p>info 提示塊標籤</p></div><div class="note warning simple"><p>warning 提示塊標籤</p></div><div class="note danger simple"><p>danger 提示塊標籤</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="simple-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;% note simple %&#125;</span><br><span class="line">默認 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;</span><br><span class="line">default 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;</span><br><span class="line">primary 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;</span><br><span class="line">success 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;</span><br><span class="line">info 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;</span><br><span class="line">warning 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;</span><br><span class="line">danger 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="simple-3"><div class="note modern"><p>默認 提示塊標籤</p></div><div class="note default modern"><p>default 提示塊標籤</p></div><div class="note primary modern"><p>primary 提示塊標籤</p></div><div class="note success modern"><p>success 提示塊標籤</p></div><div class="note info modern"><p>info 提示塊標籤</p></div><div class="note warning modern"><p>warning 提示塊標籤</p></div><div class="note danger modern"><p>danger 提示塊標籤</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="simple-4"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;</span><br><span class="line">默認 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;</span><br><span class="line">default 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;</span><br><span class="line">primary 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;</span><br><span class="line">success 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;</span><br><span class="line">info 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;</span><br><span class="line">warning 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;</span><br><span class="line">danger 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="simple-5"><div class="note flat"><p>默認 提示塊標籤</p></div><div class="note default flat"><p>default 提示塊標籤</p></div><div class="note primary flat"><p>primary 提示塊標籤</p></div><div class="note success flat"><p>success 提示塊標籤</p></div><div class="note info flat"><p>info 提示塊標籤</p></div><div class="note warning flat"><p>warning 提示塊標籤</p></div><div class="note danger flat"><p>danger 提示塊標籤</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="simple-6"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;</span><br><span class="line">默認 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;</span><br><span class="line">default 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;</span><br><span class="line">primary 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;</span><br><span class="line">success 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;</span><br><span class="line">info 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;</span><br><span class="line">warning 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;</span><br><span class="line">danger 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="simple-7"><div class="note disabled"><p>默認 提示塊標籤</p></div><div class="note default disabled"><p>default 提示塊標籤</p></div><div class="note primary disabled"><p>primary 提示塊標籤</p></div><div class="note success disabled"><p>success 提示塊標籤</p></div><div class="note info disabled"><p>info 提示塊標籤</p></div><div class="note warning disabled"><p>warning 提示塊標籤</p></div><div class="note danger disabled"><p>danger 提示塊標籤</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="simple-8"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;</span><br><span class="line">默認 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;</span><br><span class="line">default 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;</span><br><span class="line">primary 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;</span><br><span class="line">success 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;</span><br><span class="line">info 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;</span><br><span class="line">warning 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;</span><br><span class="line">danger 提示塊標籤</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>这下面是一些可以指定图标的写法：</p><div class="tabs" id="特殊图标"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#特殊图标-1">Simple 效果</button></li><li class="tab"><button type="button" data-href="#特殊图标-2">Code</button></li><li class="tab"><button type="button" data-href="#特殊图标-3">Modern 效果</button></li><li class="tab"><button type="button" data-href="#特殊图标-4">Code</button></li><li class="tab"><button type="button" data-href="#特殊图标-5">Flat 效果</button></li><li class="tab"><button type="button" data-href="#特殊图标-6">Code</button></li><li class="tab"><button type="button" data-href="#特殊图标-7">Disabled 效果</button></li><li class="tab"><button type="button" data-href="#特殊图标-8">Code</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="特殊图标-1"><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心開車 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>這是三片呢？還是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="特殊图标-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;</span><br><span class="line">你是刷 Visa 還是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;</span><br><span class="line">小心開車 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;</span><br><span class="line">這是三片呢？還是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;</span><br><span class="line">你是刷 Visa 還是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;</span><br><span class="line">剪刀石頭布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;</span><br><span class="line">前端最討厭的瀏覽器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="特殊图标-3"><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心開車 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>這是三片呢？還是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="特殊图标-4"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;</span><br><span class="line">你是刷 Visa 還是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;</span><br><span class="line">小心開車 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;</span><br><span class="line">這是三片呢？還是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;</span><br><span class="line">你是刷 Visa 還是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;</span><br><span class="line">剪刀石頭布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;</span><br><span class="line">前端最討厭的瀏覽器</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="特殊图标-5"><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心開車 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>這是三片呢？還是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="特殊图标-6"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;</span><br><span class="line">你是刷 Visa 還是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;</span><br><span class="line">小心開車 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;</span><br><span class="line">這是三片呢？還是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;</span><br><span class="line">你是刷 Visa 還是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;</span><br><span class="line">剪刀石頭布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;</span><br><span class="line">前端最討厭的瀏覽器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="特殊图标-7"><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心開車 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>這是三片呢？還是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 還是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石頭布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最討厭的瀏覽器</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="特殊图标-8"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;</span><br><span class="line">你是刷 Visa 還是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;</span><br><span class="line">2021年快到了....</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;</span><br><span class="line">小心開車 安全至上</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;</span><br><span class="line">這是三片呢？還是四片？</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;</span><br><span class="line">你是刷 Visa 還是 UnionPay</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;</span><br><span class="line">剪刀石頭布</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;</span><br><span class="line">前端最討厭的瀏覽器</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="2-6-分栏（Tab）"><a href="#2-6-分栏（Tab）" class="headerlink" title="2.6 分栏（Tab）"></a>2.6 分栏（Tab）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs 分栏名 %&#125;</span><br><span class="line">&lt;!-- tab 栏目一--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab 栏目二--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-7-文本包裹（Toggle）"><a href="#2-7-文本包裹（Toggle）" class="headerlink" title="2.7 文本包裹（Toggle）"></a>2.7 文本包裹（Toggle）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 包裹名称 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><h3 id="2-8-点击显示隐藏内容"><a href="#2-8-点击显示隐藏内容" class="headerlink" title="2.8 点击显示隐藏内容"></a>2.8 点击显示隐藏内容</h3><p>欸嘿</p><hr><h2 id="3-一些基础文本格式（Markdown）"><a href="#3-一些基础文本格式（Markdown）" class="headerlink" title="3. 一些基础文本格式（Markdown）"></a>3. 一些基础文本格式（Markdown）</h2><h3 id="3-1-字体-按键-链接-高亮"><a href="#3-1-字体-按键-链接-高亮" class="headerlink" title="3.1 字体/按键/链接/高亮"></a>3.1 字体/按键/链接/高亮</h3><div class="tabs" id="markdown"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#markdown-1">字体/按键/链接/高亮</button></li><li class="tab"><button type="button" data-href="#markdown-2">Code</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="markdown-1"><p><em>斜体</em><br><strong>粗体</strong><br><del>删除线</del><br><kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>del</kbd><br><a href="https://www.google.com">I’m an inline-style link</a><br><code>高亮</code>用<code>反引号</code></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="markdown-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*斜体*</span><br><span class="line">**粗体**</span><br><span class="line">~~删除线~~</span><br><span class="line">&lt;kbd&gt;ctrl&lt;/kbd&gt;+&lt;kbd&gt;alt&lt;/kbd&gt;+&lt;kbd&gt;del&lt;/kbd&gt;</span><br><span class="line">[I&#x27;m an inline-style link](https://www.google.com)</span><br><span class="line">`高亮`用`反引号`</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="3-2-代码高亮-表格-块-嵌套-视频链接"><a href="#3-2-代码高亮-表格-块-嵌套-视频链接" class="headerlink" title="3.2 代码高亮/表格/块(嵌套)/视频链接"></a>3.2 代码高亮/表格/块(嵌套)/视频链接</h3><div class="tabs" id="markdown2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#markdown2-1">代码高亮/表格/块(嵌套)/视频链接</button></li><li class="tab"><button type="button" data-href="#markdown2-2">Code</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="markdown2-1"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="string">&quot;JavaScript syntax highlighting&quot;</span>;</span><br><span class="line"><span class="title function_">alert</span>(s);</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th></th><th>ASCII</th><th>HTML</th></tr></thead><tbody><tr><td>Single backticks</td><td><code>&#39;Isn&#39;t this fun?&#39;</code></td><td>‘Isn’t this fun?’</td></tr></tbody></table></div><blockquote><p>创建一个块</p><blockquote><p>块的嵌套</p></blockquote></blockquote><hr><p><a href="https://www.bilibili.com/video/BV1Ho4y1K7cV"><img src="https://i0.hdslb.com/bfs/archive/0d8ba5d21377b7d572eacb50472a9fed319cd36d.jpg" alt="是小视频哦"></a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="markdown2-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">|                |ASCII                          |HTML                         |</span><br><span class="line">|----------------|-------------------------------|-----------------------------|</span><br><span class="line">|Single backticks|`&#x27;Isn&#x27;t this fun?&#x27;`            |&#x27;Isn&#x27;t this fun?&#x27;            |</span><br><span class="line"></span><br><span class="line">&gt;创建一个块</span><br><span class="line">&gt;&gt;块的嵌套</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">[![是小视频哦](https://i0.hdslb.com/bfs/archive/0d8ba5d21377b7d572eacb50472a9fed319cd36d.jpg)](https://www.bilibili.com/video/BV1Ho4y1K7cV)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="4-一些命令行常用指令"><a href="#4-一些命令行常用指令" class="headerlink" title="4. 一些命令行常用指令"></a>4. 一些命令行常用指令</h2><p>这里记录一些系统中常用的命令行指令。<br>dir 查询当前目录<br>cls 清除窗口信息<br>cd 打开某个目录<br>node -v 查询Node.js的版本</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模板 </tag>
            
            <tag> Hexo </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何用AE制作简单的音频可视化</title>
      <link href="/2022/05/02/%E5%A6%82%E4%BD%95%E7%94%A8AE%E5%88%B6%E4%BD%9C%E7%AE%80%E5%8D%95%E7%9A%84%E9%9F%B3%E9%A2%91%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
      <url>/2022/05/02/%E5%A6%82%E4%BD%95%E7%94%A8AE%E5%88%B6%E4%BD%9C%E7%AE%80%E5%8D%95%E7%9A%84%E9%9F%B3%E9%A2%91%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：M001(MUG001) --><p>第0步 安装好Adobe Effect 2020</p><p>第1步 新建合成</p><p>(注意合成”持续时间”等属性的设置)</p><p>第2步 将音频文件(＊.mp3)拖入合成栏</p><p>第3步 在合成栏中右键→新建→纯色</p><p>第4步 对纯色图层右键→效果→生成→音频频谱</p><p>第5步 在做侧边栏的效果控件面板中，找到“音频层”属性，下拉选中音乐。</p><p>第6步 用工具栏的椭圆工具(Q)画一个圆路径(按住shift可得正圆)</p><p>第7步 对“内/外部颜色”选择并设置。</p><p>第8步 对纯色图层(合成栏中)的“蒙版”→蒙版下拉选择“无”。</p><p>第9步 对左侧边栏效果控件面板的色相插值拉圈调节(彩色效果)</p><p>第10步 对左侧边栏效果控件面板的“路径”下拉选择蒙版。</p><p>第11步 对“显示选项”下拉可选择多种样式，个人喜欢“模拟谱线”</p><p>第12步 “频段”数值越高，越密集；“最大高度”数值越高，可视化频谱线波动幅度越大。</p><p>第13步 “面选项”，A面朝内，B面朝外，A+B面则有综合效果。这个属性可以复制多个纯色图层来利用，分别选择A，B，A+B并组合搭配。 </p><p>【补充】视频教程可以看这位大佬的演示： <a href="https://www.bilibili.com/video/BV1Qt411x7hi/?vd_source=b83db3c9033d0ccc86ec56f20543265e">Bilibili</a></p>]]></content>
      
      
      <categories>
          
          <category> 视频制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 音频可视化 </tag>
            
            <tag> AE </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机械键盘—键帽材质与形状记录</title>
      <link href="/2022/01/18/%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98-%E9%94%AE%E5%B8%BD%E7%9A%84%E6%9D%90%E8%B4%A8%E4%B8%8E%E5%BD%A2%E7%8A%B6%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/01/18/%E6%9C%BA%E6%A2%B0%E9%94%AE%E7%9B%98-%E9%94%AE%E5%B8%BD%E7%9A%84%E6%9D%90%E8%B4%A8%E4%B8%8E%E5%BD%A2%E7%8A%B6%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A003(Article003) --><h1 id="键帽材质"><a href="#键帽材质" class="headerlink" title="键帽材质"></a>键帽材质</h1><p>ABS(顺滑，长期打油锃亮)</p><p>PBT(耐磨，中高档)</p><p>POM(冰冷光滑，紧致)</p><p>目前PBT键帽在市场上较受欢迎。</p><h1 id="键帽形状"><a href="#键帽形状" class="headerlink" title="键帽形状"></a>键帽形状</h1><p>各型号键帽的形状<br><img src="https://s2.loli.net/2022/12/18/OD987eXoPyBktqU.jpg" alt="A003-1.jpg"><br>由于各大型号对于空格行始终采取了反人体工学的设计，所以采用较倾斜的空格行键帽时，可以适当采用反装键帽的方式来让键帽贴合拇指指型。\<br>下图是一种反装键帽的示范：<br><img src="https://s2.loli.net/2022/12/18/dXvlPV6TLM92NCm.jpg" alt="A003-2.jpg"><br>你看这个普朗克就很识相<br><img src="https://s2.loli.net/2022/12/18/jICBoGurVLQdNnE.jpg" alt="A003-3.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 硬件 </tag>
            
            <tag> 外设 </tag>
            
            <tag> 键盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX与VS Code的组合使用配置</title>
      <link href="/2022/01/16/LaTeX%E4%B8%8EVS%20Code%E7%9A%84%E7%BB%84%E5%90%88%E4%BD%BF%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/01/16/LaTeX%E4%B8%8EVS%20Code%E7%9A%84%E7%BB%84%E5%90%88%E4%BD%BF%E7%94%A8%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A002(Article002) --><h1 id="LaTeX和VSCode简介"><a href="#LaTeX和VSCode简介" class="headerlink" title="LaTeX和VSCode简介"></a>LaTeX和VSCode简介</h1><p>LaTeX是一款优秀的文档准备系统，它将内容与格式分开，使得创作者可以专注于内容本身的创作。基于它可以很容易地生成各类复杂表格和数学公式，得到高质量排版的作品。因此非常适合生成高印刷质量的科技类和数学类文档。LaTeX很容易生成复杂的专业排版元素，且具有强大的可扩展性，是跨平台、免费、开源的。</p><p>而VS Code是一款运行于Mac OS X、Windows和 Linux 之上的，针对于编写现代Web和云应用的跨平台源代码编辑器。该编辑器支持多种语言和文件格式的编写，且具有较高的便捷性与高颜值，是一款强大又好用好看的现代编辑器。</p><p>而将这两者组合使用能带来极为强大的文档创作效果，本专栏将简单介绍相关内容及配置。</p><h1 id="LaTex获取与安装"><a href="#LaTex获取与安装" class="headerlink" title="LaTex获取与安装"></a>LaTex获取与安装</h1><p>关于LaTeX，在这里推选texlive，占用空间较大，但不用后期再补下库。</p><p>Texlive阿里云镜像：<a href="https://mirrors.aliyun.com/CTAN/systems/texlive/Images/">https://mirrors.aliyun.com/CTAN/systems/texlive/Images/</a></p><p>如果不介意在线LaTeX的话，也可以去了解一下overleaf</p><p>一款在线的LaTeX编辑网站：<a href="https://www.overleaf.com/">https://www.overleaf.com/</a> </p><p><img src="https://s2.loli.net/2022/12/18/qKuv4T7CLXjlJaN.webp" alt="A002-1.webp"></p><center> 点击下载那个4.1G的iso文件就是了</center><p>加载iso文件后，打开其中的install-tl-windows.bat批处理文件。在GUI中选择安装路径，并按下左下角的“Advanced”按键-“Customize”，进入高级安装来取消你不需要安装的宏包，还可以选择是否安装 TeXworks 编辑器。</p><p>（取消大部分的小语种语言包可以节省很大的空间）</p><p>然后点击安装，其过程需要一顿午饭到一部电影的时间，请耐心等待。 </p><h1 id="VS-Code获取与安装"><a href="#VS-Code获取与安装" class="headerlink" title="VS Code获取与安装"></a>VS Code获取与安装</h1><p>相信各位做前端和UIS的同志们已经很熟悉这款软件了，VS Code的下载安装相对小白。</p><p>VSCode的官网下载地址：<a href="https://code.visualstudio.com/Download">https://code.visualstudio.com/Download</a></p><p>相关安装过程就略去了，请记住安装路径。</p><h1 id="Sumatra-PDF阅读器的获取与安装"><a href="#Sumatra-PDF阅读器的获取与安装" class="headerlink" title="Sumatra PDF阅读器的获取与安装"></a>Sumatra PDF阅读器的获取与安装</h1><p>在后面编译预览PDF时可能会用上，是一款小型的PDF阅读软件。</p><p>Sumatra的官方网站：<a href="https://www.sumatrapdfreader.org/free-pdf-reader">https://www.sumatrapdfreader.org/free-pdf-reader</a></p><p>相关安装过程就略去了，请记住路径。</p><h1 id="对VS-Code进行LaTeX相关的配置"><a href="#对VS-Code进行LaTeX相关的配置" class="headerlink" title="对VS Code进行LaTeX相关的配置"></a>对VS Code进行LaTeX相关的配置</h1><p>首先要在左边栏的“扩展”里搜索如下图所示的两个包，第一个是中文语言包，第二个就是LaTeX的工作插件包，找到它们并安装，然后重启VS Code更新设置。 </p><p><img src="https://s2.loli.net/2022/12/18/hHDevRgZnFudB6U.webp" alt="A002-2.webp"></p><center>安装这俩包也许就够了</center><p>接着在VS Code界面按下F1，然后输入“setjson”，点击“首选项: 打开设置(JSON)”。 </p><p><img src="https://s2.loli.net/2022/12/18/nxcBKZdGRfUszk5.webp" alt="A002-3.webp"></p><center>注意是第一个！</center><p>可以在打开的文件中看见一个大括号，请把下列配置代码粘贴到大括号的内部，并且不要忘了在原来的条目后面补上一个逗号。 </p><p><img src="https://s2.loli.net/2022/12/18/Ly1bcVDStKmMaEW.webp" alt="A002-4.webp"></p><center>就是在行3的最后补一个逗号，再粘贴上配置代码</center><p>这一大坨配置代码如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line">// ======================== LaTeX 设置 BEGIN  ========================</span><br><span class="line">        // bibtex 格式</span><br><span class="line">        &quot;latex-workshop.bibtex-format.tab&quot;: &quot;tab&quot;,</span><br><span class="line">     </span><br><span class="line">        // 自动编译，全部关闭，当且仅当你认为有需要的时候才会去做编译</span><br><span class="line">        &quot;latex-workshop.latex.autoBuild.run&quot;: &quot;never&quot;,</span><br><span class="line">        &quot;latex-workshop.latex.autoBuild.cleanAndRetry.enabled&quot;: false,</span><br><span class="line">     </span><br><span class="line">        // 设置 latex-workshop 的 PDF　预览程序，external　指的是外部程序</span><br><span class="line">        &quot;latex-workshop.view.pdf.viewer&quot;: &quot;external&quot;,</span><br><span class="line">        &quot;latex-workshop.view.pdf.ref.viewer&quot;: &quot;external&quot;,</span><br><span class="line">        &quot;latex-workshop.view.pdf.external.viewer.command&quot;: &quot;C:/Users/Administrator/AppData/Local/SumatraPDF/SumatraPDF.exe&quot;, // 注意修改路径</span><br><span class="line">        &quot;latex-workshop.view.pdf.external.viewer.args&quot;: [</span><br><span class="line">            &quot;%PDF%&quot;</span><br><span class="line">        ],</span><br><span class="line">     </span><br><span class="line">        // 配置正向、反向搜索：.tex -&gt; .pdf</span><br><span class="line">        &quot;latex-workshop.view.pdf.external.synctex.command&quot;: &quot;C:/Users/Administrator/AppData/Local/SumatraPDF/SumatraPDF.exe&quot;, // 注意修改路径</span><br><span class="line">        &quot;latex-workshop.view.pdf.external.synctex.args&quot;: [</span><br><span class="line">            // 正向搜索</span><br><span class="line">            &quot;-forward-search&quot;,</span><br><span class="line">            &quot;%TEX%&quot;,</span><br><span class="line">            &quot;%LINE%&quot;,</span><br><span class="line">            &quot;-reuse-instance&quot;,</span><br><span class="line">            // 反向搜索</span><br><span class="line">            &quot;-inverse-search&quot;,</span><br><span class="line">            &quot;\&quot;C:/Users/Administrator/AppData/Local/Programs/Microsoft VS Code/Code.exe\&quot; \&quot;C:/Users/Administrator/AppData/Local/Programs/Microsoft VS Code/resources/app/out/cli.js\&quot; -gr %f:%l&quot;,</span><br><span class="line">            &quot;%PDF%&quot;</span><br><span class="line">        ],</span><br><span class="line"> </span><br><span class="line">        // 这是一些独立的编译选项，可以作为工具被编译方案调用</span><br><span class="line">        &quot;latex-workshop.latex.tools&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                // Windows 原生安装 TeX Live 2020 的编译选项</span><br><span class="line">                &quot;name&quot;: &quot;Windows XeLaTeX&quot;,</span><br><span class="line">                &quot;command&quot;: &quot;xelatex&quot;,</span><br><span class="line">                &quot;args&quot;: [</span><br><span class="line">                    &quot;-synctex=1&quot;,</span><br><span class="line">                    &quot;-interaction=nonstopmode&quot;,</span><br><span class="line">                    &quot;-file-line-error&quot;,</span><br><span class="line">                    &quot;-pdf&quot;,</span><br><span class="line">                    &quot;%DOCFILE%&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                // Windows Biber 编译</span><br><span class="line">                &quot;name&quot;: &quot;Windows Biber&quot;,</span><br><span class="line">                &quot;command&quot;: &quot;biber&quot;,</span><br><span class="line">                &quot;args&quot;: [</span><br><span class="line">                    &quot;%DOCFILE%&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                // WSL XeLaTeX 编译一般的含有中文字符的文档</span><br><span class="line">                &quot;name&quot;: &quot;WSL XeLaTeX&quot;,</span><br><span class="line">                &quot;command&quot;: &quot;wsl&quot;,</span><br><span class="line">                &quot;args&quot;: [</span><br><span class="line">                    &quot;/usr/local/texlive/2020/bin/x86_64-linux/xelatex&quot;,</span><br><span class="line">                    &quot;-synctex=1&quot;,</span><br><span class="line">                    &quot;-interaction=nonstopmode&quot;,</span><br><span class="line">                    &quot;-file-line-error&quot;,</span><br><span class="line">                    &quot;-pdf&quot;,</span><br><span class="line">                    //&quot;-output-directory=%OUTDIR%&quot;,</span><br><span class="line">                    //&quot;-aux-directory=%OUTDIR%&quot;,</span><br><span class="line">                    &quot;%DOCFILE%&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                // WSL biber / bibtex 编译带有 citation 标记项目的文档</span><br><span class="line">                &quot;name&quot;: &quot;WSL Biber&quot;,</span><br><span class="line">                &quot;command&quot;: &quot;wsl&quot;,</span><br><span class="line">                &quot;args&quot;: [</span><br><span class="line">                    &quot;/usr/local/texlive/2020/bin/x86_64-linux/biber&quot;,</span><br><span class="line">                    &quot;%DOCFILE%&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                // macOS 或者 Linux 的简单编译</span><br><span class="line">                // 两种操作系统的操作方式相同</span><br><span class="line">                &quot;name&quot;: &quot;macOS / Linux XeLaTeX&quot;,</span><br><span class="line">                &quot;commmand&quot;: &quot;xelatex&quot;,</span><br><span class="line">                &quot;args&quot;: [</span><br><span class="line">                    &quot;-synctex=1&quot;,</span><br><span class="line">                    &quot;-interaction=nonstopmode&quot;,</span><br><span class="line">                    &quot;-file-line-error&quot;,</span><br><span class="line">                    &quot;-pdf&quot;,</span><br><span class="line">                    &quot;%DOCFILE%&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                // macOS 或者 Linux 的索引编译</span><br><span class="line">                // 两种操作系统的操作方式相同</span><br><span class="line">                &quot;name&quot;: &quot;macOS / Linux Biber&quot;,</span><br><span class="line">                &quot;command&quot;: &quot;biber&quot;,</span><br><span class="line">                &quot;args&quot;: [</span><br><span class="line">                    &quot;%DOCFILE%&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">     </span><br><span class="line">        // 这是一些编译方案，会出现在 GUI 菜单里</span><br><span class="line">        &quot;latex-workshop.latex.recipes&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                // 1.1 Windows 编译简单的小文档，这个选项不太常用，因为绝大多数文章都需要有参考文献索引</span><br><span class="line">                &quot;name&quot;: &quot;Windows XeLaTeX 简单编译&quot;,</span><br><span class="line">                &quot;tools&quot;: [</span><br><span class="line">                    &quot;Windows XeLaTeX&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                // 1.2 Windows 编译带有索引的论文，需要进行四次编译；-&gt; 符号只是一种标记而已，没有程序上的意义</span><br><span class="line">                &quot;name&quot;: &quot;Windows xe-&gt;bib-&gt;xe-&gt;xe 复杂编译&quot;,</span><br><span class="line">                &quot;tools&quot;: [</span><br><span class="line">                    &quot;Windows XeLaTeX&quot;,</span><br><span class="line">                    &quot;Windows Biber&quot;,</span><br><span class="line">                    &quot;Windows XeLaTeX&quot;,</span><br><span class="line">                    &quot;Windows XeLaTeX&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                // 2.1  WSL 编译简单的小文档，这个选项不太常用，因为我绝大多数文章都需要有引用。</span><br><span class="line">                &quot;name&quot;: &quot;XeLaTeX 简单编译&quot;,</span><br><span class="line">                &quot;tools&quot;: [</span><br><span class="line">                    &quot;WSL XeLaTeX&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                // 2.2 带有 citation 索引的文档，需要进行四次编译；-&gt; 符号只是一种标记而已，没有程序上的意义</span><br><span class="line">                &quot;name&quot;: &quot;xe-&gt;bib-&gt;xe-&gt;xe 复杂编译&quot;,</span><br><span class="line">                &quot;tools&quot;: [</span><br><span class="line">                    &quot;WSL XeLaTeX&quot;,</span><br><span class="line">                    &quot;WSL Biber&quot;,</span><br><span class="line">                    &quot;WSL XeLaTeX&quot;,</span><br><span class="line">                    &quot;WSL XeLaTeX&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                // 3.1 macOS 简单 小文档</span><br><span class="line">                &quot;name&quot;: &quot;macOS XeLaTeX 简单编译&quot;,</span><br><span class="line">                &quot;tools&quot;: [</span><br><span class="line">                    &quot;macOS XeLaTeX&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                // 3.2 macOS 四次编译</span><br><span class="line">                &quot;name&quot;: &quot;macOS xe-&gt;bib-&gt;xe-&gt;xe 复杂编译&quot;,</span><br><span class="line">                &quot;tools&quot;: [</span><br><span class="line">                    &quot;macOS / Linux XeLaTeX&quot;,</span><br><span class="line">                    &quot;macOS / Linux Biber&quot;,</span><br><span class="line">                    &quot;macOS / Linux XeLaTeX&quot;,</span><br><span class="line">                    &quot;macOS / Linux XeLaTeX&quot;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">     </span><br><span class="line">        // 清空中间文件</span><br><span class="line">        &quot;latex-workshop.latex.clean.fileTypes&quot;: [</span><br><span class="line">            &quot;*.aux&quot;,</span><br><span class="line">            &quot;*.bbl&quot;,</span><br><span class="line">            &quot;*.blg&quot;,</span><br><span class="line">            &quot;*.idx&quot;,</span><br><span class="line">            &quot;*.ind&quot;,</span><br><span class="line">            &quot;*.lof&quot;,</span><br><span class="line">            &quot;*.lot&quot;,</span><br><span class="line">            &quot;*.out&quot;,</span><br><span class="line">            &quot;*.toc&quot;,</span><br><span class="line">            &quot;*.acn&quot;,</span><br><span class="line">            &quot;*.acr&quot;,</span><br><span class="line">            &quot;*.alg&quot;,</span><br><span class="line">            &quot;*.glg&quot;,</span><br><span class="line">            &quot;*.glo&quot;,</span><br><span class="line">            &quot;*.gls&quot;,</span><br><span class="line">            &quot;*.ist&quot;,</span><br><span class="line">            &quot;*.fls&quot;,</span><br><span class="line">            &quot;*.log&quot;,</span><br><span class="line">            &quot;*.fdb_latexmk&quot;,</span><br><span class="line">            &quot;*.bcf&quot;,</span><br><span class="line">            &quot;*.run.xml&quot;,</span><br><span class="line">            &quot;*.synctex.gz&quot;</span><br><span class="line">        ]</span><br><span class="line">    // ======================== LaTeX 设置 END ========================</span><br></pre></td></tr></table></figure><br>随手贴一个云链备用<br>链接：<a href="https://pan.baidu.com/s/1ndD3f2T1xYuz4SHffmRd9w">https://pan.baidu.com/s/1ndD3f2T1xYuz4SHffmRd9w</a><br>提取码：f2kj</p><p>然后对行12的”latex-workshop.view.pdf.external.viewer.command”以及行18的”latex-workshop.view.pdf.external.synctex.command”后面的外置PDF阅读器路径设置为Sumatra的路径。（行数仅供参考）</p><p>再把反向搜索”-inverse-search”下的路径更改为你自己VSCode的相关路径（行27一行有两个哦）</p><p>如果不会的话可以结合这个视频来修改：<a href="https://www.bilibili.com/video/BV1AK4y1p77G/">https://www.bilibili.com/video/BV1AK4y1p77G/</a></p><p>最后再保存并重启VSCode以更新配置，这样就完成对VSCode的LeTeX配置了。</p><h1 id="使用VSCode进行LaTeX编译"><a href="#使用VSCode进行LaTeX编译" class="headerlink" title="使用VSCode进行LaTeX编译"></a>使用VSCode进行LaTeX编译</h1><p>打开你自己的tex文件，在左边栏会出现一个“Tex”字样的按键，点击进入LaTeX菜单。</p><p><img src="https://s2.loli.net/2022/12/18/WSn9hN1K2b83Hjr.webp" alt="A002-5.webp"></p><center>LaTex菜单</center> <p>其中“Build LaTeX project”就是编译按钮，按下等编译完毕后，再点击“View LaTeX PDF”，会有好几种PDF的查看方式，请自行选择。 </p><p><img src="https://s2.loli.net/2022/12/18/YRzCVXimqQuh4lN.webp" alt="A002-6.webp"></p><center>一般用这三种</center><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>到这里关于使用VSCode进行LaTeX编译的部分就结束了，关于LaTeX的书写使用规则可以参考《一份不太简短的LaTeX介绍》：<a href="https://github.com/CTeX-org/lshort-zh-cn">https://github.com/CTeX-org/lshort-zh-cn</a></p><p>最后附上一个还不错的LaTeX公式在线编辑网站：<a href="https://latex.codecogs.com/eqneditor/editor.php">https://latex.codecogs.com/eqneditor/editor.php</a></p><p>具体的编写规则一开始上手会非常烦，但一旦上手以后，效率会非常高。</p>]]></content>
      
      
      <categories>
          
          <category> 配置笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> LaTex </tag>
            
            <tag> VS Code </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>分类页</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>/* 一图流 *//* 页脚与头图透明 */  #footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }/* 翻页按钮居中 */#pagination {  width: 100%;  margin: auto;}/* 页面样式调节开始 *//* --trans-light：白天模式带透明度的背景色--trans-dark： 夜间模式带透明度的背景色--border-style： 边框样式，1px solid rgb(169, 169, 169)指宽度为1px的灰色实体边框--backdrop-filter: 背景过滤器，如blur(5px) saturate(150%)表示饱和度为150%的、高斯模糊半径为5px的过滤器，这是亚克力效果的一种实现方法; */:root {  --trans-light: rgba(255, 255, 255, 0.88);  --trans-dark: rgba(25, 25, 25, 0.88);  --border-style: 1px solid rgb(169, 169, 169);  --backdrop-filter: blur(5px) saturate(150%);}/* 首页文章卡片 */#recent-posts > .recent-post-item {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 25px;  border: var(--border-style);}/* 首页侧栏卡片 */#aside-content .card-widget {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 18px;  border: var(--border-style);}/* 文章页、归档页、普通页面 */div#post,div#page,div#archive {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border: var(--border-style);  border-radius: 20px;}/* 导航栏 */#page-header.nav-fixed #nav {  background: rgba(255, 255, 255, 0.75);  backdrop-filter: var(--backdrop-filter);}[data-theme="dark"] #page-header.nav-fixed #nav {  background: rgba(0, 0, 0, 0.7) !important;}/* 夜间模式遮罩 */[data-theme="dark"] #recent-posts > .recent-post-item,[data-theme="dark"] #aside-content .card-widget,[data-theme="dark"] div#post,[data-theme="dark"] div#archive,[data-theme="dark"] div#page {  background: var(--trans-dark);}/* 夜间模式页脚页头遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}/* 阅读模式 */.read-mode #aside-content .card-widget {  background: rgba(158, 204, 171, 0.5) !important;}.read-mode div#post {  background: rgba(158, 204, 171, 0.5) !important;}/* 夜间模式下的阅读模式 */[data-theme="dark"] .read-mode #aside-content .card-widget {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}[data-theme="dark"] .read-mode div#post {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="关于此站"><a href="#关于此站" class="headerlink" title="关于此站"></a>关于此站</h2><p>是Niord的私人博客。其中评论系统需要爬高高，加载图像略慢是因为博主没有国内域名+GitHub薛定谔ping通+使用了免费图床的问题，博主没钱去购置域名绑定(擦泪)，所以主打一个能用就行（嘘，不许说出去哦）</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/runtime.css"/>
      <url>/css/runtime.css</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>#workboard{font-size:13px;font-weight:700}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>/* 背景宇宙星光  */#universe{    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>网页版小游戏集合</title>
      <link href="/game/index.html"/>
      <url>/game/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="site-card-group"><a class="site-card" href="http://osugame.online/index.html"><div class="img"><img src="https://s2.loli.net/2022/12/18/SmZVcX2xCr1l64q.jpg"/></div><div class="info"><img src="https://s2.loli.net/2022/12/18/RxsamuCHv8MT4IQ.png"/><span class="title">osu!std (web)</span><span class="desc">osu!经典模式 - 在线网页版</span></div></a><a class="site-card" href="https://www.beatstage.com/"><div class="img"><img src="https://s2.loli.net/2022/12/18/DEfbMzQjsqx5yRN.jpg"/></div><div class="info"><img src="https://s2.loli.net/2022/12/18/wu9t6dnbUJl28H7.png"/><span class="title">beatstage (web)</span><span class="desc">经典下落式5K传统音游 - 在线网页版</span></div></a><a class="site-card" href="https://rodrig0v.github.io/webmania/#/"><div class="img"><img src="https://s2.loli.net/2022/12/18/zqFxMRovpuEeitG.jpg"/></div><div class="info"><img src="https://s2.loli.net/2022/12/18/HEnu2AiFUjvJQI7.png"/><span class="title">Web!Mania (web)</span><span class="desc">一个略简陋的Mania - 在线网页版</span></div></a><a class="site-card" href="https://taiko.bui.pm/"><div class="img"><img src="https://s2.loli.net/2022/12/18/BmotwOLTNkCc4Ay.jpg"/></div><div class="info"><img src="https://s2.loli.net/2022/12/18/8wgpV3lQr9517ic.png"/><span class="title">Taiko (web)【已被禁】</span><span class="desc">太鼓达人 - 在线网页版</span></div></a><a class="site-card" href="https://bemuse.ninja/"><div class="img"><img src="https://s2.loli.net/2022/12/18/lBrybWjE1px7VP3.jpg"/></div><div class="info"><img src="https://s2.loli.net/2022/12/18/ZvhRcAzaU4gmKkN.png"/><span class="title">Bemuse (web)</span><span class="desc">一款优秀的BMS模拟器 - 在线网页版</span></div></a><a class="site-card" href="https://beta.sparebeat.com/"><div class="img"><img src="https://s2.loli.net/2023/05/15/bQ8TAqUkYemOGLp.jpg"/></div><div class="info"><img src="https://s2.loli.net/2023/05/15/X8VOHMCWkRNEAwP.png"/><span class="title">Sparebeat (web)</span><span class="desc">一款斜轨下落4K模拟器 - 在线网页版</span></div></a><a class="site-card" href="https://phicommunity.com.cn"><div class="img"><img src="https://s2.loli.net/2022/12/18/y5jzsNZ4exOFEhU.jpg"/></div><div class="info"><img src="https://s2.loli.net/2022/12/18/3QyM2B5xhAqCdOE.png"/><span class="title">PhiCommunity (web)</span><span class="desc">网页Phigros - 在线网页版</span></div></a></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>动漫页</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="site-card-group"><a class="site-card" href="https://docs.qq.com/sheet/DV1RJYVZVRUtmWnJp?tab=BB08J2"><div class="img"><img src="https://s2.loli.net/2023/04/20/mXHuZh9VLgqotJx.png"/></div><div class="info"><img src="https://s2.loli.net/2023/04/21/nDhw1Ui7mrxWMzV.png"/><span class="title">我的阅番整理</span><span class="desc"> 基于在线文档做的个人已阅番剧整理</span></div></a><a class="site-card" href="https://m.happymh.com/latest"><div class="img"><img src="https://s2.loli.net/2023/07/03/ZrgLVEu4dsB6iGp.png"/></div><div class="info"><img src="https://s2.loli.net/2023/04/21/nDhw1Ui7mrxWMzV.png"/><span class="title">漫画大全网站</span><span class="desc"> 一个私密的漫画大全网站（需要节点）</span></div></a></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>绘画页</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://s2.loli.net/2023/07/03/4OpFjW6Nliu2m7z.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">AI绘画</div>  <p>Niord基于Stable Diffusion WebUI绘制的一些作品和尝试</p>  <a href='/gallery/AIsd'></a>  </figcaption>  </figure>  </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐页</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="site-card-group"><a class="site-card" href="https://music.163.com/radio/?id=987252984&userid=109815583"><div class="img"><img src="https://s2.loli.net/2023/04/20/K6XElkTrBbxC4Ih.png"/></div><div class="info"><img src="https://s2.loli.net/2023/04/20/jSvg53mopXdBCHe.png"/><span class="title">我的AI歌姬</span><span class="desc"> 基于vits制作的AI歌姬【我自己的声音】</span></div></a><a class="site-card" href="https://music.163.com/playlist?id=134336917&userid=109815583"><div class="img"><img src="https://s2.loli.net/2023/04/20/o7ZS5Lr3WA1FPY8.png"/></div><div class="info"><img src="https://s2.loli.net/2023/04/20/jSvg53mopXdBCHe.png"/><span class="title">我的红心歌单</span><span class="desc"> 网易云-我的红心歌单【可能有点杂】</span></div></a></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById("universe"),o=!0,a="180,184,240",r="226,225,142",d="226,225,224",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute("width",n),s.setAttribute("height",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle="rgba("+a+","+this.opacity+")",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle="rgba("+d+","+this.opacity+")",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle="rgba("+d+","+(this.opacity-this.opacity/20*t)+")",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle="rgba("+r+","+this.opacity+")",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener("resize",f,!1),function(){h=s.getContext("2d");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};dark()]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链中心</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>var now=new Date;function createtime(){now.setTime(now.getTime()+1e3);var e=new Date("11/07/2022 00:00:00"),t=Math.trunc(234e8+(now-e)/1e3*17),a=(t/1496e5).toFixed(6),r=new Date("11/07/2022 00:00:00"),n=(now-r)/1e3/60/60/24,o=Math.floor(n),i=(now-r)/1e3/60/60-24*o,s=Math.floor(i);1==String(s).length&&(s="0"+s);var c=(now-r)/1e3/60-1440*o-60*s,l=Math.floor(c);1==String(l).length&&(l="0"+l);var g=(now-r)/1e3-86400*o-3600*s-60*l,b=Math.round(g);1==String(b).length&&(b="0"+b);let d="";d=s<18&&s>=9?`<br> 本站居然运行了 ${o} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀`:` 一朵花坠落的速度 , 连时间都放慢了脚步。 <br> 本站居然已经运行了 ${o} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀`,document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=d)}setInterval((()=>{createtime()}),1e3);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签页</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>硬件知识复习笔记2</title>
      <link href="/%E9%9A%90%E8%97%8F%E6%96%87%E6%9C%AC/2023-08-16-%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B02.html"/>
      <url>/%E9%9A%90%E8%97%8F%E6%96%87%E6%9C%AC/2023-08-16-%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B02.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A023(Article023) --><h1 id="已停止更新"><a href="#已停止更新" class="headerlink" title="已停止更新"></a>已停止更新</h1><h1 id="01-基础知识"><a href="#01-基础知识" class="headerlink" title="01.基础知识"></a>01.基础知识</h1><p>一台计算机的实现，需要经过以下七大步骤：<br>A. 数字电路：设计并实现数字电路（0-1）数字电路+模拟电路         —-【找砖】<br>B. 计算机组成原理：存储、运算、输入输出（冯诺依曼体系结构）     —-【设计规范】<br>C. 计算机结构：CPU、总线、输入输出                            —-【设计图纸】<br>D. 逻辑电路：电路集成                                        —-【开始施工】<br>E. 设计指令集：机器语言控制计算机                             —-【开始功能区划分】<br>F. 汇编语言：汇编器产生机器指令                               —-【装上电闸】<br>G. 集成测试：硬件-软件的测试                                  —-【通电测试】</p><p>【计算机发展】<br>1946-2-14 第一台计算机 ENIAC 真空管<br>1947 晶体管（固态半导体）</p><p>【进制】<br>位值计数法：362（十进制）=2<em>10^0+6</em>10^1+3<em>10^2<br>二进制：起源于高低电压，且对电信号抗干扰。<br>8421码：1011（二进制）=1</em>8+0<em>4+1</em>2+1*1（十进制）</p><p>【单位】<br>bit(位/比特)：一个0或1的二进制数字<br>byte(B,字节)：1byte = 8bit<br>1KB=1024bytes<br>1MB=1024KB<br>1GB=1024MB<br>1TB=1024GB<br>1PB=1024TB<br>1EB=1024PB</p><p>P.S.常见下载10M/s,实则10Mbit/s=1.25Mbyte/s=1.25MB/s</p><p>【码表】<br>码表是将二进制转换成字符的表格。<br>最基础的有ACSII码表。<br>早期大陆采用GB码表，台湾采用了BIG5码表，后综合中日韩汉字提出了GBK码表。<br>现在全球统一码表Unicode，包含了人类几乎所有的语言字符。</p><p>【图片】<br>黑白图：仅用0和1，0黑1白，一个像素点只用1bit<br>灰度图：采用0~255来表达黑到白，因此每一个像素点需要1字节的信息量<br>彩色图：RGB编码，一个像素需要3个0~255来表达，需要3字节的信息量<br>一个像素3个字节，也就是24bit，因此无损彩图存储（bmp）也叫“24位位图”。</p><p>【声音】<br>量化：连续模拟信号—&gt;离散数字信号<br>采样：每隔一段时间对振幅记录，采样率越高间隔越小。</p><p>【数电】<br>逻辑门电路，这部分参见硬件知识复习笔记。<br>Digital 数字电路仿真软件<br>Circuit JS1 模拟电路仿真软件</p><p>【立创EDA】<br>Shift+F 搜索元件<br>Space 旋转元器件<br>先画原理图，更新到PCB图<br>布线从VCC开始，不布直角，只走钝角，隐藏GND相关。<br>布线时按Tab可以查看线粗，电源总线需要适当加粗。<br>先走近线，再走远线。<br>正反面铺铜。</p><p>【ALU】<br>ALU，算术逻辑单元，CPU最重要的部分之一，负责基本运算功能。</p><h1 id="02-硬件开发流程"><a href="#02-硬件开发流程" class="headerlink" title="02. 硬件开发流程"></a>02. 硬件开发流程</h1>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>随记本</title>
      <link href="/%E9%9A%90%E8%97%8F%E6%96%87%E6%9C%AC/2024-01-04-%E9%9A%8F%E8%AE%B0%E6%9C%AC.html"/>
      <url>/%E9%9A%90%E8%97%8F%E6%96%87%E6%9C%AC/2024-01-04-%E9%9A%8F%E8%AE%B0%E6%9C%AC.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A026(Article026) --><!-- 用完即清 -->]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Vue面试题</title>
      <link href="/%E9%9A%90%E8%97%8F%E6%96%87%E6%9C%AC/2023-09-03-vue%E9%9D%A2%E8%AF%95%E9%A2%98.html"/>
      <url>/%E9%9A%90%E8%97%8F%E6%96%87%E6%9C%AC/2023-09-03-vue%E9%9D%A2%E8%AF%95%E9%A2%98.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><!-- 图床个人编号规则：A024(Article024) --><h1 id="Vue面试题"><a href="#Vue面试题" class="headerlink" title="Vue面试题"></a>Vue面试题</h1><p>概念：是干什么的<br>应用：用在哪里的<br>实现：源码是什么<br>（BV1YM411w7Zc）</p><h1 id="问题01-谈谈你对Vue的理解"><a href="#问题01-谈谈你对Vue的理解" class="headerlink" title="问题01. 谈谈你对Vue的理解"></a>问题01. 谈谈你对Vue的理解</h1><blockquote><p>Vue是一套用于构建用户界面的<code>渐进式框架</code>, Vue的核心库只关注<code>视图层</code>，有以下几种特点：</p><ul><li>vue是一种<code>声明式框架</code>。</li><li>vue借鉴了<code>MVVM模式</code>。</li><li>vue采用了<code>虚拟DOM</code>。</li><li>vue采用了<code>组件化</code>。</li></ul></blockquote><h2 id="1-1-声明式框架VS命令式框架"><a href="#1-1-声明式框架VS命令式框架" class="headerlink" title="1.1 声明式框架VS命令式框架"></a>1.1 声明式框架VS命令式框架</h2><ul><li>早在JQ的时代编写的代码都是命令式的，命令式框架重要特点就是关注过程。</li><li>声明式框架更加关注结果。命令式的代码封装到了 Vuejs 中，过程靠 vuejs 来实现，简单方便。</li></ul><h2 id="1-2-MVVM模式是什么？"><a href="#1-2-MVVM模式是什么？" class="headerlink" title="1.2 MVVM模式是什么？"></a>1.2 MVVM模式是什么？</h2><p>MVVM是为了<code>分层管理、划分职责</code>诞生的<code>数据绑定模式</code>。</p><ul><li>MVC模式：Backbone+underscore+jquery (需要大量的控制器)</li><li>MVVM模式：<code>简化了控制器，使用ViewModel链接视图和数据</code>，双向数据绑定。</li></ul><h2 id="1-3-虚拟DOM是什么？"><a href="#1-3-虚拟DOM是什么？" class="headerlink" title="1.3 虚拟DOM是什么？"></a>1.3 虚拟DOM是什么？</h2><div id="id001"></div><h3 id="1-3-1-虚拟DOM的定义"><a href="#1-3-1-虚拟DOM的定义" class="headerlink" title="1.3.1 虚拟DOM的定义"></a>1.3.1 虚拟DOM的定义</h3><p><code>虚拟DOM</code>（也称VDOM）是用来描述真实DOM的一个js对象。通过在内存中维护一份虚拟的DOM树，以减少对实际DOM的频繁操作，从而提高页面渲染的性能和响应速度。</p><h3 id="1-3-2-虚拟DOM的工作原理"><a href="#1-3-2-虚拟DOM的工作原理" class="headerlink" title="1.3.2 虚拟DOM的工作原理"></a>1.3.2 虚拟DOM的工作原理</h3><ol><li>当页面加载/数据发生变化时，框架会创建一个<code>虚拟DOM树</code>，这个树结构与实际的DOM元素一一对应。</li><li>当数据发生变化时，不会直接操作实际的DOM。而是通过比较新旧状态，并计算出状态的差异（即<code>差异补丁</code>）</li><li>将<code>差异补丁</code>应用到虚拟DOM树上，以更新内存中虚拟DOM的状态。</li><li>通过<code>对比算法</code>高效地<code>比较虚拟DOM的差异</code>，以确定需要进行哪些实际DOM操作。</li><li>确定了需要更新的实际DOM操作，会对这些操作进行一次性处理,<code>减少实际DOM操作的开销</code>。</li></ol><h3 id="1-3-3-虚拟DOM的优点"><a href="#1-3-3-虚拟DOM的优点" class="headerlink" title="1.3.3 虚拟DOM的优点"></a>1.3.3 虚拟DOM的优点</h3><ul><li>减少对实际DOM的操作，提高渲染性能；</li><li>支持跨平台，方便测试。</li></ul><h3 id="1-3-4-虚拟DOM的生成过程"><a href="#1-3-4-虚拟DOM的生成过程" class="headerlink" title="1.3.4 虚拟DOM的生成过程"></a>1.3.4 虚拟DOM的生成过程</h3><p>在vue中，对于<code>组件</code>，会采用<code>模板(template)</code>；<br>在<code>打包</code>时，模板会被编译为<code>渲染函数(render)</code>；<br>在<code>挂载过程/运行</code>时，会调用render函数并执行，生成对象—&gt;虚拟DOM。</p><h3 id="1-3-5-虚拟DOM的对比过程"><a href="#1-3-5-虚拟DOM的对比过程" class="headerlink" title="1.3.5 虚拟DOM的对比过程"></a>1.3.5 虚拟DOM的对比过程</h3><p>初次挂载后，记录第一次生成的VDOM为<code>oldVnode</code><br>数据变化后，组件重新渲染，生成VDOM为<code>newVnode</code><br>对<code>oldVnode</code>和<code>newVnode</code>做对比(diff)算法，把差异应用到真实DOM上，更新视图。</p><h2 id="1-4-vue的组件化"><a href="#1-4-vue的组件化" class="headerlink" title="1.4 vue的组件化"></a>1.4 vue的组件化</h2><p>特点：高内聚、低耦合、单向数据流</p><h1 id="问题02-谈谈你对SPA的理解？"><a href="#问题02-谈谈你对SPA的理解？" class="headerlink" title="问题02. 谈谈你对SPA的理解？"></a>问题02. 谈谈你对SPA的理解？</h1><blockquote><p>SPA是单页应用，一种客户端渲染。内容变更不会重加载整个页面，服务器压力小，但是不利于搜索引擎抓取（SEO优化），首次渲染慢（白屏时间长）。</p></blockquote><h2 id="1-1-SPA和MPA的概念"><a href="#1-1-SPA和MPA的概念" class="headerlink" title="1.1 SPA和MPA的概念"></a>1.1 SPA和MPA的概念</h2><p><code>SPA</code>(Single-page application)单页应用。默认情况下编写Vue、React时都只有一个html页面，通过一个挂载点(比如div)，打包后会在此页面中引入对应的资源。(页面渲染全都是由JS动态渲染的)。切换页面时，通过监听路由变化来渲染对应的页面。这种渲染方式叫<code>客户端渲染CSR</code>。</p><p><code>MPA</code>(Multi-page application)多页应用程序。每个页面必须重复加载js、css等相关资源。(服务端返回完整的html,同时数据也可以再后端进行获取一并返回“模板引擎”)。多页应用跳转需要整页资源刷新。这种渲染方式叫<code>服务器端渲染SSR</code>。</p><h2 id="1-2-SPA和MPA的优缺点？"><a href="#1-2-SPA和MPA的优缺点？" class="headerlink" title="1.2 SPA和MPA的优缺点？"></a>1.2 SPA和MPA的优缺点？</h2><div class="table-container"><table><thead><tr><th></th><th>单页面应用SPA</th><th>多页面应用MPA</th></tr></thead><tbody><tr><td>组成</td><td>一个主页面+页面组件</td><td>多个完整的页面</td></tr><tr><td>刷新方式</td><td>局部刷新</td><td>整页刷新</td></tr><tr><td>SEO搜索引擎优化</td><td>单div全靠js渲染，无法实现</td><td>都是完整的html,容易实现</td></tr><tr><td>页面切换</td><td>速度超快</td><td>切换需要加载资源</td></tr><tr><td>维护成本</td><td>相对容易</td><td>每个页面调用了不同组件，难维护</td></tr></tbody></table></div><p>单看SPA的话，内容变更不会重加载整个页面，服务器压力小，但是不利于搜索引擎抓取，首次渲染慢（白屏时间长）。</p><h2 id="1-3-怎么解决SPA的缺点？"><a href="#1-3-怎么解决SPA的缺点？" class="headerlink" title="1.3 怎么解决SPA的缺点？"></a>1.3 怎么解决SPA的缺点？</h2><p>方案1：<code>SSG，静态页面预渲染</code>：在打包时，就跑一份完整的html并保存起来，渲染时先用这个。适用于静态网页，可以有效应对SEO优化和白屏问题。<br>方案2：<code>SSR+CSR</code>：首屏用服务器渲染，后续交互用客户端渲染。在vue中，<code>NuxtJS</code>就提供了这个方案的支持。</p><h1 id="问题03-vue为什么需要虚拟DOM？"><a href="#问题03-vue为什么需要虚拟DOM？" class="headerlink" title="问题03. vue为什么需要虚拟DOM？"></a>问题03. vue为什么需要虚拟DOM？</h1><blockquote><p>使用VDOM可以减少对实际DOM的操作，提高渲染性能；<br>而且VDOM支持跨平台，方便测试。</p></blockquote><p>点击<a href ="#id001"> 虚拟DOM</a> 可以查看虚拟DOM的定义、工作原理、优点、生成过程、对比过程。</p><h1 id="问题04-谈谈对vue组件化的理解？"><a href="#问题04-谈谈对vue组件化的理解？" class="headerlink" title="问题04. 谈谈对vue组件化的理解？"></a>问题04. 谈谈对vue组件化的理解？</h1><blockquote><p>vue的组件化与WebComponent有些类似，核心组成有：模板、属性、事件、插槽、生命周期等。负责对UI进行封装。组件化可以提高开发效率，测试性，复用性，减少更新范围，方便维护。</p></blockquote><h2 id="1-1-组件化与模块化的区别？"><a href="#1-1-组件化与模块化的区别？" class="headerlink" title="1.1 组件化与模块化的区别？"></a>1.1 组件化与模块化的区别？</h2><p>组件化：对UI进行封装<br>模块化：对业务逻辑进行封装</p><h2 id="1-2-WebComponent是什么？"><a href="#1-2-WebComponent是什么？" class="headerlink" title="1.2 WebComponent是什么？"></a>1.2 WebComponent是什么？</h2><p>WebComponent是很早之前浏览器就原生支持的组件化功能。<br>WebComponent组件化的核心组成有：</p><ul><li>模板：每个组件都有指定模板</li><li>属性：负责数据和描述</li><li>事件：负责组件的功能触发</li><li>插槽：传递html片段</li><li>生命周期：增加额外功能<br>vue的组件化也参考了WebComponent的这些核心组成。</li></ul><h2 id="1-3-组件化的优点？"><a href="#1-3-组件化的优点？" class="headerlink" title="1.3 组件化的优点？"></a>1.3 组件化的优点？</h2><p>组件化的优点：高内聚、可重用、可组合<br>提高开发效率，测试性，复用性，减少更新范围，方便维护。</p><h2 id="1-4-Vue的组件化有哪些特点？"><a href="#1-4-Vue的组件化有哪些特点？" class="headerlink" title="1.4 Vue的组件化有哪些特点？"></a>1.4 Vue的组件化有哪些特点？</h2><p>在vue中，每个组件都有一个渲染函数。<br>Vue2中，叫watcher函数；<br>Vue3中，叫effect函数。<br>在数据变化后，调用执行渲染函数，进行视图更新。</p><h1 id="问题05-既然vue可以通过数据劫持精确探测数据变化，为何还要VDOM并做diff检测差异？"><a href="#问题05-既然vue可以通过数据劫持精确探测数据变化，为何还要VDOM并做diff检测差异？" class="headerlink" title="问题05. 既然vue可以通过数据劫持精确探测数据变化，为何还要VDOM并做diff检测差异？"></a>问题05. 既然vue可以通过数据劫持精确探测数据变化，为何还要VDOM并做diff检测差异？</h1><blockquote><p>这是vue的内部设计导致的。vue对每个组件设计了一个渲染函数，但是没有对每个属性都分配一个渲染函数，因为这会产生大量的渲染函数并浪费内存（卡）。所以vue采用了diff算法+组件级渲染函数的方案。</p></blockquote><h1 id="问题06-请说说你对响应式数据的理解？"><a href="#问题06-请说说你对响应式数据的理解？" class="headerlink" title="问题06. 请说说你对响应式数据的理解？"></a>问题06. 请说说你对响应式数据的理解？</h1><blockquote><p>响应式数据的核心是监控数据和数据的修改。数据改变后可以通知视图进行更新(watcher/effect)。<br>vue2中采用了<code>defineProperty</code>和重写数组的方案；vue3中采用<code>proxy</code>来实现数据劫持。</p></blockquote><h2 id="1-1-响应式数据的实现方案"><a href="#1-1-响应式数据的实现方案" class="headerlink" title="1.1 响应式数据的实现方案"></a>1.1 响应式数据的实现方案</h2><p>响应式数据，即数据变动后给出回应。<br>对象内部通过<code>defineReactive</code>方法，使用<code>Object.defineProperty</code>将现存属性劫持。<br>数组通过<code>重写数组</code>方法来实现劫持。<br>多层对象通过<code>递归</code>来实现劫持。<br>vue3采用<code>proxy</code>来实现劫持。</p><h2 id="1-2-vue2的处理缺陷"><a href="#1-2-vue2的处理缺陷" class="headerlink" title="1.2 vue2的处理缺陷"></a>1.2 vue2的处理缺陷</h2><ol><li>在vue2中，<code>defineReactive</code>方法需要对属性重写添加<code>getter</code>和<code>setter</code>，性能差。</li><li>由于该方法只适用于现存属性，所以新增和删除属性是无法劫持到的，需要额外引入<code>$set</code>和<code>$delete</code>等一系列api来实现，负担重。</li><li>数组需要单独处理，不然性能浪费。</li><li>ES6中的新数据结构<code>Map</code>、<code>Set</code>并不支持。</li></ol><h2 id="1-3-vue2和vue3的响应式数据实现的差异？"><a href="#1-3-vue2和vue3的响应式数据实现的差异？" class="headerlink" title="1.3 vue2和vue3的响应式数据实现的差异？"></a>1.3 vue2和vue3的响应式数据实现的差异？</h2><p>vue3采用<code>proxy</code>来实现劫持。proxy避免了属性重写。</p><h1 id="问题07-vue中如何检测数组变化？"><a href="#问题07-vue中如何检测数组变化？" class="headerlink" title="问题07. vue中如何检测数组变化？"></a>问题07. vue中如何检测数组变化？</h1><blockquote><p>响应式数据，在vue2中对数组进行了重写数组方法的方法来实现数组劫持。但是数组的索引和长度变化是无法检测到的。</p></blockquote><h2 id="1-1-实现数组劫持"><a href="#1-1-实现数组劫持" class="headerlink" title="1.1 实现数组劫持"></a>1.1 实现数组劫持</h2><p>数组考虑到性能因素，并没有用<code>defineProperty</code>对数组的每一项进行劫持，而是选择了重写数组(push,shift,pop,splice,unshift,sort,reverse)等原始修改方法。<br>且数组中如果是对象数据类型的话，会进行递归劫持。</p><h2 id="1-2-数组劫持的缺点"><a href="#1-2-数组劫持的缺点" class="headerlink" title="1.2 数组劫持的缺点"></a>1.2 数组劫持的缺点</h2><p>数组的索引和长度变化是无法检测到的。</p><h1 id="问题08-vue中如何进行依赖收集？"><a href="#问题08-vue中如何进行依赖收集？" class="headerlink" title="问题08. vue中如何进行依赖收集？"></a>问题08. vue中如何进行依赖收集？</h1><blockquote><p>在前端框架Vue中，当数据模型（或状态）变化时，视图会自动更新。这是通过依赖收集机制实现的，框架会自动追踪哪些数据属性被哪些视图依赖，当数据变化时，只有与之相关的视图会被更新，而不是整个页面重新渲染。</p></blockquote><h2 id="1-1-什么是依赖收集？"><a href="#1-1-什么是依赖收集？" class="headerlink" title="1.1 什么是依赖收集？"></a>1.1 什么是依赖收集？</h2><p><code>依赖收集</code>是一种编程机制，用于跟踪和管理数据(之间的关系)。<br>例如：在网页上点击一个按钮改变了某个数据，依赖收集会帮助自动更新相关的视图，无需手动编写更新代码。</p><h2 id="1-2-依赖收集的工作原理？"><a href="#1-2-依赖收集的工作原理？" class="headerlink" title="1.2 依赖收集的工作原理？"></a>1.2 依赖收集的工作原理？</h2><p><strong>依赖关系建立</strong>：在依赖收集的过程中，系统会记录哪些数据或变量依赖于其他数据或变量。这些依赖关系通常是动态的，会根据代码执行路径而变化。<br><strong>依赖关系维护</strong>：一旦建立了依赖关系，系统需要能够有效地维护这些关系。这包括添加、删除、更新依赖关系。<br><strong>依赖触发</strong>：当依赖关系的源数据发生变化时，系统会自动触发相关依赖的操作或更新。这确保了数据的一致性和实时性。<br><strong>依赖性能优化</strong>：依赖收集系统通常会考虑性能问题，以确保不会频繁地触发不必要的依赖操作。这可以通过缓存、延迟更新等方式来优化。<br><strong>循环依赖处理</strong>：某些情况下，依赖关系可能会形成循环，这会导致问题。依赖收集系统需要能够检测和处理这种情况，以避免无限循环。</p><h2 id="1-2-依赖收集在vue2中的流程？"><a href="#1-2-依赖收集在vue2中的流程？" class="headerlink" title="1.2 依赖收集在vue2中的流程？"></a>1.2 依赖收集在vue2中的流程？</h2><p>在Vue.js中，依赖收集是Vue的响应式系统的关键部分之一，它用于跟踪数据属性与视图之间的依赖关系，以便在数据发生变化时自动更新视图。<br>Vue的依赖收集是通过Watcher对象和Dep（依赖）对象来实现的。</p><ol><li><strong>初始化阶段</strong>：当Vue组件被创建时，会在初始化阶段对数据属性进行观察（observe）。这意味着Vue会将每个属性转化为响应式属性，它们的变化会被监听。</li><li><strong>渲染阶段</strong>：在渲染阶段，Vue会创建一个Watcher对象。Watcher对象会订阅（或依赖）一个或多个数据属性。</li><li><strong>依赖收集</strong>：当Watcher对象被创建时，它会读取依赖的数据属性的值。这时，Vue会将当前的Watcher对象添加到这些数据属性的依赖列表中。这个过程是递归的，如果一个数据属性的值依赖于其他数据属性，那么这些依赖关系也会被建立。</li><li><strong>数据变化</strong>：当被依赖的数据属性发生变化时，Vue会通知相关的Watcher对象，以便触发更新。</li><li><strong>重新渲染视图</strong>：一旦Watcher对象被通知，它将重新计算相关视图的值，并触发重新渲染过程，确保视图与数据保持同步。</li></ol><h2 id="1-3-依赖收集在vue3中的新特点？"><a href="#1-3-依赖收集在vue3中的新特点？" class="headerlink" title="1.3 依赖收集在vue3中的新特点？"></a>1.3 依赖收集在vue3中的新特点？</h2><ol><li><strong>Proxy代替Object.defineProperty</strong>：<br>Vue 3采用了ES6的Proxy代替了Vue 2中的Object.defineProperty来实现响应式数据。Proxy更灵活且性能更好，允许在对象的任何级别上进行拦截和代理，这使得依赖收集更加高效和精确。</li><li><strong>单一的依赖追踪</strong>：<br>Vue 3引入了单一的依赖追踪系统，这意味着相比Vue 2，Vue 3更有效地追踪和管理依赖关系。在Vue 3中，不再存在Vue 2中的Watcher实例的概念，而是使用更轻量级的追踪器来管理依赖。</li><li><strong>组合式API</strong>：<br>Vue 3引入了组合式API，这是一种更灵活的方式来组织和复用组件逻辑。组合式API提供了ref、reactive等新的API来处理响应式数据，并且可以在组件内部更精确地定义和跟踪依赖。</li><li><strong>Suspense和异步组件的改进</strong>：<br>Vue 3引入了Suspense特性，使得处理异步数据更加容易。Suspense允许你在异步操作中等待数据，并在数据到达时自动触发视图更新，而不需要手动编写复杂的逻辑。</li><li><strong>Fragments和Teleport</strong>：<br>Vue 3引入了Fragment和Teleport组件，这些组件允许你更灵活地管理视图层次结构，而不会破坏依赖收集。</li></ol><h1 id="问题09-Vue-set方法是如何实现的？"><a href="#问题09-Vue-set方法是如何实现的？" class="headerlink" title="问题09. Vue.set方法是如何实现的？"></a>问题09. Vue.set方法是如何实现的？</h1>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>【硬件】自制键盘笔记</title>
      <link href="/%E9%9A%90%E8%97%8F%E6%96%87%E6%9C%AC/2023-10-16-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%89%8B%E6%92%B8%E4%B8%80%E6%8A%8A%E9%94%AE%E7%9B%98.html"/>
      <url>/%E9%9A%90%E8%97%8F%E6%96%87%E6%9C%AC/2023-10-16-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%89%8B%E6%92%B8%E4%B8%80%E6%8A%8A%E9%94%AE%E7%9B%98.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="note info flat"><p>本文记录了<code>从零开始手撸键盘</code>的过程，包括<code>配列固件选用</code>、<code>原理图设计</code>、<code>PCB设计</code>、<code>器件采购</code>、<code>外壳设计</code>、<code>固件编写</code>、<code>焊接组装</code>等七个章节部分。</p></div><h1 id="1-配列固件选用"><a href="#1-配列固件选用" class="headerlink" title="1. 配列固件选用"></a>1. 配列固件选用</h1><h2 id="1-1-键盘布局-配列设计"><a href="#1-1-键盘布局-配列设计" class="headerlink" title="1.1 键盘布局/配列设计"></a>1.1 键盘布局/配列设计</h2><p>【键盘布局编辑器】<a href="http://www.keyboard-layout-editor.com/">http://www.keyboard-layout-editor.com/</a><br>该编辑器可以基于网页，在线编辑键盘的布局，并生成对应配列的Raw data。<br>【使用流程】</p><ol><li>点击菜单栏<code>Preset</code>预设下拉选择一个<code>ANSI 104</code>或者<code>Blank Layout</code>，进行编辑。</li><li>可以单击选中、区域选中，在选中按键之后：<blockquote><p>上下左右：移动位置；<br>delete删除；<br>shift+左右：调整按键大小；<br>pgup/pgdn：旋转按键；<br>ctrl+上下左右：移动按键旋转的焦点；<br>同时右上角的option里可以调节单次调整的幅度</p></blockquote></li><li>点击一个按键，可以在底部菜单<code>Properties</code>中看见具体的属性参数（主要看按键的名称、宽度、高度、位置）</li><li>可以在底部菜单<code>Raw Data</code>中看到对应的配列代码。</li><li>可以在底部菜单<code>Summary</code>中看到对应的按键数量。</li><li>也可以点击右上角<code>Download</code>下载相关的数据文件（json直接拖入也可以）。</li></ol><p>【参考文献】<br><a href="https://www.zfrontier.com/app/flow/4ZRXn5PypxB0">https://www.zfrontier.com/app/flow/4ZRXn5PypxB0</a><br><a href="https://www.bilibili.com/video/BV1g44y1p7dp">https://www.bilibili.com/video/BV1g44y1p7dp</a></p><h2 id="1-2-定位板图纸生成"><a href="#1-2-定位板图纸生成" class="headerlink" title="1.2 定位板图纸生成"></a>1.2 定位板图纸生成</h2><p>【定位板生成网站】<a href="http://builder.swillkb.com/">http://builder.swillkb.com/</a><br>该网站可以基于Raw Data生成键盘的定位板图纸。<br>【使用流程】</p><ol><li>将Raw Data复制粘贴到<code>CAD Details/Plate Layout</code>中。</li><li><code>Switch Type</code>可以选用MX{_t:1}或者MX{_t:3}，其中{_t:3}的口子是热插拔预留的开口。</li><li><code>Stabilizer type</code>是选择卫星轴类型，一般选用Cherry Only{_s:2}</li><li>点击<code>Draw my CAD</code>，生成后下载<code>DXF</code>文件（可以用CAD打开）</li></ol><h2 id="1-3-固件矩阵生成"><a href="#1-3-固件矩阵生成" class="headerlink" title="1.3 固件矩阵生成"></a>1.3 固件矩阵生成</h2><p>【固件矩阵生成】<a href="https://kbfirmware.com/">https://kbfirmware.com/</a><br>该网站可以基于Raw Data生成键盘的固件矩阵。<br>【使用流程】</p><ol><li>将Raw Data复制粘贴到<code>Keyboard Layout</code>中，生成布线。</li><li>底部菜单栏：WIRING，确认二极管的方向是<code>行到列</code>或者是<code>列到行</code>。</li><li>优化布线矩阵（选中按键点，调整行列位置。从左到右进行优化，减少列的数量）</li><li>切换到第二个底部菜单栏：引脚(PINS)，选择键盘控制器（32U4芯片）并进行引脚的编辑。</li><li>切换到第三个底部菜单栏：映射(KEYMAP)，进行键值布局。（相关键值可以查QMK手册<code>https://docs.qmk.fm/#/keycodes?id=keycodes-overview</code>）其中一般用<code>MO()</code>来做切换层功能按键。</li><li>切换到第六个底部菜单栏：设置(Settings)，进行布局命名。调整LED灯的数量并<code>Sava Configuration</code>保存至json文件。</li><li>切换到第七个底部菜单栏：编译(Compile)，下载固件代码zip。</li></ol><h1 id="2-原理图设计"><a href="#2-原理图设计" class="headerlink" title="2. 原理图设计"></a>2. 原理图设计</h1><p>立创EDA新建工程，进入原理图设计，Shift+F查找新建元件。器件封装最好统一（这里0805）</p><ol><li>芯片选用：键盘主控芯片<code>ATMEGA32U4</code>，可选用<code>AU/MU</code>两种封装型号</li><li>引脚供电：给各个正负电引脚都接上VCC和GND。</li><li>复位电路：给reset引脚接上复位开关。</li><li>晶振选用：XTAL1&amp;2用来接晶振，频率需要参看芯片的型号参数。（例如：CPU最大主频：16MHz）</li><li>完善晶振：给晶振加起振电容，并注意接地，参数需要参看晶振的型号参数。（例如：晶振负载电容值：20pf）</li><li>芯片电源：取4个100nF,1个470nF的电容，给芯片的VCC和GND分别接上。</li><li>Type-C接口：选用12针的type-C-<code>TYPE-C-31-M-12</code>，外壳接地，VBUS接电，CC/SBU禁用，DP-DP/DN-DN，接上芯片D+/D-。</li><li><h1 id="3-PCB设计"><a href="#3-PCB设计" class="headerlink" title="3. PCB设计"></a>3. PCB设计</h1><h1 id="4-器件采购"><a href="#4-器件采购" class="headerlink" title="4. 器件采购"></a>4. 器件采购</h1><h1 id="5-外壳设计-6-固件编写"><a href="#5-外壳设计-6-固件编写" class="headerlink" title="5. 外壳设计 6. 固件编写"></a>5. 外壳设计 6. 固件编写</h1><h1 id="7-焊接组装"><a href="#7-焊接组装" class="headerlink" title="7. 焊接组装"></a>7. 焊接组装</h1></li></ol>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/bp/swiper.min.css"/>
      <url>/css/bp/swiper.min.css</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>/** * Swiper 4.1.6 * Most modern mobile touch slider and framework with hardware accelerated transitions * http://www.idangero.us/swiper/ * * Copyright 2014-2018 Vladimir Kharlampidi * * Released under the MIT License * * Released on: February 11, 2018 */.swiper-container{margin:0 auto;position:relative;overflow:hidden;list-style:none;padding:0;z-index:1}.swiper-container-no-flexbox .swiper-slide{float:left}.swiper-container-vertical>.swiper-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.swiper-wrapper{position:relative;width:100%;height:100%;z-index:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;-o-transition-property:transform;transition-property:transform;transition-property:transform,-webkit-transform;-webkit-box-sizing:content-box;box-sizing:content-box}.swiper-container-android .swiper-slide,.swiper-wrapper{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.swiper-container-multirow>.swiper-wrapper{-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}.swiper-container-free-mode>.swiper-wrapper{-webkit-transition-timing-function:ease-out;-o-transition-timing-function:ease-out;transition-timing-function:ease-out;margin:0 auto}.swiper-slide{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;width:100%;height:100%;position:relative;-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;-o-transition-property:transform;transition-property:transform;transition-property:transform,-webkit-transform}.swiper-invisible-blank-slide{visibility:hidden}.swiper-container-autoheight,.swiper-container-autoheight .swiper-slide{height:auto}.swiper-container-autoheight .swiper-wrapper{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-transition-property:height,-webkit-transform;transition-property:height,-webkit-transform;-o-transition-property:transform,height;transition-property:transform,height;transition-property:transform,height,-webkit-transform}.swiper-container-3d{-webkit-perspective:1200px;perspective:1200px}.swiper-container-3d .swiper-cube-shadow,.swiper-container-3d .swiper-slide,.swiper-container-3d .swiper-slide-shadow-bottom,.swiper-container-3d .swiper-slide-shadow-left,.swiper-container-3d .swiper-slide-shadow-right,.swiper-container-3d .swiper-slide-shadow-top,.swiper-container-3d .swiper-wrapper{-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.swiper-container-3d .swiper-slide-shadow-bottom,.swiper-container-3d .swiper-slide-shadow-left,.swiper-container-3d .swiper-slide-shadow-right,.swiper-container-3d .swiper-slide-shadow-top{position:absolute;left:0;top:0;width:100%;height:100%;pointer-events:none;z-index:10}.swiper-container-3d .swiper-slide-shadow-left{background-image:-webkit-gradient(linear,right top,left top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(right,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(right,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to left,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-3d .swiper-slide-shadow-right{background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(left,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(left,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to right,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-3d .swiper-slide-shadow-top{background-image:-webkit-gradient(linear,left bottom,left top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(bottom,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(bottom,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to top,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-3d .swiper-slide-shadow-bottom{background-image:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(top,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(top,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to bottom,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-wp8-horizontal,.swiper-container-wp8-horizontal>.swiper-wrapper{-ms-touch-action:pan-y;touch-action:pan-y}.swiper-container-wp8-vertical,.swiper-container-wp8-vertical>.swiper-wrapper{-ms-touch-action:pan-x;touch-action:pan-x}.swiper-button-next,.swiper-button-prev{position:absolute;top:50%;width:27px;height:44px;margin-top:-22px;z-index:10;cursor:pointer;background-size:27px 44px;background-position:center;background-repeat:no-repeat}.swiper-button-next.swiper-button-disabled,.swiper-button-prev.swiper-button-disabled{opacity:.35;cursor:auto;pointer-events:none}.swiper-button-prev,.swiper-container-rtl .swiper-button-next{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z'%20fill%3D'%23007aff'%2F%3E%3C%2Fsvg%3E");left:10px;right:auto}.swiper-button-next,.swiper-container-rtl .swiper-button-prev{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z'%20fill%3D'%23007aff'%2F%3E%3C%2Fsvg%3E");right:10px;left:auto}.swiper-button-prev.swiper-button-white,.swiper-container-rtl .swiper-button-next.swiper-button-white{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z'%20fill%3D'%23ffffff'%2F%3E%3C%2Fsvg%3E")}.swiper-button-next.swiper-button-white,.swiper-container-rtl .swiper-button-prev.swiper-button-white{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z'%20fill%3D'%23ffffff'%2F%3E%3C%2Fsvg%3E")}.swiper-button-prev.swiper-button-black,.swiper-container-rtl .swiper-button-next.swiper-button-black{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z'%20fill%3D'%23000000'%2F%3E%3C%2Fsvg%3E")}.swiper-button-next.swiper-button-black,.swiper-container-rtl .swiper-button-prev.swiper-button-black{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z'%20fill%3D'%23000000'%2F%3E%3C%2Fsvg%3E")}.swiper-button-lock{display:none}.swiper-pagination{position:absolute;text-align:center;-webkit-transition:.3s opacity;-o-transition:.3s opacity;transition:.3s opacity;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);z-index:10}.swiper-pagination.swiper-pagination-hidden{opacity:0}.swiper-container-horizontal>.swiper-pagination-bullets,.swiper-pagination-custom,.swiper-pagination-fraction{bottom:10px;left:0;width:100%}.swiper-pagination-bullets-dynamic{overflow:hidden;font-size:0}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33);position:relative}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-main{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev{-webkit-transform:scale(.66);-ms-transform:scale(.66);transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev-prev{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next{-webkit-transform:scale(.66);-ms-transform:scale(.66);transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next-next{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33)}.swiper-pagination-bullet{width:8px;height:8px;display:inline-block;border-radius:100%;background:#000;opacity:.2}button.swiper-pagination-bullet{border:none;margin:0;padding:0;-webkit-box-shadow:none;box-shadow:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}.swiper-pagination-clickable .swiper-pagination-bullet{cursor:pointer}.swiper-pagination-bullet-active{opacity:1;background:#007aff}.swiper-container-vertical>.swiper-pagination-bullets{right:10px;top:50%;-webkit-transform:translate3d(0,-50%,0);transform:translate3d(0,-50%,0)}.swiper-container-vertical>.swiper-pagination-bullets .swiper-pagination-bullet{margin:6px 0;display:block}.swiper-container-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);width:8px}.swiper-container-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{display:inline-block;-webkit-transition:.2s top,.2s -webkit-transform;transition:.2s top,.2s -webkit-transform;-o-transition:.2s transform,.2s top;transition:.2s transform,.2s top;transition:.2s transform,.2s top,.2s -webkit-transform}.swiper-container-horizontal>.swiper-pagination-bullets .swiper-pagination-bullet{margin:0 4px}.swiper-container-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);white-space:nowrap}.swiper-container-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transition:.2s left,.2s -webkit-transform;transition:.2s left,.2s -webkit-transform;-o-transition:.2s transform,.2s left;transition:.2s transform,.2s left;transition:.2s transform,.2s left,.2s -webkit-transform}.swiper-container-horizontal.swiper-container-rtl>.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transition:.2s right,.2s -webkit-transform;transition:.2s right,.2s -webkit-transform;-o-transition:.2s transform,.2s right;transition:.2s transform,.2s right;transition:.2s transform,.2s right,.2s -webkit-transform}.swiper-pagination-progressbar{background:rgba(0,0,0,.25);position:absolute}.swiper-pagination-progressbar .swiper-pagination-progressbar-fill{background:#007aff;position:absolute;left:0;top:0;width:100%;height:100%;-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0);-webkit-transform-origin:left top;-ms-transform-origin:left top;transform-origin:left top}.swiper-container-rtl .swiper-pagination-progressbar .swiper-pagination-progressbar-fill{-webkit-transform-origin:right top;-ms-transform-origin:right top;transform-origin:right top}.swiper-container-horizontal>.swiper-pagination-progressbar{width:100%;height:4px;left:0;top:0}.swiper-container-vertical>.swiper-pagination-progressbar{width:4px;height:100%;left:0;top:0}.swiper-pagination-white .swiper-pagination-bullet-active{background:#fff}.swiper-pagination-progressbar.swiper-pagination-white{background:rgba(255,255,255,.25)}.swiper-pagination-progressbar.swiper-pagination-white .swiper-pagination-progressbar-fill{background:#fff}.swiper-pagination-black .swiper-pagination-bullet-active{background:#000}.swiper-pagination-progressbar.swiper-pagination-black{background:rgba(0,0,0,.25)}.swiper-pagination-progressbar.swiper-pagination-black .swiper-pagination-progressbar-fill{background:#000}.swiper-pagination-lock{display:none}.swiper-scrollbar{border-radius:10px;position:relative;-ms-touch-action:none;background:rgba(0,0,0,.1)}.swiper-container-horizontal>.swiper-scrollbar{position:absolute;left:1%;bottom:3px;z-index:50;height:5px;width:98%}.swiper-container-vertical>.swiper-scrollbar{position:absolute;right:3px;top:1%;z-index:50;width:5px;height:98%}.swiper-scrollbar-drag{height:100%;width:100%;position:relative;background:rgba(0,0,0,.5);border-radius:10px;left:0;top:0}.swiper-scrollbar-cursor-drag{cursor:move}.swiper-scrollbar-lock{display:none}.swiper-zoom-container{width:100%;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;text-align:center}.swiper-zoom-container>canvas,.swiper-zoom-container>img,.swiper-zoom-container>svg{max-width:100%;max-height:100%;-o-object-fit:contain;object-fit:contain}.swiper-slide-zoomed{cursor:move}.swiper-lazy-preloader{width:42px;height:42px;position:absolute;left:50%;top:50%;margin-left:-21px;margin-top:-21px;z-index:10;-webkit-transform-origin:50%;-ms-transform-origin:50%;transform-origin:50%;-webkit-animation:swiper-preloader-spin 1s steps(12,end) infinite;animation:swiper-preloader-spin 1s steps(12,end) infinite}.swiper-lazy-preloader:after{display:block;content:'';width:100%;height:100%;background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20viewBox%3D'0%200%20120%20120'%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20xmlns%3Axlink%3D'http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink'%3E%3Cdefs%3E%3Cline%20id%3D'l'%20x1%3D'60'%20x2%3D'60'%20y1%3D'7'%20y2%3D'27'%20stroke%3D'%236c6c6c'%20stroke-width%3D'11'%20stroke-linecap%3D'round'%2F%3E%3C%2Fdefs%3E%3Cg%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(30%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(60%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(90%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(120%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(150%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.37'%20transform%3D'rotate(180%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.46'%20transform%3D'rotate(210%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.56'%20transform%3D'rotate(240%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.66'%20transform%3D'rotate(270%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.75'%20transform%3D'rotate(300%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.85'%20transform%3D'rotate(330%2060%2C60)'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E");background-position:50%;background-size:100%;background-repeat:no-repeat}.swiper-lazy-preloader-white:after{background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg%20viewBox%3D'0%200%20120%20120'%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20xmlns%3Axlink%3D'http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink'%3E%3Cdefs%3E%3Cline%20id%3D'l'%20x1%3D'60'%20x2%3D'60'%20y1%3D'7'%20y2%3D'27'%20stroke%3D'%23fff'%20stroke-width%3D'11'%20stroke-linecap%3D'round'%2F%3E%3C%2Fdefs%3E%3Cg%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(30%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(60%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(90%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(120%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(150%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.37'%20transform%3D'rotate(180%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.46'%20transform%3D'rotate(210%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.56'%20transform%3D'rotate(240%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.66'%20transform%3D'rotate(270%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.75'%20transform%3D'rotate(300%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.85'%20transform%3D'rotate(330%2060%2C60)'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E")}@-webkit-keyframes swiper-preloader-spin{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes swiper-preloader-spin{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.swiper-container .swiper-notification{position:absolute;left:0;top:0;pointer-events:none;opacity:0;z-index:-1000}.swiper-container-fade.swiper-container-free-mode .swiper-slide{-webkit-transition-timing-function:ease-out;-o-transition-timing-function:ease-out;transition-timing-function:ease-out}.swiper-container-fade .swiper-slide{pointer-events:none;-webkit-transition-property:opacity;-o-transition-property:opacity;transition-property:opacity}.swiper-container-fade .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-fade .swiper-slide-active,.swiper-container-fade .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-cube{overflow:visible}.swiper-container-cube .swiper-slide{pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1;visibility:hidden;-webkit-transform-origin:0 0;-ms-transform-origin:0 0;transform-origin:0 0;width:100%;height:100%}.swiper-container-cube .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-cube.swiper-container-rtl .swiper-slide{-webkit-transform-origin:100% 0;-ms-transform-origin:100% 0;transform-origin:100% 0}.swiper-container-cube .swiper-slide-active,.swiper-container-cube .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-cube .swiper-slide-active,.swiper-container-cube .swiper-slide-next,.swiper-container-cube .swiper-slide-next+.swiper-slide,.swiper-container-cube .swiper-slide-prev{pointer-events:auto;visibility:visible}.swiper-container-cube .swiper-slide-shadow-bottom,.swiper-container-cube .swiper-slide-shadow-left,.swiper-container-cube .swiper-slide-shadow-right,.swiper-container-cube .swiper-slide-shadow-top{z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}.swiper-container-cube .swiper-cube-shadow{position:absolute;left:0;bottom:0;width:100%;height:100%;background:#000;opacity:.6;-webkit-filter:blur(50px);filter:blur(50px);z-index:0}.swiper-container-flip{overflow:visible}.swiper-container-flip .swiper-slide{pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1}.swiper-container-flip .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-flip .swiper-slide-active,.swiper-container-flip .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-flip .swiper-slide-shadow-bottom,.swiper-container-flip .swiper-slide-shadow-left,.swiper-container-flip .swiper-slide-shadow-right,.swiper-container-flip .swiper-slide-shadow-top{z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}.swiper-container-coverflow .swiper-wrapper{-ms-perspective:1200px}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/wowjs/animate.min.css"/>
      <url>/css/wowjs/animate.min.css</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>@charset "UTF-8";/*! * animate.css - https://animate.style/ * Version - 4.1.1 * Licensed under the MIT license - http://opensource.org/licenses/MIT * * Copyright (c) 2020 Animate.css */:root{--animate-duration:1s;--animate-delay:1s;--animate-repeat:1}.animate__animated{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-duration:var(--animate-duration);animation-duration:var(--animate-duration);-webkit-animation-fill-mode:both;animation-fill-mode:both}.animate__animated.animate__infinite{-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}.animate__animated.animate__repeat-1{-webkit-animation-iteration-count:1;animation-iteration-count:1;-webkit-animation-iteration-count:var(--animate-repeat);animation-iteration-count:var(--animate-repeat)}.animate__animated.animate__repeat-2{-webkit-animation-iteration-count:2;animation-iteration-count:2;-webkit-animation-iteration-count:calc(var(--animate-repeat)*2);animation-iteration-count:calc(var(--animate-repeat)*2)}.animate__animated.animate__repeat-3{-webkit-animation-iteration-count:3;animation-iteration-count:3;-webkit-animation-iteration-count:calc(var(--animate-repeat)*3);animation-iteration-count:calc(var(--animate-repeat)*3)}.animate__animated.animate__delay-1s{-webkit-animation-delay:1s;animation-delay:1s;-webkit-animation-delay:var(--animate-delay);animation-delay:var(--animate-delay)}.animate__animated.animate__delay-2s{-webkit-animation-delay:2s;animation-delay:2s;-webkit-animation-delay:calc(var(--animate-delay)*2);animation-delay:calc(var(--animate-delay)*2)}.animate__animated.animate__delay-3s{-webkit-animation-delay:3s;animation-delay:3s;-webkit-animation-delay:calc(var(--animate-delay)*3);animation-delay:calc(var(--animate-delay)*3)}.animate__animated.animate__delay-4s{-webkit-animation-delay:4s;animation-delay:4s;-webkit-animation-delay:calc(var(--animate-delay)*4);animation-delay:calc(var(--animate-delay)*4)}.animate__animated.animate__delay-5s{-webkit-animation-delay:5s;animation-delay:5s;-webkit-animation-delay:calc(var(--animate-delay)*5);animation-delay:calc(var(--animate-delay)*5)}.animate__animated.animate__faster{-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-duration:calc(var(--animate-duration)/2);animation-duration:calc(var(--animate-duration)/2)}.animate__animated.animate__fast{-webkit-animation-duration:.8s;animation-duration:.8s;-webkit-animation-duration:calc(var(--animate-duration)*0.8);animation-duration:calc(var(--animate-duration)*0.8)}.animate__animated.animate__slow{-webkit-animation-duration:2s;animation-duration:2s;-webkit-animation-duration:calc(var(--animate-duration)*2);animation-duration:calc(var(--animate-duration)*2)}.animate__animated.animate__slower{-webkit-animation-duration:3s;animation-duration:3s;-webkit-animation-duration:calc(var(--animate-duration)*3);animation-duration:calc(var(--animate-duration)*3)}@media (prefers-reduced-motion:reduce),print{.animate__animated{-webkit-animation-duration:1ms!important;animation-duration:1ms!important;-webkit-transition-duration:1ms!important;transition-duration:1ms!important;-webkit-animation-iteration-count:1!important;animation-iteration-count:1!important}.animate__animated[class*=Out]{opacity:0}}@-webkit-keyframes bounce{0%,20%,53%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1);-webkit-transform:translateZ(0);transform:translateZ(0)}40%,43%{-webkit-animation-timing-function:cubic-bezier(.755,.05,.855,.06);animation-timing-function:cubic-bezier(.755,.05,.855,.06);-webkit-transform:translate3d(0,-30px,0) scaleY(1.1);transform:translate3d(0,-30px,0) scaleY(1.1)}70%{-webkit-animation-timing-function:cubic-bezier(.755,.05,.855,.06);animation-timing-function:cubic-bezier(.755,.05,.855,.06);-webkit-transform:translate3d(0,-15px,0) scaleY(1.05);transform:translate3d(0,-15px,0) scaleY(1.05)}80%{-webkit-transition-timing-function:cubic-bezier(.215,.61,.355,1);transition-timing-function:cubic-bezier(.215,.61,.355,1);-webkit-transform:translateZ(0) scaleY(.95);transform:translateZ(0) scaleY(.95)}90%{-webkit-transform:translate3d(0,-4px,0) scaleY(1.02);transform:translate3d(0,-4px,0) scaleY(1.02)}}@keyframes bounce{0%,20%,53%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1);-webkit-transform:translateZ(0);transform:translateZ(0)}40%,43%{-webkit-animation-timing-function:cubic-bezier(.755,.05,.855,.06);animation-timing-function:cubic-bezier(.755,.05,.855,.06);-webkit-transform:translate3d(0,-30px,0) scaleY(1.1);transform:translate3d(0,-30px,0) scaleY(1.1)}70%{-webkit-animation-timing-function:cubic-bezier(.755,.05,.855,.06);animation-timing-function:cubic-bezier(.755,.05,.855,.06);-webkit-transform:translate3d(0,-15px,0) scaleY(1.05);transform:translate3d(0,-15px,0) scaleY(1.05)}80%{-webkit-transition-timing-function:cubic-bezier(.215,.61,.355,1);transition-timing-function:cubic-bezier(.215,.61,.355,1);-webkit-transform:translateZ(0) scaleY(.95);transform:translateZ(0) scaleY(.95)}90%{-webkit-transform:translate3d(0,-4px,0) scaleY(1.02);transform:translate3d(0,-4px,0) scaleY(1.02)}}.animate__bounce{-webkit-animation-name:bounce;animation-name:bounce;-webkit-transform-origin:center bottom;transform-origin:center bottom}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.animate__flash{-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes pulse{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}50%{-webkit-transform:scale3d(1.05,1.05,1.05);transform:scale3d(1.05,1.05,1.05)}to{-webkit-transform:scaleX(1);transform:scaleX(1)}}@keyframes pulse{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}50%{-webkit-transform:scale3d(1.05,1.05,1.05);transform:scale3d(1.05,1.05,1.05)}to{-webkit-transform:scaleX(1);transform:scaleX(1)}}.animate__pulse{-webkit-animation-name:pulse;animation-name:pulse;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}@-webkit-keyframes rubberBand{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}30%{-webkit-transform:scale3d(1.25,.75,1);transform:scale3d(1.25,.75,1)}40%{-webkit-transform:scale3d(.75,1.25,1);transform:scale3d(.75,1.25,1)}50%{-webkit-transform:scale3d(1.15,.85,1);transform:scale3d(1.15,.85,1)}65%{-webkit-transform:scale3d(.95,1.05,1);transform:scale3d(.95,1.05,1)}75%{-webkit-transform:scale3d(1.05,.95,1);transform:scale3d(1.05,.95,1)}to{-webkit-transform:scaleX(1);transform:scaleX(1)}}@keyframes rubberBand{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}30%{-webkit-transform:scale3d(1.25,.75,1);transform:scale3d(1.25,.75,1)}40%{-webkit-transform:scale3d(.75,1.25,1);transform:scale3d(.75,1.25,1)}50%{-webkit-transform:scale3d(1.15,.85,1);transform:scale3d(1.15,.85,1)}65%{-webkit-transform:scale3d(.95,1.05,1);transform:scale3d(.95,1.05,1)}75%{-webkit-transform:scale3d(1.05,.95,1);transform:scale3d(1.05,.95,1)}to{-webkit-transform:scaleX(1);transform:scaleX(1)}}.animate__rubberBand{-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shakeX{0%,to{-webkit-transform:translateZ(0);transform:translateZ(0)}10%,30%,50%,70%,90%{-webkit-transform:translate3d(-10px,0,0);transform:translate3d(-10px,0,0)}20%,40%,60%,80%{-webkit-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0)}}@keyframes shakeX{0%,to{-webkit-transform:translateZ(0);transform:translateZ(0)}10%,30%,50%,70%,90%{-webkit-transform:translate3d(-10px,0,0);transform:translate3d(-10px,0,0)}20%,40%,60%,80%{-webkit-transform:translate3d(10px,0,0);transform:translate3d(10px,0,0)}}.animate__shakeX{-webkit-animation-name:shakeX;animation-name:shakeX}@-webkit-keyframes shakeY{0%,to{-webkit-transform:translateZ(0);transform:translateZ(0)}10%,30%,50%,70%,90%{-webkit-transform:translate3d(0,-10px,0);transform:translate3d(0,-10px,0)}20%,40%,60%,80%{-webkit-transform:translate3d(0,10px,0);transform:translate3d(0,10px,0)}}@keyframes shakeY{0%,to{-webkit-transform:translateZ(0);transform:translateZ(0)}10%,30%,50%,70%,90%{-webkit-transform:translate3d(0,-10px,0);transform:translate3d(0,-10px,0)}20%,40%,60%,80%{-webkit-transform:translate3d(0,10px,0);transform:translate3d(0,10px,0)}}.animate__shakeY{-webkit-animation-name:shakeY;animation-name:shakeY}@-webkit-keyframes headShake{0%{-webkit-transform:translateX(0);transform:translateX(0)}6.5%{-webkit-transform:translateX(-6px) rotateY(-9deg);transform:translateX(-6px) rotateY(-9deg)}18.5%{-webkit-transform:translateX(5px) rotateY(7deg);transform:translateX(5px) rotateY(7deg)}31.5%{-webkit-transform:translateX(-3px) rotateY(-5deg);transform:translateX(-3px) rotateY(-5deg)}43.5%{-webkit-transform:translateX(2px) rotateY(3deg);transform:translateX(2px) rotateY(3deg)}50%{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes headShake{0%{-webkit-transform:translateX(0);transform:translateX(0)}6.5%{-webkit-transform:translateX(-6px) rotateY(-9deg);transform:translateX(-6px) rotateY(-9deg)}18.5%{-webkit-transform:translateX(5px) rotateY(7deg);transform:translateX(5px) rotateY(7deg)}31.5%{-webkit-transform:translateX(-3px) rotateY(-5deg);transform:translateX(-3px) rotateY(-5deg)}43.5%{-webkit-transform:translateX(2px) rotateY(3deg);transform:translateX(2px) rotateY(3deg)}50%{-webkit-transform:translateX(0);transform:translateX(0)}}.animate__headShake{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;-webkit-animation-name:headShake;animation-name:headShake}@-webkit-keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}@keyframes swing{20%{-webkit-transform:rotate(15deg);transform:rotate(15deg)}40%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}60%{-webkit-transform:rotate(5deg);transform:rotate(5deg)}80%{-webkit-transform:rotate(-5deg);transform:rotate(-5deg)}to{-webkit-transform:rotate(0deg);transform:rotate(0deg)}}.animate__swing{-webkit-transform-origin:top center;transform-origin:top center;-webkit-animation-name:swing;animation-name:swing}@-webkit-keyframes tada{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}10%,20%{-webkit-transform:scale3d(.9,.9,.9) rotate(-3deg);transform:scale3d(.9,.9,.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale3d(1.1,1.1,1.1) rotate(3deg);transform:scale3d(1.1,1.1,1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale3d(1.1,1.1,1.1) rotate(-3deg);transform:scale3d(1.1,1.1,1.1) rotate(-3deg)}to{-webkit-transform:scaleX(1);transform:scaleX(1)}}@keyframes tada{0%{-webkit-transform:scaleX(1);transform:scaleX(1)}10%,20%{-webkit-transform:scale3d(.9,.9,.9) rotate(-3deg);transform:scale3d(.9,.9,.9) rotate(-3deg)}30%,50%,70%,90%{-webkit-transform:scale3d(1.1,1.1,1.1) rotate(3deg);transform:scale3d(1.1,1.1,1.1) rotate(3deg)}40%,60%,80%{-webkit-transform:scale3d(1.1,1.1,1.1) rotate(-3deg);transform:scale3d(1.1,1.1,1.1) rotate(-3deg)}to{-webkit-transform:scaleX(1);transform:scaleX(1)}}.animate__tada{-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{-webkit-transform:translateZ(0);transform:translateZ(0)}15%{-webkit-transform:translate3d(-25%,0,0) rotate(-5deg);transform:translate3d(-25%,0,0) rotate(-5deg)}30%{-webkit-transform:translate3d(20%,0,0) rotate(3deg);transform:translate3d(20%,0,0) rotate(3deg)}45%{-webkit-transform:translate3d(-15%,0,0) rotate(-3deg);transform:translate3d(-15%,0,0) rotate(-3deg)}60%{-webkit-transform:translate3d(10%,0,0) rotate(2deg);transform:translate3d(10%,0,0) rotate(2deg)}75%{-webkit-transform:translate3d(-5%,0,0) rotate(-1deg);transform:translate3d(-5%,0,0) rotate(-1deg)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes wobble{0%{-webkit-transform:translateZ(0);transform:translateZ(0)}15%{-webkit-transform:translate3d(-25%,0,0) rotate(-5deg);transform:translate3d(-25%,0,0) rotate(-5deg)}30%{-webkit-transform:translate3d(20%,0,0) rotate(3deg);transform:translate3d(20%,0,0) rotate(3deg)}45%{-webkit-transform:translate3d(-15%,0,0) rotate(-3deg);transform:translate3d(-15%,0,0) rotate(-3deg)}60%{-webkit-transform:translate3d(10%,0,0) rotate(2deg);transform:translate3d(10%,0,0) rotate(2deg)}75%{-webkit-transform:translate3d(-5%,0,0) rotate(-1deg);transform:translate3d(-5%,0,0) rotate(-1deg)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__wobble{-webkit-animation-name:wobble;animation-name:wobble}@-webkit-keyframes jello{0%,11.1%,to{-webkit-transform:translateZ(0);transform:translateZ(0)}22.2%{-webkit-transform:skewX(-12.5deg) skewY(-12.5deg);transform:skewX(-12.5deg) skewY(-12.5deg)}33.3%{-webkit-transform:skewX(6.25deg) skewY(6.25deg);transform:skewX(6.25deg) skewY(6.25deg)}44.4%{-webkit-transform:skewX(-3.125deg) skewY(-3.125deg);transform:skewX(-3.125deg) skewY(-3.125deg)}55.5%{-webkit-transform:skewX(1.5625deg) skewY(1.5625deg);transform:skewX(1.5625deg) skewY(1.5625deg)}66.6%{-webkit-transform:skewX(-.78125deg) skewY(-.78125deg);transform:skewX(-.78125deg) skewY(-.78125deg)}77.7%{-webkit-transform:skewX(.390625deg) skewY(.390625deg);transform:skewX(.390625deg) skewY(.390625deg)}88.8%{-webkit-transform:skewX(-.1953125deg) skewY(-.1953125deg);transform:skewX(-.1953125deg) skewY(-.1953125deg)}}@keyframes jello{0%,11.1%,to{-webkit-transform:translateZ(0);transform:translateZ(0)}22.2%{-webkit-transform:skewX(-12.5deg) skewY(-12.5deg);transform:skewX(-12.5deg) skewY(-12.5deg)}33.3%{-webkit-transform:skewX(6.25deg) skewY(6.25deg);transform:skewX(6.25deg) skewY(6.25deg)}44.4%{-webkit-transform:skewX(-3.125deg) skewY(-3.125deg);transform:skewX(-3.125deg) skewY(-3.125deg)}55.5%{-webkit-transform:skewX(1.5625deg) skewY(1.5625deg);transform:skewX(1.5625deg) skewY(1.5625deg)}66.6%{-webkit-transform:skewX(-.78125deg) skewY(-.78125deg);transform:skewX(-.78125deg) skewY(-.78125deg)}77.7%{-webkit-transform:skewX(.390625deg) skewY(.390625deg);transform:skewX(.390625deg) skewY(.390625deg)}88.8%{-webkit-transform:skewX(-.1953125deg) skewY(-.1953125deg);transform:skewX(-.1953125deg) skewY(-.1953125deg)}}.animate__jello{-webkit-animation-name:jello;animation-name:jello;-webkit-transform-origin:center;transform-origin:center}@-webkit-keyframes heartBeat{0%{-webkit-transform:scale(1);transform:scale(1)}14%{-webkit-transform:scale(1.3);transform:scale(1.3)}28%{-webkit-transform:scale(1);transform:scale(1)}42%{-webkit-transform:scale(1.3);transform:scale(1.3)}70%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes heartBeat{0%{-webkit-transform:scale(1);transform:scale(1)}14%{-webkit-transform:scale(1.3);transform:scale(1.3)}28%{-webkit-transform:scale(1);transform:scale(1)}42%{-webkit-transform:scale(1.3);transform:scale(1.3)}70%{-webkit-transform:scale(1);transform:scale(1)}}.animate__heartBeat{-webkit-animation-name:heartBeat;animation-name:heartBeat;-webkit-animation-duration:1.3s;animation-duration:1.3s;-webkit-animation-duration:calc(var(--animate-duration)*1.3);animation-duration:calc(var(--animate-duration)*1.3);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}@-webkit-keyframes backInDown{0%{-webkit-transform:translateY(-1200px) scale(.7);transform:translateY(-1200px) scale(.7);opacity:.7}80%{-webkit-transform:translateY(0) scale(.7);transform:translateY(0) scale(.7);opacity:.7}to{-webkit-transform:scale(1);transform:scale(1);opacity:1}}@keyframes backInDown{0%{-webkit-transform:translateY(-1200px) scale(.7);transform:translateY(-1200px) scale(.7);opacity:.7}80%{-webkit-transform:translateY(0) scale(.7);transform:translateY(0) scale(.7);opacity:.7}to{-webkit-transform:scale(1);transform:scale(1);opacity:1}}.animate__backInDown{-webkit-animation-name:backInDown;animation-name:backInDown}@-webkit-keyframes backInLeft{0%{-webkit-transform:translateX(-2000px) scale(.7);transform:translateX(-2000px) scale(.7);opacity:.7}80%{-webkit-transform:translateX(0) scale(.7);transform:translateX(0) scale(.7);opacity:.7}to{-webkit-transform:scale(1);transform:scale(1);opacity:1}}@keyframes backInLeft{0%{-webkit-transform:translateX(-2000px) scale(.7);transform:translateX(-2000px) scale(.7);opacity:.7}80%{-webkit-transform:translateX(0) scale(.7);transform:translateX(0) scale(.7);opacity:.7}to{-webkit-transform:scale(1);transform:scale(1);opacity:1}}.animate__backInLeft{-webkit-animation-name:backInLeft;animation-name:backInLeft}@-webkit-keyframes backInRight{0%{-webkit-transform:translateX(2000px) scale(.7);transform:translateX(2000px) scale(.7);opacity:.7}80%{-webkit-transform:translateX(0) scale(.7);transform:translateX(0) scale(.7);opacity:.7}to{-webkit-transform:scale(1);transform:scale(1);opacity:1}}@keyframes backInRight{0%{-webkit-transform:translateX(2000px) scale(.7);transform:translateX(2000px) scale(.7);opacity:.7}80%{-webkit-transform:translateX(0) scale(.7);transform:translateX(0) scale(.7);opacity:.7}to{-webkit-transform:scale(1);transform:scale(1);opacity:1}}.animate__backInRight{-webkit-animation-name:backInRight;animation-name:backInRight}@-webkit-keyframes backInUp{0%{-webkit-transform:translateY(1200px) scale(.7);transform:translateY(1200px) scale(.7);opacity:.7}80%{-webkit-transform:translateY(0) scale(.7);transform:translateY(0) scale(.7);opacity:.7}to{-webkit-transform:scale(1);transform:scale(1);opacity:1}}@keyframes backInUp{0%{-webkit-transform:translateY(1200px) scale(.7);transform:translateY(1200px) scale(.7);opacity:.7}80%{-webkit-transform:translateY(0) scale(.7);transform:translateY(0) scale(.7);opacity:.7}to{-webkit-transform:scale(1);transform:scale(1);opacity:1}}.animate__backInUp{-webkit-animation-name:backInUp;animation-name:backInUp}@-webkit-keyframes backOutDown{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}20%{-webkit-transform:translateY(0) scale(.7);transform:translateY(0) scale(.7);opacity:.7}to{-webkit-transform:translateY(700px) scale(.7);transform:translateY(700px) scale(.7);opacity:.7}}@keyframes backOutDown{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}20%{-webkit-transform:translateY(0) scale(.7);transform:translateY(0) scale(.7);opacity:.7}to{-webkit-transform:translateY(700px) scale(.7);transform:translateY(700px) scale(.7);opacity:.7}}.animate__backOutDown{-webkit-animation-name:backOutDown;animation-name:backOutDown}@-webkit-keyframes backOutLeft{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}20%{-webkit-transform:translateX(0) scale(.7);transform:translateX(0) scale(.7);opacity:.7}to{-webkit-transform:translateX(-2000px) scale(.7);transform:translateX(-2000px) scale(.7);opacity:.7}}@keyframes backOutLeft{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}20%{-webkit-transform:translateX(0) scale(.7);transform:translateX(0) scale(.7);opacity:.7}to{-webkit-transform:translateX(-2000px) scale(.7);transform:translateX(-2000px) scale(.7);opacity:.7}}.animate__backOutLeft{-webkit-animation-name:backOutLeft;animation-name:backOutLeft}@-webkit-keyframes backOutRight{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}20%{-webkit-transform:translateX(0) scale(.7);transform:translateX(0) scale(.7);opacity:.7}to{-webkit-transform:translateX(2000px) scale(.7);transform:translateX(2000px) scale(.7);opacity:.7}}@keyframes backOutRight{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}20%{-webkit-transform:translateX(0) scale(.7);transform:translateX(0) scale(.7);opacity:.7}to{-webkit-transform:translateX(2000px) scale(.7);transform:translateX(2000px) scale(.7);opacity:.7}}.animate__backOutRight{-webkit-animation-name:backOutRight;animation-name:backOutRight}@-webkit-keyframes backOutUp{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}20%{-webkit-transform:translateY(0) scale(.7);transform:translateY(0) scale(.7);opacity:.7}to{-webkit-transform:translateY(-700px) scale(.7);transform:translateY(-700px) scale(.7);opacity:.7}}@keyframes backOutUp{0%{-webkit-transform:scale(1);transform:scale(1);opacity:1}20%{-webkit-transform:translateY(0) scale(.7);transform:translateY(0) scale(.7);opacity:.7}to{-webkit-transform:translateY(-700px) scale(.7);transform:translateY(-700px) scale(.7);opacity:.7}}.animate__backOutUp{-webkit-animation-name:backOutUp;animation-name:backOutUp}@-webkit-keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}20%{-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}40%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}60%{opacity:1;-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}80%{-webkit-transform:scale3d(.97,.97,.97);transform:scale3d(.97,.97,.97)}to{opacity:1;-webkit-transform:scaleX(1);transform:scaleX(1)}}@keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}20%{-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}40%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}60%{opacity:1;-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}80%{-webkit-transform:scale3d(.97,.97,.97);transform:scale3d(.97,.97,.97)}to{opacity:1;-webkit-transform:scaleX(1);transform:scaleX(1)}}.animate__bounceIn{-webkit-animation-duration:.75s;animation-duration:.75s;-webkit-animation-duration:calc(var(--animate-duration)*0.75);animation-duration:calc(var(--animate-duration)*0.75);-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(0,-3000px,0) scaleY(3);transform:translate3d(0,-3000px,0) scaleY(3)}60%{opacity:1;-webkit-transform:translate3d(0,25px,0) scaleY(.9);transform:translate3d(0,25px,0) scaleY(.9)}75%{-webkit-transform:translate3d(0,-10px,0) scaleY(.95);transform:translate3d(0,-10px,0) scaleY(.95)}90%{-webkit-transform:translate3d(0,5px,0) scaleY(.985);transform:translate3d(0,5px,0) scaleY(.985)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes bounceInDown{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(0,-3000px,0) scaleY(3);transform:translate3d(0,-3000px,0) scaleY(3)}60%{opacity:1;-webkit-transform:translate3d(0,25px,0) scaleY(.9);transform:translate3d(0,25px,0) scaleY(.9)}75%{-webkit-transform:translate3d(0,-10px,0) scaleY(.95);transform:translate3d(0,-10px,0) scaleY(.95)}90%{-webkit-transform:translate3d(0,5px,0) scaleY(.985);transform:translate3d(0,5px,0) scaleY(.985)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__bounceInDown{-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(-3000px,0,0) scaleX(3);transform:translate3d(-3000px,0,0) scaleX(3)}60%{opacity:1;-webkit-transform:translate3d(25px,0,0) scaleX(1);transform:translate3d(25px,0,0) scaleX(1)}75%{-webkit-transform:translate3d(-10px,0,0) scaleX(.98);transform:translate3d(-10px,0,0) scaleX(.98)}90%{-webkit-transform:translate3d(5px,0,0) scaleX(.995);transform:translate3d(5px,0,0) scaleX(.995)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes bounceInLeft{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(-3000px,0,0) scaleX(3);transform:translate3d(-3000px,0,0) scaleX(3)}60%{opacity:1;-webkit-transform:translate3d(25px,0,0) scaleX(1);transform:translate3d(25px,0,0) scaleX(1)}75%{-webkit-transform:translate3d(-10px,0,0) scaleX(.98);transform:translate3d(-10px,0,0) scaleX(.98)}90%{-webkit-transform:translate3d(5px,0,0) scaleX(.995);transform:translate3d(5px,0,0) scaleX(.995)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__bounceInLeft{-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(3000px,0,0) scaleX(3);transform:translate3d(3000px,0,0) scaleX(3)}60%{opacity:1;-webkit-transform:translate3d(-25px,0,0) scaleX(1);transform:translate3d(-25px,0,0) scaleX(1)}75%{-webkit-transform:translate3d(10px,0,0) scaleX(.98);transform:translate3d(10px,0,0) scaleX(.98)}90%{-webkit-transform:translate3d(-5px,0,0) scaleX(.995);transform:translate3d(-5px,0,0) scaleX(.995)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes bounceInRight{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(3000px,0,0) scaleX(3);transform:translate3d(3000px,0,0) scaleX(3)}60%{opacity:1;-webkit-transform:translate3d(-25px,0,0) scaleX(1);transform:translate3d(-25px,0,0) scaleX(1)}75%{-webkit-transform:translate3d(10px,0,0) scaleX(.98);transform:translate3d(10px,0,0) scaleX(.98)}90%{-webkit-transform:translate3d(-5px,0,0) scaleX(.995);transform:translate3d(-5px,0,0) scaleX(.995)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__bounceInRight{-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(0,3000px,0) scaleY(5);transform:translate3d(0,3000px,0) scaleY(5)}60%{opacity:1;-webkit-transform:translate3d(0,-20px,0) scaleY(.9);transform:translate3d(0,-20px,0) scaleY(.9)}75%{-webkit-transform:translate3d(0,10px,0) scaleY(.95);transform:translate3d(0,10px,0) scaleY(.95)}90%{-webkit-transform:translate3d(0,-5px,0) scaleY(.985);transform:translate3d(0,-5px,0) scaleY(.985)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes bounceInUp{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:translate3d(0,3000px,0) scaleY(5);transform:translate3d(0,3000px,0) scaleY(5)}60%{opacity:1;-webkit-transform:translate3d(0,-20px,0) scaleY(.9);transform:translate3d(0,-20px,0) scaleY(.9)}75%{-webkit-transform:translate3d(0,10px,0) scaleY(.95);transform:translate3d(0,10px,0) scaleY(.95)}90%{-webkit-transform:translate3d(0,-5px,0) scaleY(.985);transform:translate3d(0,-5px,0) scaleY(.985)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__bounceInUp{-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes bounceOut{20%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}50%,55%{opacity:1;-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}to{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}}@keyframes bounceOut{20%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}50%,55%{opacity:1;-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}to{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}}.animate__bounceOut{-webkit-animation-duration:.75s;animation-duration:.75s;-webkit-animation-duration:calc(var(--animate-duration)*0.75);animation-duration:calc(var(--animate-duration)*0.75);-webkit-animation-name:bounceOut;animation-name:bounceOut}@-webkit-keyframes bounceOutDown{20%{-webkit-transform:translate3d(0,10px,0) scaleY(.985);transform:translate3d(0,10px,0) scaleY(.985)}40%,45%{opacity:1;-webkit-transform:translate3d(0,-20px,0) scaleY(.9);transform:translate3d(0,-20px,0) scaleY(.9)}to{opacity:0;-webkit-transform:translate3d(0,2000px,0) scaleY(3);transform:translate3d(0,2000px,0) scaleY(3)}}@keyframes bounceOutDown{20%{-webkit-transform:translate3d(0,10px,0) scaleY(.985);transform:translate3d(0,10px,0) scaleY(.985)}40%,45%{opacity:1;-webkit-transform:translate3d(0,-20px,0) scaleY(.9);transform:translate3d(0,-20px,0) scaleY(.9)}to{opacity:0;-webkit-transform:translate3d(0,2000px,0) scaleY(3);transform:translate3d(0,2000px,0) scaleY(3)}}.animate__bounceOutDown{-webkit-animation-name:bounceOutDown;animation-name:bounceOutDown}@-webkit-keyframes bounceOutLeft{20%{opacity:1;-webkit-transform:translate3d(20px,0,0) scaleX(.9);transform:translate3d(20px,0,0) scaleX(.9)}to{opacity:0;-webkit-transform:translate3d(-2000px,0,0) scaleX(2);transform:translate3d(-2000px,0,0) scaleX(2)}}@keyframes bounceOutLeft{20%{opacity:1;-webkit-transform:translate3d(20px,0,0) scaleX(.9);transform:translate3d(20px,0,0) scaleX(.9)}to{opacity:0;-webkit-transform:translate3d(-2000px,0,0) scaleX(2);transform:translate3d(-2000px,0,0) scaleX(2)}}.animate__bounceOutLeft{-webkit-animation-name:bounceOutLeft;animation-name:bounceOutLeft}@-webkit-keyframes bounceOutRight{20%{opacity:1;-webkit-transform:translate3d(-20px,0,0) scaleX(.9);transform:translate3d(-20px,0,0) scaleX(.9)}to{opacity:0;-webkit-transform:translate3d(2000px,0,0) scaleX(2);transform:translate3d(2000px,0,0) scaleX(2)}}@keyframes bounceOutRight{20%{opacity:1;-webkit-transform:translate3d(-20px,0,0) scaleX(.9);transform:translate3d(-20px,0,0) scaleX(.9)}to{opacity:0;-webkit-transform:translate3d(2000px,0,0) scaleX(2);transform:translate3d(2000px,0,0) scaleX(2)}}.animate__bounceOutRight{-webkit-animation-name:bounceOutRight;animation-name:bounceOutRight}@-webkit-keyframes bounceOutUp{20%{-webkit-transform:translate3d(0,-10px,0) scaleY(.985);transform:translate3d(0,-10px,0) scaleY(.985)}40%,45%{opacity:1;-webkit-transform:translate3d(0,20px,0) scaleY(.9);transform:translate3d(0,20px,0) scaleY(.9)}to{opacity:0;-webkit-transform:translate3d(0,-2000px,0) scaleY(3);transform:translate3d(0,-2000px,0) scaleY(3)}}@keyframes bounceOutUp{20%{-webkit-transform:translate3d(0,-10px,0) scaleY(.985);transform:translate3d(0,-10px,0) scaleY(.985)}40%,45%{opacity:1;-webkit-transform:translate3d(0,20px,0) scaleY(.9);transform:translate3d(0,20px,0) scaleY(.9)}to{opacity:0;-webkit-transform:translate3d(0,-2000px,0) scaleY(3);transform:translate3d(0,-2000px,0) scaleY(3)}}.animate__bounceOutUp{-webkit-animation-name:bounceOutUp;animation-name:bounceOutUp}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.animate__fadeIn{-webkit-animation-name:fadeIn;animation-name:fadeIn}@-webkit-keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes fadeInDown{0%{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__fadeInDown{-webkit-animation-name:fadeInDown;animation-name:fadeInDown}@-webkit-keyframes fadeInDownBig{0%{opacity:0;-webkit-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes fadeInDownBig{0%{opacity:0;-webkit-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__fadeInDownBig{-webkit-animation-name:fadeInDownBig;animation-name:fadeInDownBig}@-webkit-keyframes fadeInLeft{0%{opacity:0;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes fadeInLeft{0%{opacity:0;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__fadeInLeft{-webkit-animation-name:fadeInLeft;animation-name:fadeInLeft}@-webkit-keyframes fadeInLeftBig{0%{opacity:0;-webkit-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes fadeInLeftBig{0%{opacity:0;-webkit-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__fadeInLeftBig{-webkit-animation-name:fadeInLeftBig;animation-name:fadeInLeftBig}@-webkit-keyframes fadeInRight{0%{opacity:0;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes fadeInRight{0%{opacity:0;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__fadeInRight{-webkit-animation-name:fadeInRight;animation-name:fadeInRight}@-webkit-keyframes fadeInRightBig{0%{opacity:0;-webkit-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes fadeInRightBig{0%{opacity:0;-webkit-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__fadeInRightBig{-webkit-animation-name:fadeInRightBig;animation-name:fadeInRightBig}@-webkit-keyframes fadeInUp{0%{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes fadeInUp{0%{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__fadeInUp{-webkit-animation-name:fadeInUp;animation-name:fadeInUp}@-webkit-keyframes fadeInUpBig{0%{opacity:0;-webkit-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes fadeInUpBig{0%{opacity:0;-webkit-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__fadeInUpBig{-webkit-animation-name:fadeInUpBig;animation-name:fadeInUpBig}@-webkit-keyframes fadeInTopLeft{0%{opacity:0;-webkit-transform:translate3d(-100%,-100%,0);transform:translate3d(-100%,-100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes fadeInTopLeft{0%{opacity:0;-webkit-transform:translate3d(-100%,-100%,0);transform:translate3d(-100%,-100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__fadeInTopLeft{-webkit-animation-name:fadeInTopLeft;animation-name:fadeInTopLeft}@-webkit-keyframes fadeInTopRight{0%{opacity:0;-webkit-transform:translate3d(100%,-100%,0);transform:translate3d(100%,-100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes fadeInTopRight{0%{opacity:0;-webkit-transform:translate3d(100%,-100%,0);transform:translate3d(100%,-100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__fadeInTopRight{-webkit-animation-name:fadeInTopRight;animation-name:fadeInTopRight}@-webkit-keyframes fadeInBottomLeft{0%{opacity:0;-webkit-transform:translate3d(-100%,100%,0);transform:translate3d(-100%,100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes fadeInBottomLeft{0%{opacity:0;-webkit-transform:translate3d(-100%,100%,0);transform:translate3d(-100%,100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__fadeInBottomLeft{-webkit-animation-name:fadeInBottomLeft;animation-name:fadeInBottomLeft}@-webkit-keyframes fadeInBottomRight{0%{opacity:0;-webkit-transform:translate3d(100%,100%,0);transform:translate3d(100%,100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes fadeInBottomRight{0%{opacity:0;-webkit-transform:translate3d(100%,100%,0);transform:translate3d(100%,100%,0)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__fadeInBottomRight{-webkit-animation-name:fadeInBottomRight;animation-name:fadeInBottomRight}@-webkit-keyframes fadeOut{0%{opacity:1}to{opacity:0}}@keyframes fadeOut{0%{opacity:1}to{opacity:0}}.animate__fadeOut{-webkit-animation-name:fadeOut;animation-name:fadeOut}@-webkit-keyframes fadeOutDown{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}}@keyframes fadeOutDown{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}}.animate__fadeOutDown{-webkit-animation-name:fadeOutDown;animation-name:fadeOutDown}@-webkit-keyframes fadeOutDownBig{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}}@keyframes fadeOutDownBig{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(0,2000px,0);transform:translate3d(0,2000px,0)}}.animate__fadeOutDownBig{-webkit-animation-name:fadeOutDownBig;animation-name:fadeOutDownBig}@-webkit-keyframes fadeOutLeft{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}@keyframes fadeOutLeft{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}.animate__fadeOutLeft{-webkit-animation-name:fadeOutLeft;animation-name:fadeOutLeft}@-webkit-keyframes fadeOutLeftBig{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}}@keyframes fadeOutLeftBig{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(-2000px,0,0);transform:translate3d(-2000px,0,0)}}.animate__fadeOutLeftBig{-webkit-animation-name:fadeOutLeftBig;animation-name:fadeOutLeftBig}@-webkit-keyframes fadeOutRight{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}}@keyframes fadeOutRight{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}}.animate__fadeOutRight{-webkit-animation-name:fadeOutRight;animation-name:fadeOutRight}@-webkit-keyframes fadeOutRightBig{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}}@keyframes fadeOutRightBig{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(2000px,0,0);transform:translate3d(2000px,0,0)}}.animate__fadeOutRightBig{-webkit-animation-name:fadeOutRightBig;animation-name:fadeOutRightBig}@-webkit-keyframes fadeOutUp{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}}@keyframes fadeOutUp{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}}.animate__fadeOutUp{-webkit-animation-name:fadeOutUp;animation-name:fadeOutUp}@-webkit-keyframes fadeOutUpBig{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}}@keyframes fadeOutUpBig{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(0,-2000px,0);transform:translate3d(0,-2000px,0)}}.animate__fadeOutUpBig{-webkit-animation-name:fadeOutUpBig;animation-name:fadeOutUpBig}@-webkit-keyframes fadeOutTopLeft{0%{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}to{opacity:0;-webkit-transform:translate3d(-100%,-100%,0);transform:translate3d(-100%,-100%,0)}}@keyframes fadeOutTopLeft{0%{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}to{opacity:0;-webkit-transform:translate3d(-100%,-100%,0);transform:translate3d(-100%,-100%,0)}}.animate__fadeOutTopLeft{-webkit-animation-name:fadeOutTopLeft;animation-name:fadeOutTopLeft}@-webkit-keyframes fadeOutTopRight{0%{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}to{opacity:0;-webkit-transform:translate3d(100%,-100%,0);transform:translate3d(100%,-100%,0)}}@keyframes fadeOutTopRight{0%{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}to{opacity:0;-webkit-transform:translate3d(100%,-100%,0);transform:translate3d(100%,-100%,0)}}.animate__fadeOutTopRight{-webkit-animation-name:fadeOutTopRight;animation-name:fadeOutTopRight}@-webkit-keyframes fadeOutBottomRight{0%{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}to{opacity:0;-webkit-transform:translate3d(100%,100%,0);transform:translate3d(100%,100%,0)}}@keyframes fadeOutBottomRight{0%{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}to{opacity:0;-webkit-transform:translate3d(100%,100%,0);transform:translate3d(100%,100%,0)}}.animate__fadeOutBottomRight{-webkit-animation-name:fadeOutBottomRight;animation-name:fadeOutBottomRight}@-webkit-keyframes fadeOutBottomLeft{0%{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}to{opacity:0;-webkit-transform:translate3d(-100%,100%,0);transform:translate3d(-100%,100%,0)}}@keyframes fadeOutBottomLeft{0%{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}to{opacity:0;-webkit-transform:translate3d(-100%,100%,0);transform:translate3d(-100%,100%,0)}}.animate__fadeOutBottomLeft{-webkit-animation-name:fadeOutBottomLeft;animation-name:fadeOutBottomLeft}@-webkit-keyframes flip{0%{-webkit-transform:perspective(400px) scaleX(1) translateZ(0) rotateY(-1turn);transform:perspective(400px) scaleX(1) translateZ(0) rotateY(-1turn);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(400px) scaleX(1) translateZ(150px) rotateY(-190deg);transform:perspective(400px) scaleX(1) translateZ(150px) rotateY(-190deg);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(400px) scaleX(1) translateZ(150px) rotateY(-170deg);transform:perspective(400px) scaleX(1) translateZ(150px) rotateY(-170deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(400px) scale3d(.95,.95,.95) translateZ(0) rotateY(0deg);transform:perspective(400px) scale3d(.95,.95,.95) translateZ(0) rotateY(0deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(400px) scaleX(1) translateZ(0) rotateY(0deg);transform:perspective(400px) scaleX(1) translateZ(0) rotateY(0deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}@keyframes flip{0%{-webkit-transform:perspective(400px) scaleX(1) translateZ(0) rotateY(-1turn);transform:perspective(400px) scaleX(1) translateZ(0) rotateY(-1turn);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}40%{-webkit-transform:perspective(400px) scaleX(1) translateZ(150px) rotateY(-190deg);transform:perspective(400px) scaleX(1) translateZ(150px) rotateY(-190deg);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}50%{-webkit-transform:perspective(400px) scaleX(1) translateZ(150px) rotateY(-170deg);transform:perspective(400px) scaleX(1) translateZ(150px) rotateY(-170deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}80%{-webkit-transform:perspective(400px) scale3d(.95,.95,.95) translateZ(0) rotateY(0deg);transform:perspective(400px) scale3d(.95,.95,.95) translateZ(0) rotateY(0deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}to{-webkit-transform:perspective(400px) scaleX(1) translateZ(0) rotateY(0deg);transform:perspective(400px) scaleX(1) translateZ(0) rotateY(0deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}}.animate__animated.animate__flip{-webkit-backface-visibility:visible;backface-visibility:visible;-webkit-animation-name:flip;animation-name:flip}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(400px) rotateX(90deg);transform:perspective(400px) rotateX(90deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotateX(-20deg);transform:perspective(400px) rotateX(-20deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotateX(10deg);transform:perspective(400px) rotateX(10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotateX(-5deg);transform:perspective(400px) rotateX(-5deg)}to{-webkit-transform:perspective(400px);transform:perspective(400px)}}@keyframes flipInX{0%{-webkit-transform:perspective(400px) rotateX(90deg);transform:perspective(400px) rotateX(90deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotateX(-20deg);transform:perspective(400px) rotateX(-20deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotateX(10deg);transform:perspective(400px) rotateX(10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotateX(-5deg);transform:perspective(400px) rotateX(-5deg)}to{-webkit-transform:perspective(400px);transform:perspective(400px)}}.animate__flipInX{-webkit-backface-visibility:visible!important;backface-visibility:visible!important;-webkit-animation-name:flipInX;animation-name:flipInX}@-webkit-keyframes flipInY{0%{-webkit-transform:perspective(400px) rotateY(90deg);transform:perspective(400px) rotateY(90deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotateY(-20deg);transform:perspective(400px) rotateY(-20deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotateY(10deg);transform:perspective(400px) rotateY(10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotateY(-5deg);transform:perspective(400px) rotateY(-5deg)}to{-webkit-transform:perspective(400px);transform:perspective(400px)}}@keyframes flipInY{0%{-webkit-transform:perspective(400px) rotateY(90deg);transform:perspective(400px) rotateY(90deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotateY(-20deg);transform:perspective(400px) rotateY(-20deg);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotateY(10deg);transform:perspective(400px) rotateY(10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotateY(-5deg);transform:perspective(400px) rotateY(-5deg)}to{-webkit-transform:perspective(400px);transform:perspective(400px)}}.animate__flipInY{-webkit-backface-visibility:visible!important;backface-visibility:visible!important;-webkit-animation-name:flipInY;animation-name:flipInY}@-webkit-keyframes flipOutX{0%{-webkit-transform:perspective(400px);transform:perspective(400px)}30%{-webkit-transform:perspective(400px) rotateX(-20deg);transform:perspective(400px) rotateX(-20deg);opacity:1}to{-webkit-transform:perspective(400px) rotateX(90deg);transform:perspective(400px) rotateX(90deg);opacity:0}}@keyframes flipOutX{0%{-webkit-transform:perspective(400px);transform:perspective(400px)}30%{-webkit-transform:perspective(400px) rotateX(-20deg);transform:perspective(400px) rotateX(-20deg);opacity:1}to{-webkit-transform:perspective(400px) rotateX(90deg);transform:perspective(400px) rotateX(90deg);opacity:0}}.animate__flipOutX{-webkit-animation-duration:.75s;animation-duration:.75s;-webkit-animation-duration:calc(var(--animate-duration)*0.75);animation-duration:calc(var(--animate-duration)*0.75);-webkit-animation-name:flipOutX;animation-name:flipOutX;-webkit-backface-visibility:visible!important;backface-visibility:visible!important}@-webkit-keyframes flipOutY{0%{-webkit-transform:perspective(400px);transform:perspective(400px)}30%{-webkit-transform:perspective(400px) rotateY(-15deg);transform:perspective(400px) rotateY(-15deg);opacity:1}to{-webkit-transform:perspective(400px) rotateY(90deg);transform:perspective(400px) rotateY(90deg);opacity:0}}@keyframes flipOutY{0%{-webkit-transform:perspective(400px);transform:perspective(400px)}30%{-webkit-transform:perspective(400px) rotateY(-15deg);transform:perspective(400px) rotateY(-15deg);opacity:1}to{-webkit-transform:perspective(400px) rotateY(90deg);transform:perspective(400px) rotateY(90deg);opacity:0}}.animate__flipOutY{-webkit-animation-duration:.75s;animation-duration:.75s;-webkit-animation-duration:calc(var(--animate-duration)*0.75);animation-duration:calc(var(--animate-duration)*0.75);-webkit-backface-visibility:visible!important;backface-visibility:visible!important;-webkit-animation-name:flipOutY;animation-name:flipOutY}@-webkit-keyframes lightSpeedInRight{0%{-webkit-transform:translate3d(100%,0,0) skewX(-30deg);transform:translate3d(100%,0,0) skewX(-30deg);opacity:0}60%{-webkit-transform:skewX(20deg);transform:skewX(20deg);opacity:1}80%{-webkit-transform:skewX(-5deg);transform:skewX(-5deg)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes lightSpeedInRight{0%{-webkit-transform:translate3d(100%,0,0) skewX(-30deg);transform:translate3d(100%,0,0) skewX(-30deg);opacity:0}60%{-webkit-transform:skewX(20deg);transform:skewX(20deg);opacity:1}80%{-webkit-transform:skewX(-5deg);transform:skewX(-5deg)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__lightSpeedInRight{-webkit-animation-name:lightSpeedInRight;animation-name:lightSpeedInRight;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes lightSpeedInLeft{0%{-webkit-transform:translate3d(-100%,0,0) skewX(30deg);transform:translate3d(-100%,0,0) skewX(30deg);opacity:0}60%{-webkit-transform:skewX(-20deg);transform:skewX(-20deg);opacity:1}80%{-webkit-transform:skewX(5deg);transform:skewX(5deg)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes lightSpeedInLeft{0%{-webkit-transform:translate3d(-100%,0,0) skewX(30deg);transform:translate3d(-100%,0,0) skewX(30deg);opacity:0}60%{-webkit-transform:skewX(-20deg);transform:skewX(-20deg);opacity:1}80%{-webkit-transform:skewX(5deg);transform:skewX(5deg)}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__lightSpeedInLeft{-webkit-animation-name:lightSpeedInLeft;animation-name:lightSpeedInLeft;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes lightSpeedOutRight{0%{opacity:1}to{-webkit-transform:translate3d(100%,0,0) skewX(30deg);transform:translate3d(100%,0,0) skewX(30deg);opacity:0}}@keyframes lightSpeedOutRight{0%{opacity:1}to{-webkit-transform:translate3d(100%,0,0) skewX(30deg);transform:translate3d(100%,0,0) skewX(30deg);opacity:0}}.animate__lightSpeedOutRight{-webkit-animation-name:lightSpeedOutRight;animation-name:lightSpeedOutRight;-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}@-webkit-keyframes lightSpeedOutLeft{0%{opacity:1}to{-webkit-transform:translate3d(-100%,0,0) skewX(-30deg);transform:translate3d(-100%,0,0) skewX(-30deg);opacity:0}}@keyframes lightSpeedOutLeft{0%{opacity:1}to{-webkit-transform:translate3d(-100%,0,0) skewX(-30deg);transform:translate3d(-100%,0,0) skewX(-30deg);opacity:0}}.animate__lightSpeedOutLeft{-webkit-animation-name:lightSpeedOutLeft;animation-name:lightSpeedOutLeft;-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}@-webkit-keyframes rotateIn{0%{-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform:translateZ(0);transform:translateZ(0);opacity:1}}@keyframes rotateIn{0%{-webkit-transform:rotate(-200deg);transform:rotate(-200deg);opacity:0}to{-webkit-transform:translateZ(0);transform:translateZ(0);opacity:1}}.animate__rotateIn{-webkit-animation-name:rotateIn;animation-name:rotateIn;-webkit-transform-origin:center;transform-origin:center}@-webkit-keyframes rotateInDownLeft{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);opacity:0}to{-webkit-transform:translateZ(0);transform:translateZ(0);opacity:1}}@keyframes rotateInDownLeft{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);opacity:0}to{-webkit-transform:translateZ(0);transform:translateZ(0);opacity:1}}.animate__rotateInDownLeft{-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft;-webkit-transform-origin:left bottom;transform-origin:left bottom}@-webkit-keyframes rotateInDownRight{0%{-webkit-transform:rotate(45deg);transform:rotate(45deg);opacity:0}to{-webkit-transform:translateZ(0);transform:translateZ(0);opacity:1}}@keyframes rotateInDownRight{0%{-webkit-transform:rotate(45deg);transform:rotate(45deg);opacity:0}to{-webkit-transform:translateZ(0);transform:translateZ(0);opacity:1}}.animate__rotateInDownRight{-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight;-webkit-transform-origin:right bottom;transform-origin:right bottom}@-webkit-keyframes rotateInUpLeft{0%{-webkit-transform:rotate(45deg);transform:rotate(45deg);opacity:0}to{-webkit-transform:translateZ(0);transform:translateZ(0);opacity:1}}@keyframes rotateInUpLeft{0%{-webkit-transform:rotate(45deg);transform:rotate(45deg);opacity:0}to{-webkit-transform:translateZ(0);transform:translateZ(0);opacity:1}}.animate__rotateInUpLeft{-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft;-webkit-transform-origin:left bottom;transform-origin:left bottom}@-webkit-keyframes rotateInUpRight{0%{-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform:translateZ(0);transform:translateZ(0);opacity:1}}@keyframes rotateInUpRight{0%{-webkit-transform:rotate(-90deg);transform:rotate(-90deg);opacity:0}to{-webkit-transform:translateZ(0);transform:translateZ(0);opacity:1}}.animate__rotateInUpRight{-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight;-webkit-transform-origin:right bottom;transform-origin:right bottom}@-webkit-keyframes rotateOut{0%{opacity:1}to{-webkit-transform:rotate(200deg);transform:rotate(200deg);opacity:0}}@keyframes rotateOut{0%{opacity:1}to{-webkit-transform:rotate(200deg);transform:rotate(200deg);opacity:0}}.animate__rotateOut{-webkit-animation-name:rotateOut;animation-name:rotateOut;-webkit-transform-origin:center;transform-origin:center}@-webkit-keyframes rotateOutDownLeft{0%{opacity:1}to{-webkit-transform:rotate(45deg);transform:rotate(45deg);opacity:0}}@keyframes rotateOutDownLeft{0%{opacity:1}to{-webkit-transform:rotate(45deg);transform:rotate(45deg);opacity:0}}.animate__rotateOutDownLeft{-webkit-animation-name:rotateOutDownLeft;animation-name:rotateOutDownLeft;-webkit-transform-origin:left bottom;transform-origin:left bottom}@-webkit-keyframes rotateOutDownRight{0%{opacity:1}to{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);opacity:0}}@keyframes rotateOutDownRight{0%{opacity:1}to{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);opacity:0}}.animate__rotateOutDownRight{-webkit-animation-name:rotateOutDownRight;animation-name:rotateOutDownRight;-webkit-transform-origin:right bottom;transform-origin:right bottom}@-webkit-keyframes rotateOutUpLeft{0%{opacity:1}to{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);opacity:0}}@keyframes rotateOutUpLeft{0%{opacity:1}to{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);opacity:0}}.animate__rotateOutUpLeft{-webkit-animation-name:rotateOutUpLeft;animation-name:rotateOutUpLeft;-webkit-transform-origin:left bottom;transform-origin:left bottom}@-webkit-keyframes rotateOutUpRight{0%{opacity:1}to{-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}}@keyframes rotateOutUpRight{0%{opacity:1}to{-webkit-transform:rotate(90deg);transform:rotate(90deg);opacity:0}}.animate__rotateOutUpRight{-webkit-animation-name:rotateOutUpRight;animation-name:rotateOutUpRight;-webkit-transform-origin:right bottom;transform-origin:right bottom}@-webkit-keyframes hinge{0%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}20%,60%{-webkit-transform:rotate(80deg);transform:rotate(80deg);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}40%,80%{-webkit-transform:rotate(60deg);transform:rotate(60deg);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:1}to{-webkit-transform:translate3d(0,700px,0);transform:translate3d(0,700px,0);opacity:0}}@keyframes hinge{0%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}20%,60%{-webkit-transform:rotate(80deg);transform:rotate(80deg);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}40%,80%{-webkit-transform:rotate(60deg);transform:rotate(60deg);-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:1}to{-webkit-transform:translate3d(0,700px,0);transform:translate3d(0,700px,0);opacity:0}}.animate__hinge{-webkit-animation-duration:2s;animation-duration:2s;-webkit-animation-duration:calc(var(--animate-duration)*2);animation-duration:calc(var(--animate-duration)*2);-webkit-animation-name:hinge;animation-name:hinge;-webkit-transform-origin:top left;transform-origin:top left}@-webkit-keyframes jackInTheBox{0%{opacity:0;-webkit-transform:scale(.1) rotate(30deg);transform:scale(.1) rotate(30deg);-webkit-transform-origin:center bottom;transform-origin:center bottom}50%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}70%{-webkit-transform:rotate(3deg);transform:rotate(3deg)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes jackInTheBox{0%{opacity:0;-webkit-transform:scale(.1) rotate(30deg);transform:scale(.1) rotate(30deg);-webkit-transform-origin:center bottom;transform-origin:center bottom}50%{-webkit-transform:rotate(-10deg);transform:rotate(-10deg)}70%{-webkit-transform:rotate(3deg);transform:rotate(3deg)}to{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}.animate__jackInTheBox{-webkit-animation-name:jackInTheBox;animation-name:jackInTheBox}@-webkit-keyframes rollIn{0%{opacity:0;-webkit-transform:translate3d(-100%,0,0) rotate(-120deg);transform:translate3d(-100%,0,0) rotate(-120deg)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes rollIn{0%{opacity:0;-webkit-transform:translate3d(-100%,0,0) rotate(-120deg);transform:translate3d(-100%,0,0) rotate(-120deg)}to{opacity:1;-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__rollIn{-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rollOut{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(100%,0,0) rotate(120deg);transform:translate3d(100%,0,0) rotate(120deg)}}@keyframes rollOut{0%{opacity:1}to{opacity:0;-webkit-transform:translate3d(100%,0,0) rotate(120deg);transform:translate3d(100%,0,0) rotate(120deg)}}.animate__rollOut{-webkit-animation-name:rollOut;animation-name:rollOut}@-webkit-keyframes zoomIn{0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}50%{opacity:1}}@keyframes zoomIn{0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}50%{opacity:1}}.animate__zoomIn{-webkit-animation-name:zoomIn;animation-name:zoomIn}@-webkit-keyframes zoomInDown{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,-1000px,0);transform:scale3d(.1,.1,.1) translate3d(0,-1000px,0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,60px,0);transform:scale3d(.475,.475,.475) translate3d(0,60px,0);-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1)}}@keyframes zoomInDown{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,-1000px,0);transform:scale3d(.1,.1,.1) translate3d(0,-1000px,0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,60px,0);transform:scale3d(.475,.475,.475) translate3d(0,60px,0);-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1)}}.animate__zoomInDown{-webkit-animation-name:zoomInDown;animation-name:zoomInDown}@-webkit-keyframes zoomInLeft{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(-1000px,0,0);transform:scale3d(.1,.1,.1) translate3d(-1000px,0,0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(10px,0,0);transform:scale3d(.475,.475,.475) translate3d(10px,0,0);-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1)}}@keyframes zoomInLeft{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(-1000px,0,0);transform:scale3d(.1,.1,.1) translate3d(-1000px,0,0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(10px,0,0);transform:scale3d(.475,.475,.475) translate3d(10px,0,0);-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1)}}.animate__zoomInLeft{-webkit-animation-name:zoomInLeft;animation-name:zoomInLeft}@-webkit-keyframes zoomInRight{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(1000px,0,0);transform:scale3d(.1,.1,.1) translate3d(1000px,0,0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(-10px,0,0);transform:scale3d(.475,.475,.475) translate3d(-10px,0,0);-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1)}}@keyframes zoomInRight{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(1000px,0,0);transform:scale3d(.1,.1,.1) translate3d(1000px,0,0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(-10px,0,0);transform:scale3d(.475,.475,.475) translate3d(-10px,0,0);-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1)}}.animate__zoomInRight{-webkit-animation-name:zoomInRight;animation-name:zoomInRight}@-webkit-keyframes zoomInUp{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,1000px,0);transform:scale3d(.1,.1,.1) translate3d(0,1000px,0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1)}}@keyframes zoomInUp{0%{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,1000px,0);transform:scale3d(.1,.1,.1) translate3d(0,1000px,0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}60%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1)}}.animate__zoomInUp{-webkit-animation-name:zoomInUp;animation-name:zoomInUp}@-webkit-keyframes zoomOut{0%{opacity:1}50%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}to{opacity:0}}@keyframes zoomOut{0%{opacity:1}50%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}to{opacity:0}}.animate__zoomOut{-webkit-animation-name:zoomOut;animation-name:zoomOut}@-webkit-keyframes zoomOutDown{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}to{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,2000px,0);transform:scale3d(.1,.1,.1) translate3d(0,2000px,0);-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1)}}@keyframes zoomOutDown{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);transform:scale3d(.475,.475,.475) translate3d(0,-60px,0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}to{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,2000px,0);transform:scale3d(.1,.1,.1) translate3d(0,2000px,0);-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1)}}.animate__zoomOutDown{-webkit-animation-name:zoomOutDown;animation-name:zoomOutDown;-webkit-transform-origin:center bottom;transform-origin:center bottom}@-webkit-keyframes zoomOutLeft{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(42px,0,0);transform:scale3d(.475,.475,.475) translate3d(42px,0,0)}to{opacity:0;-webkit-transform:scale(.1) translate3d(-2000px,0,0);transform:scale(.1) translate3d(-2000px,0,0)}}@keyframes zoomOutLeft{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(42px,0,0);transform:scale3d(.475,.475,.475) translate3d(42px,0,0)}to{opacity:0;-webkit-transform:scale(.1) translate3d(-2000px,0,0);transform:scale(.1) translate3d(-2000px,0,0)}}.animate__zoomOutLeft{-webkit-animation-name:zoomOutLeft;animation-name:zoomOutLeft;-webkit-transform-origin:left center;transform-origin:left center}@-webkit-keyframes zoomOutRight{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(-42px,0,0);transform:scale3d(.475,.475,.475) translate3d(-42px,0,0)}to{opacity:0;-webkit-transform:scale(.1) translate3d(2000px,0,0);transform:scale(.1) translate3d(2000px,0,0)}}@keyframes zoomOutRight{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(-42px,0,0);transform:scale3d(.475,.475,.475) translate3d(-42px,0,0)}to{opacity:0;-webkit-transform:scale(.1) translate3d(2000px,0,0);transform:scale(.1) translate3d(2000px,0,0)}}.animate__zoomOutRight{-webkit-animation-name:zoomOutRight;animation-name:zoomOutRight;-webkit-transform-origin:right center;transform-origin:right center}@-webkit-keyframes zoomOutUp{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,60px,0);transform:scale3d(.475,.475,.475) translate3d(0,60px,0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}to{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,-2000px,0);transform:scale3d(.1,.1,.1) translate3d(0,-2000px,0);-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1)}}@keyframes zoomOutUp{40%{opacity:1;-webkit-transform:scale3d(.475,.475,.475) translate3d(0,60px,0);transform:scale3d(.475,.475,.475) translate3d(0,60px,0);-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19)}to{opacity:0;-webkit-transform:scale3d(.1,.1,.1) translate3d(0,-2000px,0);transform:scale3d(.1,.1,.1) translate3d(0,-2000px,0);-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1)}}.animate__zoomOutUp{-webkit-animation-name:zoomOutUp;animation-name:zoomOutUp;-webkit-transform-origin:center bottom;transform-origin:center bottom}@-webkit-keyframes slideInDown{0%{-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0);visibility:visible}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes slideInDown{0%{-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0);visibility:visible}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__slideInDown{-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0);visibility:visible}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes slideInLeft{0%{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0);visibility:visible}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__slideInLeft{-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0);visibility:visible}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes slideInRight{0%{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0);visibility:visible}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__slideInRight{-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes slideInUp{0%{-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0);visibility:visible}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}@keyframes slideInUp{0%{-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0);visibility:visible}to{-webkit-transform:translateZ(0);transform:translateZ(0)}}.animate__slideInUp{-webkit-animation-name:slideInUp;animation-name:slideInUp}@-webkit-keyframes slideOutDown{0%{-webkit-transform:translateZ(0);transform:translateZ(0)}to{visibility:hidden;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}}@keyframes slideOutDown{0%{-webkit-transform:translateZ(0);transform:translateZ(0)}to{visibility:hidden;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}}.animate__slideOutDown{-webkit-animation-name:slideOutDown;animation-name:slideOutDown}@-webkit-keyframes slideOutLeft{0%{-webkit-transform:translateZ(0);transform:translateZ(0)}to{visibility:hidden;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}@keyframes slideOutLeft{0%{-webkit-transform:translateZ(0);transform:translateZ(0)}to{visibility:hidden;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}}.animate__slideOutLeft{-webkit-animation-name:slideOutLeft;animation-name:slideOutLeft}@-webkit-keyframes slideOutRight{0%{-webkit-transform:translateZ(0);transform:translateZ(0)}to{visibility:hidden;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}}@keyframes slideOutRight{0%{-webkit-transform:translateZ(0);transform:translateZ(0)}to{visibility:hidden;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}}.animate__slideOutRight{-webkit-animation-name:slideOutRight;animation-name:slideOutRight}@-webkit-keyframes slideOutUp{0%{-webkit-transform:translateZ(0);transform:translateZ(0)}to{visibility:hidden;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}}@keyframes slideOutUp{0%{-webkit-transform:translateZ(0);transform:translateZ(0)}to{visibility:hidden;-webkit-transform:translate3d(0,-100%,0);transform:translate3d(0,-100%,0)}}.animate__slideOutUp{-webkit-animation-name:slideOutUp;animation-name:slideOutUp}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Niord的AI绘图画廊</title>
      <link href="/gallery/AIsd/index.html"/>
      <url>/gallery/AIsd/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><div class="fj-gallery"><p><img src="https://s2.loli.net/2023/04/20/mXHuZh9VLgqotJx.png" alt=""><br><img src="https://s2.loli.net/2023/04/20/UiRxbK1OWwfjpDk.png" alt=""><br><img src="https://s2.loli.net/2023/04/20/qBYhavL8yPrGUXW.png" alt=""><br><img src="https://s2.loli.net/2023/04/20/jKd1OkyMWXib24z.png" alt=""><br><img src="https://s2.loli.net/2023/04/20/dW9LaGeFXi5VYqO.png" alt=""><br><img src="https://s2.loli.net/2023/04/20/qOyP3badI6ZclTC.png" alt=""><br><img src="https://s2.loli.net/2023/05/29/YCIfHjvxoTUXrkL.png" alt=""></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/wowjs/wow.min.js"/>
      <url>/js/wowjs/wow.min.js</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>/*! WOW wow.js - v1.3.0 - 2016-10-04* https://wowjs.uk* Copyright (c) 2016 Thomas Grainger; Licensed MIT */!function(a,b){if("function"==typeof define&&define.amd)define(["module","exports"],b);else if("undefined"!=typeof exports)b(module,exports);else{var c={exports:{}};b(c,c.exports),a.WOW=c.exports}}(this,function(a,b){"use strict";function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function d(a,b){return b.indexOf(a)>=0}function e(a,b){for(var c in b)if(null==a[c]){var d=b[c];a[c]=d}return a}function f(a){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(a)}function g(a){var b=arguments.length<=1||void 0===arguments[1]?!1:arguments[1],c=arguments.length<=2||void 0===arguments[2]?!1:arguments[2],d=arguments.length<=3||void 0===arguments[3]?null:arguments[3],e=void 0;return null!=document.createEvent?(e=document.createEvent("CustomEvent"),e.initCustomEvent(a,b,c,d)):null!=document.createEventObject?(e=document.createEventObject(),e.eventType=a):e.eventName=a,e}function h(a,b){null!=a.dispatchEvent?a.dispatchEvent(b):b in(null!=a)?a[b]():"on"+b in(null!=a)&&a["on"+b]()}function i(a,b,c){null!=a.addEventListener?a.addEventListener(b,c,!1):null!=a.attachEvent?a.attachEvent("on"+b,c):a[b]=c}function j(a,b,c){null!=a.removeEventListener?a.removeEventListener(b,c,!1):null!=a.detachEvent?a.detachEvent("on"+b,c):delete a[b]}function k(){return"innerHeight"in window?window.innerHeight:document.documentElement.clientHeight}Object.defineProperty(b,"__esModule",{value:!0});var l,m,n=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),o=window.WeakMap||window.MozWeakMap||function(){function a(){c(this,a),this.keys=[],this.values=[]}return n(a,[{key:"get",value:function(a){for(var b=0;b<this.keys.length;b++){var c=this.keys[b];if(c===a)return this.values[b]}}},{key:"set",value:function(a,b){for(var c=0;c<this.keys.length;c++){var d=this.keys[c];if(d===a)return this.values[c]=b,this}return this.keys.push(a),this.values.push(b),this}}]),a}(),p=window.MutationObserver||window.WebkitMutationObserver||window.MozMutationObserver||(m=l=function(){function a(){c(this,a),"undefined"!=typeof console&&null!==console&&(console.warn("MutationObserver is not supported by your browser."),console.warn("WOW.js cannot detect dom mutations, please call .sync() after loading new content."))}return n(a,[{key:"observe",value:function(){}}]),a}(),l.notSupported=!0,m),q=window.getComputedStyle||function(a){var b=/(\-([a-z]){1})/g;return{getPropertyValue:function(c){"float"===c&&(c="styleFloat"),b.test(c)&&c.replace(b,function(a,b){return b.toUpperCase()});var d=a.currentStyle;return(null!=d?d[c]:void 0)||null}}},r=function(){function a(){var b=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];c(this,a),this.defaults={boxClass:"wow",animateClass:"animated",offset:0,mobile:!0,live:!0,callback:null,scrollContainer:null,resetAnimation:!0},this.animate=function(){return"requestAnimationFrame"in window?function(a){return window.requestAnimationFrame(a)}:function(a){return a()}}(),this.vendors=["moz","webkit"],this.start=this.start.bind(this),this.resetAnimation=this.resetAnimation.bind(this),this.scrollHandler=this.scrollHandler.bind(this),this.scrollCallback=this.scrollCallback.bind(this),this.scrolled=!0,this.config=e(b,this.defaults),null!=b.scrollContainer&&(this.config.scrollContainer=document.querySelector(b.scrollContainer)),this.animationNameCache=new o,this.wowEvent=g(this.config.boxClass)}return n(a,[{key:"init",value:function(){this.element=window.document.documentElement,d(document.readyState,["interactive","complete"])?this.start():i(document,"DOMContentLoaded",this.start),this.finished=[]}},{key:"start",value:function(){var a=this;if(this.stopped=!1,this.boxes=[].slice.call(this.element.querySelectorAll("."+this.config.boxClass)),this.all=this.boxes.slice(0),this.boxes.length)if(this.disabled())this.resetStyle();else for(var b=0;b<this.boxes.length;b++){var c=this.boxes[b];this.applyStyle(c,!0)}if(this.disabled()||(i(this.config.scrollContainer||window,"scroll",this.scrollHandler),i(window,"resize",this.scrollHandler),this.interval=setInterval(this.scrollCallback,50)),this.config.live){var d=new p(function(b){for(var c=0;c<b.length;c++)for(var d=b[c],e=0;e<d.addedNodes.length;e++){var f=d.addedNodes[e];a.doSync(f)}});d.observe(document.body,{childList:!0,subtree:!0})}}},{key:"stop",value:function(){this.stopped=!0,j(this.config.scrollContainer||window,"scroll",this.scrollHandler),j(window,"resize",this.scrollHandler),null!=this.interval&&clearInterval(this.interval)}},{key:"sync",value:function(){p.notSupported&&this.doSync(this.element)}},{key:"doSync",value:function(a){if("undefined"!=typeof a&&null!==a||(a=this.element),1===a.nodeType){a=a.parentNode||a;for(var b=a.querySelectorAll("."+this.config.boxClass),c=0;c<b.length;c++){var e=b[c];d(e,this.all)||(this.boxes.push(e),this.all.push(e),this.stopped||this.disabled()?this.resetStyle():this.applyStyle(e,!0),this.scrolled=!0)}}}},{key:"show",value:function(a){return this.applyStyle(a),a.className=a.className+" "+this.config.animateClass,null!=this.config.callback&&this.config.callback(a),h(a,this.wowEvent),this.config.resetAnimation&&(i(a,"animationend",this.resetAnimation),i(a,"oanimationend",this.resetAnimation),i(a,"webkitAnimationEnd",this.resetAnimation),i(a,"MSAnimationEnd",this.resetAnimation)),a}},{key:"applyStyle",value:function(a,b){var c=this,d=a.getAttribute("data-wow-duration"),e=a.getAttribute("data-wow-delay"),f=a.getAttribute("data-wow-iteration");return this.animate(function(){return c.customStyle(a,b,d,e,f)})}},{key:"resetStyle",value:function(){for(var a=0;a<this.boxes.length;a++){var b=this.boxes[a];b.style.visibility="visible"}}},{key:"resetAnimation",value:function(a){if(a.type.toLowerCase().indexOf("animationend")>=0){var b=a.target||a.srcElement;b.className=b.className.replace(this.config.animateClass,"").trim()}}},{key:"customStyle",value:function(a,b,c,d,e){return b&&this.cacheAnimationName(a),a.style.visibility=b?"hidden":"visible",c&&this.vendorSet(a.style,{animationDuration:c}),d&&this.vendorSet(a.style,{animationDelay:d}),e&&this.vendorSet(a.style,{animationIterationCount:e}),this.vendorSet(a.style,{animationName:b?"none":this.cachedAnimationName(a)}),a}},{key:"vendorSet",value:function(a,b){for(var c in b)if(b.hasOwnProperty(c)){var d=b[c];a[""+c]=d;for(var e=0;e<this.vendors.length;e++){var f=this.vendors[e];a[""+f+c.charAt(0).toUpperCase()+c.substr(1)]=d}}}},{key:"vendorCSS",value:function(a,b){for(var c=q(a),d=c.getPropertyCSSValue(b),e=0;e<this.vendors.length;e++){var f=this.vendors[e];d=d||c.getPropertyCSSValue("-"+f+"-"+b)}return d}},{key:"animationName",value:function(a){var b=void 0;try{b=this.vendorCSS(a,"animation-name").cssText}catch(c){b=q(a).getPropertyValue("animation-name")}return"none"===b?"":b}},{key:"cacheAnimationName",value:function(a){return this.animationNameCache.set(a,this.animationName(a))}},{key:"cachedAnimationName",value:function(a){return this.animationNameCache.get(a)}},{key:"scrollHandler",value:function(){this.scrolled=!0}},{key:"scrollCallback",value:function(){if(this.scrolled){this.scrolled=!1;for(var a=[],b=0;b<this.boxes.length;b++){var c=this.boxes[b];if(c){if(this.isVisible(c)){this.show(c);continue}a.push(c)}}this.boxes=a,this.boxes.length||this.config.live||this.stop()}}},{key:"offsetTop",value:function(a){for(;void 0===a.offsetTop;)a=a.parentNode;for(var b=a.offsetTop;a.offsetParent;)a=a.offsetParent,b+=a.offsetTop;return b}},{key:"isVisible",value:function(a){var b=a.getAttribute("data-wow-offset")||this.config.offset,c=this.config.scrollContainer&&this.config.scrollContainer.scrollTop||window.pageYOffset,d=c+Math.min(this.element.clientHeight,k())-b,e=this.offsetTop(a),f=e+a.clientHeight;return d>=e&&f>=c}},{key:"disabled",value:function(){return!this.config.mobile&&f(navigator.userAgent)}}]),a}();b["default"]=r,a.exports=b["default"]});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/bp/swiperbdage_init.min.js"/>
      <url>/js/bp/swiperbdage_init.min.js</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>/** * Minified by jsDelivr using Terser v5.9.0. * Original file: /npm/hexo-butterfly-footer-beautify@1.0.5/lib/swiperbdage_init.js * * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files */var bdageswiper=new Swiper("#ghbdages",{direction:"vertical",passiveListeners:!0,spaceBetween:30,loop:!0,autoplay:{disableOnInteraction:!0,delay:1500},mousewheel:!0}),ghbdage=document.getElementById("ghbdages");ghbdage.onmouseenter=function(){bdageswiper.autoplay.stop()},ghbdage.onmouseleave=function(){bdageswiper.autoplay.start()};//# sourceMappingURL=/sm/19ff7cf915661958cf966ce6c304ed262ecb1d20f6a25918fded87f4163483df.map]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/bp/swiper.min.js"/>
      <url>/js/bp/swiper.min.js</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>/** * Swiper 4.1.6 * Most modern mobile touch slider and framework with hardware accelerated transitions * http://www.idangero.us/swiper/ * * Copyright 2014-2018 Vladimir Kharlampidi * * Released under the MIT License * * Released on: February 11, 2018 */!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Swiper=t()}(this,function(){"use strict";var e="undefined"==typeof document?{body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},location:{hash:""}}:document,t="undefined"==typeof window?{document:e,navigator:{userAgent:""},location:{},history:{},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){}}:window,i=function(e){for(var t=0;t<e.length;t+=1)this[t]=e[t];return this.length=e.length,this};function s(s,a){var r=[],n=0;if(s&&!a&&s instanceof i)return s;if(s)if("string"==typeof s){var o,l,d=s.trim();if(d.indexOf("<")>=0&&d.indexOf(">")>=0){var h="div";for(0===d.indexOf("<li")&&(h="ul"),0===d.indexOf("<tr")&&(h="tbody"),0!==d.indexOf("<td")&&0!==d.indexOf("<th")||(h="tr"),0===d.indexOf("<tbody")&&(h="table"),0===d.indexOf("<option")&&(h="select"),(l=e.createElement(h)).innerHTML=d,n=0;n<l.childNodes.length;n+=1)r.push(l.childNodes[n])}else for(o=a||"#"!==s[0]||s.match(/[ .<>:~]/)?(a||e).querySelectorAll(s.trim()):[e.getElementById(s.trim().split("#")[1])],n=0;n<o.length;n+=1)o[n]&&r.push(o[n])}else if(s.nodeType||s===t||s===e)r.push(s);else if(s.length>0&&s[0].nodeType)for(n=0;n<s.length;n+=1)r.push(s[n]);return new i(r)}function a(e){for(var t=[],i=0;i<e.length;i+=1)-1===t.indexOf(e[i])&&t.push(e[i]);return t}s.fn=i.prototype,s.Class=i,s.Dom7=i;"resize scroll".split(" ");var r={addClass:function(e){if(void 0===e)return this;for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s].classList&&this[s].classList.add(t[i]);return this},removeClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s].classList&&this[s].classList.remove(t[i]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var s=0;s<this.length;s+=1)void 0!==this[s].classList&&this[s].classList.toggle(t[i]);return this},attr:function(e,t){var i=arguments;if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var s=0;s<this.length;s+=1)if(2===i.length)this[s].setAttribute(e,t);else for(var a in e)this[s][a]=e[a],this[s].setAttribute(a,e[a]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},data:function(e,t){var i;if(void 0!==t){for(var s=0;s<this.length;s+=1)(i=this[s]).dom7ElementDataStorage||(i.dom7ElementDataStorage={}),i.dom7ElementDataStorage[e]=t;return this}if(i=this[0]){if(i.dom7ElementDataStorage&&e in i.dom7ElementDataStorage)return i.dom7ElementDataStorage[e];var a=i.getAttribute("data-"+e);return a||void 0}},transform:function(e){for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransform=e,i.transform=e}return this},transition:function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransitionDuration=e,i.transitionDuration=e}return this},on:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,a=e[0],r=e[1],n=e[2],o=e[3];function l(e){var t=e.target;if(t){var i=e.target.dom7EventData||[];if(i.unshift(e),s(t).is(r))n.apply(t,i);else for(var a=s(t).parents(),o=0;o<a.length;o+=1)s(a[o]).is(r)&&n.apply(a[o],i)}}function d(e){var t=e&&e.target?e.target.dom7EventData||[]:[];t.unshift(e),n.apply(this,t)}"function"==typeof e[1]&&(a=(i=e)[0],n=i[1],o=i[2],r=void 0),o||(o=!1);for(var h,p=a.split(" "),c=0;c<this.length;c+=1){var u=this[c];if(r)for(h=0;h<p.length;h+=1)u.dom7LiveListeners||(u.dom7LiveListeners=[]),u.dom7LiveListeners.push({type:a,listener:n,proxyListener:l}),u.addEventListener(p[h],l,o);else for(h=0;h<p.length;h+=1)u.dom7Listeners||(u.dom7Listeners=[]),u.dom7Listeners.push({type:a,listener:n,proxyListener:d}),u.addEventListener(p[h],d,o)}return this},off:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,s=e[0],a=e[1],r=e[2],n=e[3];"function"==typeof e[1]&&(s=(i=e)[0],r=i[1],n=i[2],a=void 0),n||(n=!1);for(var o=s.split(" "),l=0;l<o.length;l+=1)for(var d=0;d<this.length;d+=1){var h=this[d];if(a){if(h.dom7LiveListeners)for(var p=0;p<h.dom7LiveListeners.length;p+=1)r?h.dom7LiveListeners[p].listener===r&&h.removeEventListener(o[l],h.dom7LiveListeners[p].proxyListener,n):h.dom7LiveListeners[p].type===o[l]&&h.removeEventListener(o[l],h.dom7LiveListeners[p].proxyListener,n)}else if(h.dom7Listeners)for(var c=0;c<h.dom7Listeners.length;c+=1)r?h.dom7Listeners[c].listener===r&&h.removeEventListener(o[l],h.dom7Listeners[c].proxyListener,n):h.dom7Listeners[c].type===o[l]&&h.removeEventListener(o[l],h.dom7Listeners[c].proxyListener,n)}return this},trigger:function(){for(var i=[],s=arguments.length;s--;)i[s]=arguments[s];for(var a=i[0].split(" "),r=i[1],n=0;n<a.length;n+=1)for(var o=0;o<this.length;o+=1){var l=void 0;try{l=new t.CustomEvent(a[n],{detail:r,bubbles:!0,cancelable:!0})}catch(t){(l=e.createEvent("Event")).initEvent(a[n],!0,!0),l.detail=r}this[o].dom7EventData=i.filter(function(e,t){return t>0}),this[o].dispatchEvent(l),this[o].dom7EventData=[],delete this[o].dom7EventData}return this},transitionEnd:function(e){var t,i=["webkitTransitionEnd","transitionend"],s=this;function a(r){if(r.target===this)for(e.call(this,r),t=0;t<i.length;t+=1)s.off(i[t],a)}if(e)for(t=0;t<i.length;t+=1)s.on(i[t],a);return this},outerWidth:function(e){if(this.length>0){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(this.length>0){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},offset:function(){if(this.length>0){var i=this[0],s=i.getBoundingClientRect(),a=e.body,r=i.clientTop||a.clientTop||0,n=i.clientLeft||a.clientLeft||0,o=i===t?t.scrollY:i.scrollTop,l=i===t?t.scrollX:i.scrollLeft;return{top:s.top+o-r,left:s.left+l-n}}return null},css:function(e,i){var s;if(1===arguments.length){if("string"!=typeof e){for(s=0;s<this.length;s+=1)for(var a in e)this[s].style[a]=e[a];return this}if(this[0])return t.getComputedStyle(this[0],null).getPropertyValue(e)}if(2===arguments.length&&"string"==typeof e){for(s=0;s<this.length;s+=1)this[s].style[e]=i;return this}return this},each:function(e){if(!e)return this;for(var t=0;t<this.length;t+=1)if(!1===e.call(this[t],t,this[t]))return this;return this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(a){var r,n,o=this[0];if(!o||void 0===a)return!1;if("string"==typeof a){if(o.matches)return o.matches(a);if(o.webkitMatchesSelector)return o.webkitMatchesSelector(a);if(o.msMatchesSelector)return o.msMatchesSelector(a);for(r=s(a),n=0;n<r.length;n+=1)if(r[n]===o)return!0;return!1}if(a===e)return o===e;if(a===t)return o===t;if(a.nodeType||a instanceof i){for(r=a.nodeType?[a]:a,n=0;n<r.length;n+=1)if(r[n]===o)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t,s=this.length;return new i(e>s-1?[]:e<0?(t=s+e)<0?[]:[this[t]]:[this[e]])},append:function(){for(var t,s=[],a=arguments.length;a--;)s[a]=arguments[a];for(var r=0;r<s.length;r+=1){t=s[r];for(var n=0;n<this.length;n+=1)if("string"==typeof t){var o=e.createElement("div");for(o.innerHTML=t;o.firstChild;)this[n].appendChild(o.firstChild)}else if(t instanceof i)for(var l=0;l<t.length;l+=1)this[n].appendChild(t[l]);else this[n].appendChild(t)}return this},prepend:function(t){var s,a;for(s=0;s<this.length;s+=1)if("string"==typeof t){var r=e.createElement("div");for(r.innerHTML=t,a=r.childNodes.length-1;a>=0;a-=1)this[s].insertBefore(r.childNodes[a],this[s].childNodes[0])}else if(t instanceof i)for(a=0;a<t.length;a+=1)this[s].insertBefore(t[a],this[s].childNodes[0]);else this[s].insertBefore(t,this[s].childNodes[0]);return this},next:function(e){return this.length>0?e?this[0].nextElementSibling&&s(this[0].nextElementSibling).is(e)?new i([this[0].nextElementSibling]):new i([]):this[0].nextElementSibling?new i([this[0].nextElementSibling]):new i([]):new i([])},nextAll:function(e){var t=[],a=this[0];if(!a)return new i([]);for(;a.nextElementSibling;){var r=a.nextElementSibling;e?s(r).is(e)&&t.push(r):t.push(r),a=r}return new i(t)},prev:function(e){if(this.length>0){var t=this[0];return e?t.previousElementSibling&&s(t.previousElementSibling).is(e)?new i([t.previousElementSibling]):new i([]):t.previousElementSibling?new i([t.previousElementSibling]):new i([])}return new i([])},prevAll:function(e){var t=[],a=this[0];if(!a)return new i([]);for(;a.previousElementSibling;){var r=a.previousElementSibling;e?s(r).is(e)&&t.push(r):t.push(r),a=r}return new i(t)},parent:function(e){for(var t=[],i=0;i<this.length;i+=1)null!==this[i].parentNode&&(e?s(this[i].parentNode).is(e)&&t.push(this[i].parentNode):t.push(this[i].parentNode));return s(a(t))},parents:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var r=this[i].parentNode;r;)e?s(r).is(e)&&t.push(r):t.push(r),r=r.parentNode;return s(a(t))},closest:function(e){var t=this;return void 0===e?new i([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],s=0;s<this.length;s+=1)for(var a=this[s].querySelectorAll(e),r=0;r<a.length;r+=1)t.push(a[r]);return new i(t)},children:function(e){for(var t=[],r=0;r<this.length;r+=1)for(var n=this[r].childNodes,o=0;o<n.length;o+=1)e?1===n[o].nodeType&&s(n[o]).is(e)&&t.push(n[o]):1===n[o].nodeType&&t.push(n[o]);return new i(a(t))},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,a;for(i=0;i<e.length;i+=1){var r=s(e[i]);for(a=0;a<r.length;a+=1)this[this.length]=r[a],this.length+=1}return this},styles:function(){return this[0]?t.getComputedStyle(this[0],null):{}}};Object.keys(r).forEach(function(e){s.fn[e]=r[e]});var n,o,l,d={deleteProps:function(e){var t=e;Object.keys(t).forEach(function(e){try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}})},nextTick:function(e,t){return void 0===t&&(t=0),setTimeout(e,t)},now:function(){return Date.now()},getTranslate:function(e,i){var s,a,r;void 0===i&&(i="x");var n=t.getComputedStyle(e,null);return t.WebKitCSSMatrix?((a=n.transform||n.webkitTransform).split(",").length>6&&(a=a.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),r=new t.WebKitCSSMatrix("none"===a?"":a)):s=(r=n.MozTransform||n.OTransform||n.MsTransform||n.msTransform||n.transform||n.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===i&&(a=t.WebKitCSSMatrix?r.m41:16===s.length?parseFloat(s[12]):parseFloat(s[4])),"y"===i&&(a=t.WebKitCSSMatrix?r.m42:16===s.length?parseFloat(s[13]):parseFloat(s[5])),a||0},parseUrlQuery:function(e){var i,s,a,r,n={},o=e||t.location.href;if("string"==typeof o&&o.length)for(r=(s=(o=o.indexOf("?")>-1?o.replace(/\S*\?/,""):"").split("&").filter(function(e){return""!==e})).length,i=0;i<r;i+=1)a=s[i].replace(/#\S+/g,"").split("="),n[decodeURIComponent(a[0])]=void 0===a[1]?void 0:decodeURIComponent(a[1])||"";return n},isObject:function(e){return"object"==typeof e&&null!==e&&e.constructor&&e.constructor===Object},extend:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=Object(e[0]),s=1;s<e.length;s+=1){var a=e[s];if(void 0!==a&&null!==a)for(var r=Object.keys(Object(a)),n=0,o=r.length;n<o;n+=1){var l=r[n],h=Object.getOwnPropertyDescriptor(a,l);void 0!==h&&h.enumerable&&(d.isObject(i[l])&&d.isObject(a[l])?d.extend(i[l],a[l]):!d.isObject(i[l])&&d.isObject(a[l])?(i[l]={},d.extend(i[l],a[l])):i[l]=a[l])}}return i}},h=(l=e.createElement("div"),{touch:t.Modernizr&&!0===t.Modernizr.touch||!!("ontouchstart"in t||t.DocumentTouch&&e instanceof t.DocumentTouch),pointerEvents:!(!t.navigator.pointerEnabled&&!t.PointerEvent),prefixedPointerEvents:!!t.navigator.msPointerEnabled,transition:(o=l.style,"transition"in o||"webkitTransition"in o||"MozTransition"in o),transforms3d:t.Modernizr&&!0===t.Modernizr.csstransforms3d||(n=l.style,"webkitPerspective"in n||"MozPerspective"in n||"OPerspective"in n||"MsPerspective"in n||"perspective"in n),flexbox:function(){for(var e=l.style,t="alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "),i=0;i<t.length;i+=1)if(t[i]in e)return!0;return!1}(),observer:"MutationObserver"in t||"WebkitMutationObserver"in t,passiveListener:function(){var e=!1;try{var i=Object.defineProperty({},"passive",{get:function(){e=!0}});t.addEventListener("testPassiveListener",null,i)}catch(e){}return e}(),gestures:"ongesturestart"in t}),p=function(e){void 0===e&&(e={});var t=this;t.params=e,t.eventsListeners={},t.params&&t.params.on&&Object.keys(t.params.on).forEach(function(e){t.on(e,t.params.on[e])})},c={components:{configurable:!0}};p.prototype.on=function(e,t){var i=this;return"function"!=typeof t?i:(e.split(" ").forEach(function(e){i.eventsListeners[e]||(i.eventsListeners[e]=[]),i.eventsListeners[e].push(t)}),i)},p.prototype.once=function(e,t){var i=this;if("function"!=typeof t)return i;return i.on(e,function s(){for(var a=[],r=arguments.length;r--;)a[r]=arguments[r];t.apply(i,a),i.off(e,s)})},p.prototype.off=function(e,t){var i=this;return e.split(" ").forEach(function(e){void 0===t?i.eventsListeners[e]=[]:i.eventsListeners[e].forEach(function(s,a){s===t&&i.eventsListeners[e].splice(a,1)})}),i},p.prototype.emit=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,s,a,r=this;return r.eventsListeners?("string"==typeof e[0]||Array.isArray(e[0])?(i=e[0],s=e.slice(1,e.length),a=r):(i=e[0].events,s=e[0].data,a=e[0].context||r),(Array.isArray(i)?i:i.split(" ")).forEach(function(e){if(r.eventsListeners[e]){var t=[];r.eventsListeners[e].forEach(function(e){t.push(e)}),t.forEach(function(e){e.apply(a,s)})}}),r):r},p.prototype.useModulesParams=function(e){var t=this;t.modules&&Object.keys(t.modules).forEach(function(i){var s=t.modules[i];s.params&&d.extend(e,s.params)})},p.prototype.useModules=function(e){void 0===e&&(e={});var t=this;t.modules&&Object.keys(t.modules).forEach(function(i){var s=t.modules[i],a=e[i]||{};s.instance&&Object.keys(s.instance).forEach(function(e){var i=s.instance[e];t[e]="function"==typeof i?i.bind(t):i}),s.on&&t.on&&Object.keys(s.on).forEach(function(e){t.on(e,s.on[e])}),s.create&&s.create.bind(t)(a)})},c.components.set=function(e){this.use&&this.use(e)},p.installModule=function(e){for(var t=[],i=arguments.length-1;i-- >0;)t[i]=arguments[i+1];var s=this;s.prototype.modules||(s.prototype.modules={});var a=e.name||Object.keys(s.prototype.modules).length+"_"+d.now();return s.prototype.modules[a]=e,e.proto&&Object.keys(e.proto).forEach(function(t){s.prototype[t]=e.proto[t]}),e.static&&Object.keys(e.static).forEach(function(t){s[t]=e.static[t]}),e.install&&e.install.apply(s,t),s},p.use=function(e){for(var t=[],i=arguments.length-1;i-- >0;)t[i]=arguments[i+1];var s=this;return Array.isArray(e)?(e.forEach(function(e){return s.installModule(e)}),s):s.installModule.apply(s,[e].concat(t))},Object.defineProperties(p,c);var u={updateSize:function(){var e,t,i=this.$el;e=void 0!==this.params.width?this.params.width:i[0].clientWidth,t=void 0!==this.params.height?this.params.height:i[0].clientHeight,0===e&&this.isHorizontal()||0===t&&this.isVertical()||(e=e-parseInt(i.css("padding-left"),10)-parseInt(i.css("padding-right"),10),t=t-parseInt(i.css("padding-top"),10)-parseInt(i.css("padding-bottom"),10),d.extend(this,{width:e,height:t,size:this.isHorizontal()?e:t}))},updateSlides:function(){var e=this.params,t=this.$wrapperEl,i=this.size,s=this.rtl,a=this.wrongRTL,r=t.children("."+this.params.slideClass),n=this.virtual&&e.virtual.enabled?this.virtual.slides.length:r.length,o=[],l=[],p=[],c=e.slidesOffsetBefore;"function"==typeof c&&(c=e.slidesOffsetBefore.call(this));var u=e.slidesOffsetAfter;"function"==typeof u&&(u=e.slidesOffsetAfter.call(this));var v=n,f=this.snapGrid.length,m=this.snapGrid.length,g=e.spaceBetween,b=-c,w=0,y=0;if(void 0!==i){var x,E;"string"==typeof g&&g.indexOf("%")>=0&&(g=parseFloat(g.replace("%",""))/100*i),this.virtualSize=-g,s?r.css({marginLeft:"",marginTop:""}):r.css({marginRight:"",marginBottom:""}),e.slidesPerColumn>1&&(x=Math.floor(n/e.slidesPerColumn)===n/this.params.slidesPerColumn?n:Math.ceil(n/e.slidesPerColumn)*e.slidesPerColumn,"auto"!==e.slidesPerView&&"row"===e.slidesPerColumnFill&&(x=Math.max(x,e.slidesPerView*e.slidesPerColumn)));for(var T,S=e.slidesPerColumn,C=x/S,M=C-(e.slidesPerColumn*C-n),z=0;z<n;z+=1){E=0;var P=r.eq(z);if(e.slidesPerColumn>1){var k=void 0,$=void 0,L=void 0;"column"===e.slidesPerColumnFill?(L=z-($=Math.floor(z/S))*S,($>M||$===M&&L===S-1)&&(L+=1)>=S&&(L=0,$+=1),k=$+L*x/S,P.css({"-webkit-box-ordinal-group":k,"-moz-box-ordinal-group":k,"-ms-flex-order":k,"-webkit-order":k,order:k})):$=z-(L=Math.floor(z/C))*C,P.css("margin-"+(this.isHorizontal()?"top":"left"),0!==L&&e.spaceBetween&&e.spaceBetween+"px").attr("data-swiper-column",$).attr("data-swiper-row",L)}"none"!==P.css("display")&&("auto"===e.slidesPerView?(E=this.isHorizontal()?P.outerWidth(!0):P.outerHeight(!0),e.roundLengths&&(E=Math.floor(E))):(E=(i-(e.slidesPerView-1)*g)/e.slidesPerView,e.roundLengths&&(E=Math.floor(E)),r[z]&&(this.isHorizontal()?r[z].style.width=E+"px":r[z].style.height=E+"px")),r[z]&&(r[z].swiperSlideSize=E),p.push(E),e.centeredSlides?(b=b+E/2+w/2+g,0===w&&0!==z&&(b=b-i/2-g),0===z&&(b=b-i/2-g),Math.abs(b)<.001&&(b=0),y%e.slidesPerGroup==0&&o.push(b),l.push(b)):(y%e.slidesPerGroup==0&&o.push(b),l.push(b),b=b+E+g),this.virtualSize+=E+g,w=E,y+=1)}if(this.virtualSize=Math.max(this.virtualSize,i)+u,s&&a&&("slide"===e.effect||"coverflow"===e.effect)&&t.css({width:this.virtualSize+e.spaceBetween+"px"}),h.flexbox&&!e.setWrapperSize||(this.isHorizontal()?t.css({width:this.virtualSize+e.spaceBetween+"px"}):t.css({height:this.virtualSize+e.spaceBetween+"px"})),e.slidesPerColumn>1&&(this.virtualSize=(E+e.spaceBetween)*x,this.virtualSize=Math.ceil(this.virtualSize/e.slidesPerColumn)-e.spaceBetween,this.isHorizontal()?t.css({width:this.virtualSize+e.spaceBetween+"px"}):t.css({height:this.virtualSize+e.spaceBetween+"px"}),e.centeredSlides)){T=[];for(var I=0;I<o.length;I+=1)o[I]<this.virtualSize+o[0]&&T.push(o[I]);o=T}if(!e.centeredSlides){T=[];for(var D=0;D<o.length;D+=1)o[D]<=this.virtualSize-i&&T.push(o[D]);o=T,Math.floor(this.virtualSize-i)-Math.floor(o[o.length-1])>1&&o.push(this.virtualSize-i)}0===o.length&&(o=[0]),0!==e.spaceBetween&&(this.isHorizontal()?s?r.css({marginLeft:g+"px"}):r.css({marginRight:g+"px"}):r.css({marginBottom:g+"px"})),d.extend(this,{slides:r,snapGrid:o,slidesGrid:l,slidesSizesGrid:p}),n!==v&&this.emit("slidesLengthChange"),o.length!==f&&(this.params.watchOverflow&&this.checkOverflow(),this.emit("snapGridLengthChange")),l.length!==m&&this.emit("slidesGridLengthChange"),(e.watchSlidesProgress||e.watchSlidesVisibility)&&this.updateSlidesOffset()}},updateAutoHeight:function(){var e,t=[],i=0;if("auto"!==this.params.slidesPerView&&this.params.slidesPerView>1)for(e=0;e<Math.ceil(this.params.slidesPerView);e+=1){var s=this.activeIndex+e;if(s>this.slides.length)break;t.push(this.slides.eq(s)[0])}else t.push(this.slides.eq(this.activeIndex)[0]);for(e=0;e<t.length;e+=1)if(void 0!==t[e]){var a=t[e].offsetHeight;i=a>i?a:i}i&&this.$wrapperEl.css("height",i+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this.translate||0);var t=this.params,i=this.slides,s=this.rtl;if(0!==i.length){void 0===i[0].swiperSlideOffset&&this.updateSlidesOffset();var a=-e;s&&(a=e),i.removeClass(t.slideVisibleClass);for(var r=0;r<i.length;r+=1){var n=i[r],o=(a+(t.centeredSlides?this.minTranslate():0)-n.swiperSlideOffset)/(n.swiperSlideSize+t.spaceBetween);if(t.watchSlidesVisibility){var l=-(a-n.swiperSlideOffset),d=l+this.slidesSizesGrid[r];(l>=0&&l<this.size||d>0&&d<=this.size||l<=0&&d>=this.size)&&i.eq(r).addClass(t.slideVisibleClass)}n.progress=s?-o:o}}},updateProgress:function(e){void 0===e&&(e=this.translate||0);var t=this.params,i=this.maxTranslate()-this.minTranslate(),s=this.progress,a=this.isBeginning,r=this.isEnd,n=a,o=r;0===i?(s=0,a=!0,r=!0):(a=(s=(e-this.minTranslate())/i)<=0,r=s>=1),d.extend(this,{progress:s,isBeginning:a,isEnd:r}),(t.watchSlidesProgress||t.watchSlidesVisibility)&&this.updateSlidesProgress(e),a&&!n&&this.emit("reachBeginning toEdge"),r&&!o&&this.emit("reachEnd toEdge"),(n&&!a||o&&!r)&&this.emit("fromEdge"),this.emit("progress",s)},updateSlidesClasses:function(){var e,t=this.slides,i=this.params,s=this.$wrapperEl,a=this.activeIndex,r=this.realIndex,n=this.virtual&&i.virtual.enabled;t.removeClass(i.slideActiveClass+" "+i.slideNextClass+" "+i.slidePrevClass+" "+i.slideDuplicateActiveClass+" "+i.slideDuplicateNextClass+" "+i.slideDuplicatePrevClass),(e=n?this.$wrapperEl.find("."+i.slideClass+'[data-swiper-slide-index="'+a+'"]'):t.eq(a)).addClass(i.slideActiveClass),i.loop&&(e.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+r+'"]').addClass(i.slideDuplicateActiveClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+r+'"]').addClass(i.slideDuplicateActiveClass));var o=e.nextAll("."+i.slideClass).eq(0).addClass(i.slideNextClass);i.loop&&0===o.length&&(o=t.eq(0)).addClass(i.slideNextClass);var l=e.prevAll("."+i.slideClass).eq(0).addClass(i.slidePrevClass);i.loop&&0===l.length&&(l=t.eq(-1)).addClass(i.slidePrevClass),i.loop&&(o.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+o.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass),l.hasClass(i.slideDuplicateClass)?s.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass):s.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass))},updateActiveIndex:function(e){var t,i=this.rtl?this.translate:-this.translate,s=this.slidesGrid,a=this.snapGrid,r=this.params,n=this.activeIndex,o=this.realIndex,l=this.snapIndex,h=e;if(void 0===h){for(var p=0;p<s.length;p+=1)void 0!==s[p+1]?i>=s[p]&&i<s[p+1]-(s[p+1]-s[p])/2?h=p:i>=s[p]&&i<s[p+1]&&(h=p+1):i>=s[p]&&(h=p);r.normalizeSlideIndex&&(h<0||void 0===h)&&(h=0)}if((t=a.indexOf(i)>=0?a.indexOf(i):Math.floor(h/r.slidesPerGroup))>=a.length&&(t=a.length-1),h!==n){var c=parseInt(this.slides.eq(h).attr("data-swiper-slide-index")||h,10);d.extend(this,{snapIndex:t,realIndex:c,previousIndex:n,activeIndex:h}),this.emit("activeIndexChange"),this.emit("snapIndexChange"),o!==c&&this.emit("realIndexChange"),this.emit("slideChange")}else t!==l&&(this.snapIndex=t,this.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this.params,i=s(e.target).closest("."+t.slideClass)[0],a=!1;if(i)for(var r=0;r<this.slides.length;r+=1)this.slides[r]===i&&(a=!0);if(!i||!a)return this.clickedSlide=void 0,void(this.clickedIndex=void 0);this.clickedSlide=i,this.virtual&&this.params.virtual.enabled?this.clickedIndex=parseInt(s(i).attr("data-swiper-slide-index"),10):this.clickedIndex=s(i).index(),t.slideToClickedSlide&&void 0!==this.clickedIndex&&this.clickedIndex!==this.activeIndex&&this.slideToClickedSlide()}},v={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,i=this.rtl,s=this.translate,a=this.$wrapperEl;if(t.virtualTranslate)return i?-s:s;var r=d.getTranslate(a[0],e);return i&&(r=-r),r||0},setTranslate:function(e,t){var i=this.rtl,s=this.params,a=this.$wrapperEl,r=this.progress,n=0,o=0;this.isHorizontal()?n=i?-e:e:o=e,s.roundLengths&&(n=Math.floor(n),o=Math.floor(o)),s.virtualTranslate||(h.transforms3d?a.transform("translate3d("+n+"px, "+o+"px, 0px)"):a.transform("translate("+n+"px, "+o+"px)")),this.translate=this.isHorizontal()?n:o;var l=this.maxTranslate()-this.minTranslate();(0===l?0:(e-this.minTranslate())/l)!==r&&this.updateProgress(e),this.emit("setTranslate",this.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]}},f={setTransition:function(e,t){this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,s=this.params,a=this.previousIndex;s.autoHeight&&this.updateAutoHeight();var r=t;if(r||(r=i>a?"next":i<a?"prev":"reset"),this.emit("transitionStart"),e&&i!==a){if("reset"===r)return void this.emit("slideResetTransitionStart");this.emit("slideChangeTransitionStart"),"next"===r?this.emit("slideNextTransitionStart"):this.emit("slidePrevTransitionStart")}},transitionEnd:function(e,t){void 0===e&&(e=!0);var i=this.activeIndex,s=this.previousIndex;this.animating=!1,this.setTransition(0);var a=t;if(a||(a=i>s?"next":i<s?"prev":"reset"),this.emit("transitionEnd"),e&&i!==s){if("reset"===a)return void this.emit("slideResetTransitionEnd");this.emit("slideChangeTransitionEnd"),"next"===a?this.emit("slideNextTransitionEnd"):this.emit("slidePrevTransitionEnd")}}},m={slideTo:function(e,t,i,s){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var a=this,r=e;r<0&&(r=0);var n=a.params,o=a.snapGrid,l=a.slidesGrid,d=a.previousIndex,p=a.activeIndex,c=a.rtl,u=a.$wrapperEl;if(a.animating&&n.preventIntercationOnTransition)return!1;var v=Math.floor(r/n.slidesPerGroup);v>=o.length&&(v=o.length-1),(p||n.initialSlide||0)===(d||0)&&i&&a.emit("beforeSlideChangeStart");var f,m=-o[v];if(a.updateProgress(m),n.normalizeSlideIndex)for(var g=0;g<l.length;g+=1)-Math.floor(100*m)>=Math.floor(100*l[g])&&(r=g);if(a.initialized&&r!==p){if(!a.allowSlideNext&&m<a.translate&&m<a.minTranslate())return!1;if(!a.allowSlidePrev&&m>a.translate&&m>a.maxTranslate()&&(p||0)!==r)return!1}return f=r>p?"next":r<p?"prev":"reset",c&&-m===a.translate||!c&&m===a.translate?(a.updateActiveIndex(r),n.autoHeight&&a.updateAutoHeight(),a.updateSlidesClasses(),"slide"!==n.effect&&a.setTranslate(m),"reset"!==f&&(a.transitionStart(i,f),a.transitionEnd(i,f)),!1):(0!==t&&h.transition?(a.setTransition(t),a.setTranslate(m),a.updateActiveIndex(r),a.updateSlidesClasses(),a.emit("beforeTransitionStart",t,s),a.transitionStart(i,f),a.animating||(a.animating=!0,u.transitionEnd(function(){a&&!a.destroyed&&a.transitionEnd(i,f)}))):(a.setTransition(0),a.setTranslate(m),a.updateActiveIndex(r),a.updateSlidesClasses(),a.emit("beforeTransitionStart",t,s),a.transitionStart(i,f),a.transitionEnd(i,f)),!0)},slideToLoop:function(e,t,i,s){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var a=e;return this.params.loop&&(a+=this.loopedSlides),this.slideTo(a,t,i,s)},slideNext:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var s=this.params,a=this.animating;return s.loop?!a&&(this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft,this.slideTo(this.activeIndex+s.slidesPerGroup,e,t,i)):this.slideTo(this.activeIndex+s.slidesPerGroup,e,t,i)},slidePrev:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var s=this.params,a=this.animating;return s.loop?!a&&(this.loopFix(),this._clientLeft=this.$wrapperEl[0].clientLeft,this.slideTo(this.activeIndex-1,e,t,i)):this.slideTo(this.activeIndex-1,e,t,i)},slideReset:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);return this.slideTo(this.activeIndex,e,t,i)},slideToClickedSlide:function(){var e,t=this,i=t.params,a=t.$wrapperEl,r="auto"===i.slidesPerView?t.slidesPerViewDynamic():i.slidesPerView,n=t.clickedIndex;if(i.loop){if(t.animating)return;e=parseInt(s(t.clickedSlide).attr("data-swiper-slide-index"),10),i.centeredSlides?n<t.loopedSlides-r/2||n>t.slides.length-t.loopedSlides+r/2?(t.loopFix(),n=a.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),d.nextTick(function(){t.slideTo(n)})):t.slideTo(n):n>t.slides.length-r?(t.loopFix(),n=a.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),d.nextTick(function(){t.slideTo(n)})):t.slideTo(n)}else t.slideTo(n)}},g={loopCreate:function(){var t=this,i=t.params,a=t.$wrapperEl;a.children("."+i.slideClass+"."+i.slideDuplicateClass).remove();var r=a.children("."+i.slideClass);if(i.loopFillGroupWithBlank){var n=i.slidesPerGroup-r.length%i.slidesPerGroup;if(n!==i.slidesPerGroup){for(var o=0;o<n;o+=1){var l=s(e.createElement("div")).addClass(i.slideClass+" "+i.slideBlankClass);a.append(l)}r=a.children("."+i.slideClass)}}"auto"!==i.slidesPerView||i.loopedSlides||(i.loopedSlides=r.length),t.loopedSlides=parseInt(i.loopedSlides||i.slidesPerView,10),t.loopedSlides+=i.loopAdditionalSlides,t.loopedSlides>r.length&&(t.loopedSlides=r.length);var d=[],h=[];r.each(function(e,i){var a=s(i);e<t.loopedSlides&&h.push(i),e<r.length&&e>=r.length-t.loopedSlides&&d.push(i),a.attr("data-swiper-slide-index",e)});for(var p=0;p<h.length;p+=1)a.append(s(h[p].cloneNode(!0)).addClass(i.slideDuplicateClass));for(var c=d.length-1;c>=0;c-=1)a.prepend(s(d[c].cloneNode(!0)).addClass(i.slideDuplicateClass))},loopFix:function(){var e,t=this.params,i=this.activeIndex,s=this.slides,a=this.loopedSlides,r=this.allowSlidePrev,n=this.allowSlideNext,o=this.snapGrid,l=this.rtl;this.allowSlidePrev=!0,this.allowSlideNext=!0;var d=-o[i]-this.getTranslate();i<a?(e=s.length-3*a+i,e+=a,this.slideTo(e,0,!1,!0)&&0!==d&&this.setTranslate((l?-this.translate:this.translate)-d)):("auto"===t.slidesPerView&&i>=2*a||i>s.length-2*t.slidesPerView)&&(e=-s.length+i+a,e+=a,this.slideTo(e,0,!1,!0)&&0!==d&&this.setTranslate((l?-this.translate:this.translate)-d));this.allowSlidePrev=r,this.allowSlideNext=n},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,i=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass).remove(),i.removeAttr("data-swiper-slide-index")}},b={setGrabCursor:function(e){if(!h.touch&&this.params.simulateTouch){var t=this.el;t.style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab"}},unsetGrabCursor:function(){h.touch||(this.el.style.cursor="")}},w={appendSlide:function(e){var t=this.$wrapperEl,i=this.params;if(i.loop&&this.loopDestroy(),"object"==typeof e&&"length"in e)for(var s=0;s<e.length;s+=1)e[s]&&t.append(e[s]);else t.append(e);i.loop&&this.loopCreate(),i.observer&&h.observer||this.update()},prependSlide:function(e){var t=this.params,i=this.$wrapperEl,s=this.activeIndex;t.loop&&this.loopDestroy();var a=s+1;if("object"==typeof e&&"length"in e){for(var r=0;r<e.length;r+=1)e[r]&&i.prepend(e[r]);a=s+e.length}else i.prepend(e);t.loop&&this.loopCreate(),t.observer&&h.observer||this.update(),this.slideTo(a,0,!1)},removeSlide:function(e){var t=this.params,i=this.$wrapperEl,s=this.activeIndex;t.loop&&(this.loopDestroy(),this.slides=i.children("."+t.slideClass));var a,r=s;if("object"==typeof e&&"length"in e){for(var n=0;n<e.length;n+=1)a=e[n],this.slides[a]&&this.slides.eq(a).remove(),a<r&&(r-=1);r=Math.max(r,0)}else a=e,this.slides[a]&&this.slides.eq(a).remove(),a<r&&(r-=1),r=Math.max(r,0);t.loop&&this.loopCreate(),t.observer&&h.observer||this.update(),t.loop?this.slideTo(r+this.loopedSlides,0,!1):this.slideTo(r,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},y=function(){var i=t.navigator.userAgent,s={ios:!1,android:!1,androidChrome:!1,desktop:!1,windows:!1,iphone:!1,ipod:!1,ipad:!1,cordova:t.cordova||t.phonegap,phonegap:t.cordova||t.phonegap},a=i.match(/(Windows Phone);?[\s\/]+([\d.]+)?/),r=i.match(/(Android);?[\s\/]+([\d.]+)?/),n=i.match(/(iPad).*OS\s([\d_]+)/),o=i.match(/(iPod)(.*OS\s([\d_]+))?/),l=!n&&i.match(/(iPhone\sOS|iOS)\s([\d_]+)/);if(a&&(s.os="windows",s.osVersion=a[2],s.windows=!0),r&&!a&&(s.os="android",s.osVersion=r[2],s.android=!0,s.androidChrome=i.toLowerCase().indexOf("chrome")>=0),(n||l||o)&&(s.os="ios",s.ios=!0),l&&!o&&(s.osVersion=l[2].replace(/_/g,"."),s.iphone=!0),n&&(s.osVersion=n[2].replace(/_/g,"."),s.ipad=!0),o&&(s.osVersion=o[3]?o[3].replace(/_/g,"."):null,s.iphone=!0),s.ios&&s.osVersion&&i.indexOf("Version/")>=0&&"10"===s.osVersion.split(".")[0]&&(s.osVersion=i.toLowerCase().split("version/")[1].split(" ")[0]),s.desktop=!(s.os||s.android||s.webView),s.webView=(l||n||o)&&i.match(/.*AppleWebKit(?!.*Safari)/i),s.os&&"ios"===s.os){var d=s.osVersion.split("."),h=e.querySelector('meta[name="viewport"]');s.minimalUi=!s.webView&&(o||l)&&(1*d[0]==7?1*d[1]>=1:1*d[0]>7)&&h&&h.getAttribute("content").indexOf("minimal-ui")>=0}return s.pixelRatio=t.devicePixelRatio||1,s}(),x=function(i){var a=this.touchEventsData,r=this.params,n=this.touches;if(!this.animating||!r.preventIntercationOnTransition){var o=i;if(o.originalEvent&&(o=o.originalEvent),a.isTouchEvent="touchstart"===o.type,(a.isTouchEvent||!("which"in o)||3!==o.which)&&(!a.isTouched||!a.isMoved))if(r.noSwiping&&s(o.target).closest(r.noSwipingSelector?r.noSwipingSelector:"."+r.noSwipingClass)[0])this.allowClick=!0;else if(!r.swipeHandler||s(o).closest(r.swipeHandler)[0]){n.currentX="touchstart"===o.type?o.targetTouches[0].pageX:o.pageX,n.currentY="touchstart"===o.type?o.targetTouches[0].pageY:o.pageY;var l=n.currentX,h=n.currentY;if(!(y.ios&&!y.cordova&&r.iOSEdgeSwipeDetection&&l<=r.iOSEdgeSwipeThreshold&&l>=t.screen.width-r.iOSEdgeSwipeThreshold)){if(d.extend(a,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),n.startX=l,n.startY=h,a.touchStartTime=d.now(),this.allowClick=!0,this.updateSize(),this.swipeDirection=void 0,r.threshold>0&&(a.allowThresholdMove=!1),"touchstart"!==o.type){var p=!0;s(o.target).is(a.formElements)&&(p=!1),e.activeElement&&s(e.activeElement).is(a.formElements)&&e.activeElement!==o.target&&e.activeElement.blur(),p&&this.allowTouchMove&&o.preventDefault()}this.emit("touchStart",o)}}}},E=function(t){var i=this.touchEventsData,a=this.params,r=this.touches,n=this.rtl,o=t;if(o.originalEvent&&(o=o.originalEvent),i.isTouched){if(!i.isTouchEvent||"mousemove"!==o.type){var l="touchmove"===o.type?o.targetTouches[0].pageX:o.pageX,h="touchmove"===o.type?o.targetTouches[0].pageY:o.pageY;if(o.preventedByNestedSwiper)return r.startX=l,void(r.startY=h);if(!this.allowTouchMove)return this.allowClick=!1,void(i.isTouched&&(d.extend(r,{startX:l,startY:h,currentX:l,currentY:h}),i.touchStartTime=d.now()));if(i.isTouchEvent&&a.touchReleaseOnEdges&&!a.loop)if(this.isVertical()){if(h<r.startY&&this.translate<=this.maxTranslate()||h>r.startY&&this.translate>=this.minTranslate())return i.isTouched=!1,void(i.isMoved=!1)}else if(l<r.startX&&this.translate<=this.maxTranslate()||l>r.startX&&this.translate>=this.minTranslate())return;if(i.isTouchEvent&&e.activeElement&&o.target===e.activeElement&&s(o.target).is(i.formElements))return i.isMoved=!0,void(this.allowClick=!1);if(i.allowTouchCallbacks&&this.emit("touchMove",o),!(o.targetTouches&&o.targetTouches.length>1)){r.currentX=l,r.currentY=h;var p,c=r.currentX-r.startX,u=r.currentY-r.startY;if(void 0===i.isScrolling)this.isHorizontal()&&r.currentY===r.startY||this.isVertical()&&r.currentX===r.startX?i.isScrolling=!1:c*c+u*u>=25&&(p=180*Math.atan2(Math.abs(u),Math.abs(c))/Math.PI,i.isScrolling=this.isHorizontal()?p>a.touchAngle:90-p>a.touchAngle);if(i.isScrolling&&this.emit("touchMoveOpposite",o),"undefined"==typeof startMoving&&(r.currentX===r.startX&&r.currentY===r.startY||(i.startMoving=!0)),i.isScrolling)i.isTouched=!1;else if(i.startMoving){this.allowClick=!1,o.preventDefault(),a.touchMoveStopPropagation&&!a.nested&&o.stopPropagation(),i.isMoved||(a.loop&&this.loopFix(),i.startTranslate=this.getTranslate(),this.setTransition(0),this.animating&&this.$wrapperEl.trigger("webkitTransitionEnd transitionend"),i.allowMomentumBounce=!1,!a.grabCursor||!0!==this.allowSlideNext&&!0!==this.allowSlidePrev||this.setGrabCursor(!0),this.emit("sliderFirstMove",o)),this.emit("sliderMove",o),i.isMoved=!0;var v=this.isHorizontal()?c:u;r.diff=v,v*=a.touchRatio,n&&(v=-v),this.swipeDirection=v>0?"prev":"next",i.currentTranslate=v+i.startTranslate;var f=!0,m=a.resistanceRatio;if(a.touchReleaseOnEdges&&(m=0),v>0&&i.currentTranslate>this.minTranslate()?(f=!1,a.resistance&&(i.currentTranslate=this.minTranslate()-1+Math.pow(-this.minTranslate()+i.startTranslate+v,m))):v<0&&i.currentTranslate<this.maxTranslate()&&(f=!1,a.resistance&&(i.currentTranslate=this.maxTranslate()+1-Math.pow(this.maxTranslate()-i.startTranslate-v,m))),f&&(o.preventedByNestedSwiper=!0),!this.allowSlideNext&&"next"===this.swipeDirection&&i.currentTranslate<i.startTranslate&&(i.currentTranslate=i.startTranslate),!this.allowSlidePrev&&"prev"===this.swipeDirection&&i.currentTranslate>i.startTranslate&&(i.currentTranslate=i.startTranslate),a.threshold>0){if(!(Math.abs(v)>a.threshold||i.allowThresholdMove))return void(i.currentTranslate=i.startTranslate);if(!i.allowThresholdMove)return i.allowThresholdMove=!0,r.startX=r.currentX,r.startY=r.currentY,i.currentTranslate=i.startTranslate,void(r.diff=this.isHorizontal()?r.currentX-r.startX:r.currentY-r.startY)}a.followFinger&&((a.freeMode||a.watchSlidesProgress||a.watchSlidesVisibility)&&(this.updateActiveIndex(),this.updateSlidesClasses()),a.freeMode&&(0===i.velocities.length&&i.velocities.push({position:r[this.isHorizontal()?"startX":"startY"],time:i.touchStartTime}),i.velocities.push({position:r[this.isHorizontal()?"currentX":"currentY"],time:d.now()})),this.updateProgress(i.currentTranslate),this.setTranslate(i.currentTranslate))}}}}else i.startMoving&&i.isScrolling&&this.emit("touchMoveOpposite",o)},T=function(e){var t=this,i=t.touchEventsData,s=t.params,a=t.touches,r=t.rtl,n=t.$wrapperEl,o=t.slidesGrid,l=t.snapGrid,h=e;if(h.originalEvent&&(h=h.originalEvent),i.allowTouchCallbacks&&t.emit("touchEnd",h),i.allowTouchCallbacks=!1,!i.isTouched)return i.isMoved&&s.grabCursor&&t.setGrabCursor(!1),i.isMoved=!1,void(i.startMoving=!1);s.grabCursor&&i.isMoved&&i.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var p,c=d.now(),u=c-i.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(h),t.emit("tap",h),u<300&&c-i.lastClickTime>300&&(i.clickTimeout&&clearTimeout(i.clickTimeout),i.clickTimeout=d.nextTick(function(){t&&!t.destroyed&&t.emit("click",h)},300)),u<300&&c-i.lastClickTime<300&&(i.clickTimeout&&clearTimeout(i.clickTimeout),t.emit("doubleTap",h))),i.lastClickTime=d.now(),d.nextTick(function(){t.destroyed||(t.allowClick=!0)}),!i.isTouched||!i.isMoved||!t.swipeDirection||0===a.diff||i.currentTranslate===i.startTranslate)return i.isTouched=!1,i.isMoved=!1,void(i.startMoving=!1);if(i.isTouched=!1,i.isMoved=!1,i.startMoving=!1,p=s.followFinger?r?t.translate:-t.translate:-i.currentTranslate,s.freeMode){if(p<-t.minTranslate())return void t.slideTo(t.activeIndex);if(p>-t.maxTranslate())return void(t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1));if(s.freeModeMomentum){if(i.velocities.length>1){var v=i.velocities.pop(),f=i.velocities.pop(),m=v.position-f.position,g=v.time-f.time;t.velocity=m/g,t.velocity/=2,Math.abs(t.velocity)<s.freeModeMinimumVelocity&&(t.velocity=0),(g>150||d.now()-v.time>300)&&(t.velocity=0)}else t.velocity=0;t.velocity*=s.freeModeMomentumVelocityRatio,i.velocities.length=0;var b=1e3*s.freeModeMomentumRatio,w=t.velocity*b,y=t.translate+w;r&&(y=-y);var x,E=!1,T=20*Math.abs(t.velocity)*s.freeModeMomentumBounceRatio;if(y<t.maxTranslate())s.freeModeMomentumBounce?(y+t.maxTranslate()<-T&&(y=t.maxTranslate()-T),x=t.maxTranslate(),E=!0,i.allowMomentumBounce=!0):y=t.maxTranslate();else if(y>t.minTranslate())s.freeModeMomentumBounce?(y-t.minTranslate()>T&&(y=t.minTranslate()+T),x=t.minTranslate(),E=!0,i.allowMomentumBounce=!0):y=t.minTranslate();else if(s.freeModeSticky){for(var S,C=0;C<l.length;C+=1)if(l[C]>-y){S=C;break}y=-(y=Math.abs(l[S]-y)<Math.abs(l[S-1]-y)||"next"===t.swipeDirection?l[S]:l[S-1])}if(0!==t.velocity)b=r?Math.abs((-y-t.translate)/t.velocity):Math.abs((y-t.translate)/t.velocity);else if(s.freeModeSticky)return void t.slideReset();s.freeModeMomentumBounce&&E?(t.updateProgress(x),t.setTransition(b),t.setTranslate(y),t.transitionStart(!0,t.swipeDirection),t.animating=!0,n.transitionEnd(function(){t&&!t.destroyed&&i.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(s.speed),t.setTranslate(x),n.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))})):t.velocity?(t.updateProgress(y),t.setTransition(b),t.setTranslate(y),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,n.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))):t.updateProgress(y),t.updateActiveIndex(),t.updateSlidesClasses()}(!s.freeModeMomentum||u>=s.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var M=0,z=t.slidesSizesGrid[0],P=0;P<o.length;P+=s.slidesPerGroup)void 0!==o[P+s.slidesPerGroup]?p>=o[P]&&p<o[P+s.slidesPerGroup]&&(M=P,z=o[P+s.slidesPerGroup]-o[P]):p>=o[P]&&(M=P,z=o[o.length-1]-o[o.length-2]);var k=(p-o[M])/z;if(u>s.longSwipesMs){if(!s.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(k>=s.longSwipesRatio?t.slideTo(M+s.slidesPerGroup):t.slideTo(M)),"prev"===t.swipeDirection&&(k>1-s.longSwipesRatio?t.slideTo(M+s.slidesPerGroup):t.slideTo(M))}else{if(!s.shortSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&t.slideTo(M+s.slidesPerGroup),"prev"===t.swipeDirection&&t.slideTo(M)}}},S=function(){var e=this.params,t=this.el;if(!t||0!==t.offsetWidth){e.breakpoints&&this.setBreakpoint();var i=this.allowSlideNext,s=this.allowSlidePrev;if(this.allowSlideNext=!0,this.allowSlidePrev=!0,this.updateSize(),this.updateSlides(),e.freeMode){var a=Math.min(Math.max(this.translate,this.maxTranslate()),this.minTranslate());this.setTranslate(a),this.updateActiveIndex(),this.updateSlidesClasses(),e.autoHeight&&this.updateAutoHeight()}else this.updateSlidesClasses(),("auto"===e.slidesPerView||e.slidesPerView>1)&&this.isEnd&&!this.params.centeredSlides?this.slideTo(this.slides.length-1,0,!1,!0):this.slideTo(this.activeIndex,0,!1,!0);this.allowSlidePrev=s,this.allowSlideNext=i}},C=function(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))};var M={attachEvents:function(){var t=this.params,i=this.touchEvents,s=this.el,a=this.wrapperEl;this.onTouchStart=x.bind(this),this.onTouchMove=E.bind(this),this.onTouchEnd=T.bind(this),this.onClick=C.bind(this);var r="container"===t.touchEventsTarget?s:a,n=!!t.nested;if(h.touch||!h.pointerEvents&&!h.prefixedPointerEvents){if(h.touch){var o=!("touchstart"!==i.start||!h.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};r.addEventListener(i.start,this.onTouchStart,o),r.addEventListener(i.move,this.onTouchMove,h.passiveListener?{passive:!1,capture:n}:n),r.addEventListener(i.end,this.onTouchEnd,o)}(t.simulateTouch&&!y.ios&&!y.android||t.simulateTouch&&!h.touch&&y.ios)&&(r.addEventListener("mousedown",this.onTouchStart,!1),e.addEventListener("mousemove",this.onTouchMove,n),e.addEventListener("mouseup",this.onTouchEnd,!1))}else r.addEventListener(i.start,this.onTouchStart,!1),e.addEventListener(i.move,this.onTouchMove,n),e.addEventListener(i.end,this.onTouchEnd,!1);(t.preventClicks||t.preventClicksPropagation)&&r.addEventListener("click",this.onClick,!0),this.on("resize observerUpdate",S)},detachEvents:function(){var t=this.params,i=this.touchEvents,s=this.el,a=this.wrapperEl,r="container"===t.touchEventsTarget?s:a,n=!!t.nested;if(h.touch||!h.pointerEvents&&!h.prefixedPointerEvents){if(h.touch){var o=!("onTouchStart"!==i.start||!h.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};r.removeEventListener(i.start,this.onTouchStart,o),r.removeEventListener(i.move,this.onTouchMove,n),r.removeEventListener(i.end,this.onTouchEnd,o)}(t.simulateTouch&&!y.ios&&!y.android||t.simulateTouch&&!h.touch&&y.ios)&&(r.removeEventListener("mousedown",this.onTouchStart,!1),e.removeEventListener("mousemove",this.onTouchMove,n),e.removeEventListener("mouseup",this.onTouchEnd,!1))}else r.removeEventListener(i.start,this.onTouchStart,!1),e.removeEventListener(i.move,this.onTouchMove,n),e.removeEventListener(i.end,this.onTouchEnd,!1);(t.preventClicks||t.preventClicksPropagation)&&r.removeEventListener("click",this.onClick,!0),this.off("resize observerUpdate",S)}},z={setBreakpoint:function(){var e=this.activeIndex,t=this.loopedSlides;void 0===t&&(t=0);var i=this.params,s=i.breakpoints;if(s&&(!s||0!==Object.keys(s).length)){var a=this.getBreakpoint(s);if(a&&this.currentBreakpoint!==a){var r=a in s?s[a]:this.originalParams,n=i.loop&&r.slidesPerView!==i.slidesPerView;d.extend(this.params,r),d.extend(this,{allowTouchMove:this.params.allowTouchMove,allowSlideNext:this.params.allowSlideNext,allowSlidePrev:this.params.allowSlidePrev}),this.currentBreakpoint=a,n&&(this.loopDestroy(),this.loopCreate(),this.updateSlides(),this.slideTo(e-t+this.loopedSlides,0,!1)),this.emit("breakpoint",r)}}},getBreakpoint:function(e){if(e){var i=!1,s=[];Object.keys(e).forEach(function(e){s.push(e)}),s.sort(function(e,t){return parseInt(e,10)-parseInt(t,10)});for(var a=0;a<s.length;a+=1){var r=s[a];r>=t.innerWidth&&!i&&(i=r)}return i||"max"}}},P=function(){return{isIE:!!t.navigator.userAgent.match(/Trident/g)||!!t.navigator.userAgent.match(/MSIE/g),isSafari:(e=t.navigator.userAgent.toLowerCase(),e.indexOf("safari")>=0&&e.indexOf("chrome")<0&&e.indexOf("android")<0),isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(t.navigator.userAgent)};var e}();var k={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,preventIntercationOnTransition:!1,iOSEdgeSwipeDetection:!1,iOSEdgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,centeredSlides:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!0,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0},$={update:u,translate:v,transition:f,slide:m,loop:g,grabCursor:b,manipulation:w,events:M,breakpoints:z,checkOverflow:{checkOverflow:function(){var e=this.isLocked;this.isLocked=1===this.snapGrid.length,this.allowTouchMove=!this.isLocked,e&&e!==this.isLocked&&(this.isEnd=!1,this.navigation.update())}},classes:{addClasses:function(){var e=this.classNames,t=this.params,i=this.rtl,s=this.$el,a=[];a.push(t.direction),t.freeMode&&a.push("free-mode"),h.flexbox||a.push("no-flexbox"),t.autoHeight&&a.push("autoheight"),i&&a.push("rtl"),t.slidesPerColumn>1&&a.push("multirow"),y.android&&a.push("android"),y.ios&&a.push("ios"),P.isIE&&(h.pointerEvents||h.prefixedPointerEvents)&&a.push("wp8-"+t.direction),a.forEach(function(i){e.push(t.containerModifierClass+i)}),s.addClass(e.join(" "))},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" "))}},images:{loadImage:function(e,i,s,a,r,n){var o;function l(){n&&n()}e.complete&&r?l():i?((o=new t.Image).onload=l,o.onerror=l,a&&(o.sizes=a),s&&(o.srcset=s),i&&(o.src=i)):l()},preloadImages:function(){var e=this;function t(){void 0!==e&&null!==e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var i=0;i<e.imagesToLoad.length;i+=1){var s=e.imagesToLoad[i];e.loadImage(s,s.currentSrc||s.getAttribute("src"),s.srcset||s.getAttribute("srcset"),s.sizes||s.getAttribute("sizes"),!0,t)}}}},L={},I=function(e){function t(){for(var i,a,r,n=[],o=arguments.length;o--;)n[o]=arguments[o];1===n.length&&n[0].constructor&&n[0].constructor===Object?a=n[0]:(i=(r=n)[0],a=r[1]);a||(a={}),a=d.extend({},a),i&&!a.el&&(a.el=i),e.call(this,a),Object.keys($).forEach(function(e){Object.keys($[e]).forEach(function(i){t.prototype[i]||(t.prototype[i]=$[e][i])})});var l=this;void 0===l.modules&&(l.modules={}),Object.keys(l.modules).forEach(function(e){var t=l.modules[e];if(t.params){var i=Object.keys(t.params)[0],s=t.params[i];if("object"!=typeof s)return;if(!(i in a&&"enabled"in s))return;!0===a[i]&&(a[i]={enabled:!0}),"object"!=typeof a[i]||"enabled"in a[i]||(a[i].enabled=!0),a[i]||(a[i]={enabled:!1})}});var p=d.extend({},k);l.useModulesParams(p),l.params=d.extend({},p,L,a),l.originalParams=d.extend({},l.params),l.passedParams=d.extend({},a),l.$=s;var c=s(l.params.el);if(i=c[0]){if(c.length>1){var u=[];return c.each(function(e,i){var s=d.extend({},a,{el:i});u.push(new t(s))}),u}i.swiper=l,c.data("swiper",l);var v,f,m=c.children("."+l.params.wrapperClass);return d.extend(l,{$el:c,el:i,$wrapperEl:m,wrapperEl:m[0],classNames:[],slides:s(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===l.params.direction},isVertical:function(){return"vertical"===l.params.direction},rtl:"horizontal"===l.params.direction&&("rtl"===i.dir.toLowerCase()||"rtl"===c.css("direction")),wrongRTL:"-webkit-box"===m.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,progress:0,velocity:0,animating:!1,allowSlideNext:l.params.allowSlideNext,allowSlidePrev:l.params.allowSlidePrev,touchEvents:(v=["touchstart","touchmove","touchend"],f=["mousedown","mousemove","mouseup"],h.pointerEvents?f=["pointerdown","pointermove","pointerup"]:h.prefixedPointerEvents&&(f=["MSPointerDown","MSPointerMove","MSPointerUp"]),l.touchEventsTouch={start:v[0],move:v[1],end:v[2]},l.touchEventsDesktop={start:f[0],move:f[1],end:f[2]},h.touch||!l.params.simulateTouch?l.touchEventsTouch:l.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video",lastClickTime:d.now(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:l.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),l.useModules(),l.params.init&&l.init(),l}}e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t;var i={extendedDefaults:{configurable:!0},defaults:{configurable:!0},Class:{configurable:!0},$:{configurable:!0}};return t.prototype.slidesPerViewDynamic=function(){var e=this.params,t=this.slides,i=this.slidesGrid,s=this.size,a=this.activeIndex,r=1;if(e.centeredSlides){for(var n,o=t[a].swiperSlideSize,l=a+1;l<t.length;l+=1)t[l]&&!n&&(r+=1,(o+=t[l].swiperSlideSize)>s&&(n=!0));for(var d=a-1;d>=0;d-=1)t[d]&&!n&&(r+=1,(o+=t[d].swiperSlideSize)>s&&(n=!0))}else for(var h=a+1;h<t.length;h+=1)i[h]-i[a]<s&&(r+=1);return r},t.prototype.update=function(){var e=this;e&&!e.destroyed&&(e.updateSize(),e.updateSlides(),e.updateProgress(),e.updateSlidesClasses(),e.params.freeMode?(t(),e.params.autoHeight&&e.updateAutoHeight()):(("auto"===e.params.slidesPerView||e.params.slidesPerView>1)&&e.isEnd&&!e.params.centeredSlides?e.slideTo(e.slides.length-1,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0))||t(),e.emit("update"));function t(){var t=e.rtl?-1*e.translate:e.translate,i=Math.min(Math.max(t,e.maxTranslate()),e.minTranslate());e.setTranslate(i),e.updateActiveIndex(),e.updateSlidesClasses()}},t.prototype.init=function(){this.initialized||(this.emit("beforeInit"),this.params.breakpoints&&this.setBreakpoint(),this.addClasses(),this.params.loop&&this.loopCreate(),this.updateSize(),this.updateSlides(),this.params.watchOverflow&&this.checkOverflow(),this.params.grabCursor&&this.setGrabCursor(),this.params.preloadImages&&this.preloadImages(),this.params.loop?this.slideTo(this.params.initialSlide+this.loopedSlides,0,this.params.runCallbacksOnInit):this.slideTo(this.params.initialSlide,0,this.params.runCallbacksOnInit),this.attachEvents(),this.initialized=!0,this.emit("init"))},t.prototype.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i=this,s=i.params,a=i.$el,r=i.$wrapperEl,n=i.slides;i.emit("beforeDestroy"),i.initialized=!1,i.detachEvents(),s.loop&&i.loopDestroy(),t&&(i.removeClasses(),a.removeAttr("style"),r.removeAttr("style"),n&&n.length&&n.removeClass([s.slideVisibleClass,s.slideActiveClass,s.slideNextClass,s.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index").removeAttr("data-swiper-column").removeAttr("data-swiper-row")),i.emit("destroy"),Object.keys(i.eventsListeners).forEach(function(e){i.off(e)}),!1!==e&&(i.$el[0].swiper=null,i.$el.data("swiper",null),d.deleteProps(i)),i.destroyed=!0},t.extendDefaults=function(e){d.extend(L,e)},i.extendedDefaults.get=function(){return L},i.defaults.get=function(){return k},i.Class.get=function(){return e},i.$.get=function(){return s},Object.defineProperties(t,i),t}(p),D={name:"device",proto:{device:y},static:{device:y}},O={name:"support",proto:{support:h},static:{support:h}},A={name:"browser",proto:{browser:P},static:{browser:P}},H={name:"resize",create:function(){var e=this;d.extend(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(){t.addEventListener("resize",this.resize.resizeHandler),t.addEventListener("orientationchange",this.resize.orientationChangeHandler)},destroy:function(){t.removeEventListener("resize",this.resize.resizeHandler),t.removeEventListener("orientationchange",this.resize.orientationChangeHandler)}}},N={func:t.MutationObserver||t.WebkitMutationObserver,attach:function(e,t){void 0===t&&(t={});var i=this,s=new(0,N.func)(function(e){e.forEach(function(e){i.emit("observerUpdate",e)})});s.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),i.observer.observers.push(s)},init:function(){if(h.observer&&this.params.observer){if(this.params.observeParents)for(var e=this.$el.parents(),t=0;t<e.length;t+=1)this.observer.attach(e[t]);this.observer.attach(this.$el[0],{childList:!1}),this.observer.attach(this.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach(function(e){e.disconnect()}),this.observer.observers=[]}},X={name:"observer",params:{observer:!1,observeParents:!1},create:function(){d.extend(this,{observer:{init:N.init.bind(this),attach:N.attach.bind(this),destroy:N.destroy.bind(this),observers:[]}})},on:{init:function(){this.observer.init()},destroy:function(){this.observer.destroy()}}},Y={update:function(e){var t=this,i=t.params,s=i.slidesPerView,a=i.slidesPerGroup,r=i.centeredSlides,n=t.virtual,o=n.from,l=n.to,h=n.slides,p=n.slidesGrid,c=n.renderSlide,u=n.offset;t.updateActiveIndex();var v,f,m,g=t.activeIndex||0;v=t.rtl&&t.isHorizontal()?"right":t.isHorizontal()?"left":"top",r?(f=Math.floor(s/2)+a,m=Math.floor(s/2)+a):(f=s+(a-1),m=a);var b=Math.max((g||0)-m,0),w=Math.min((g||0)+f,h.length-1),y=(t.slidesGrid[b]||0)-(t.slidesGrid[0]||0);function x(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(d.extend(t.virtual,{from:b,to:w,offset:y,slidesGrid:t.slidesGrid}),o===b&&l===w&&!e)return t.slidesGrid!==p&&y!==u&&t.slides.css(v,y+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:y,from:b,to:w,slides:function(){for(var e=[],t=b;t<=w;t+=1)e.push(h[t]);return e}()}),void x();var E=[],T=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var S=o;S<=l;S+=1)(S<b||S>w)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+S+'"]').remove();for(var C=0;C<h.length;C+=1)C>=b&&C<=w&&(void 0===l||e?T.push(C):(C>l&&T.push(C),C<o&&E.push(C)));T.forEach(function(e){t.$wrapperEl.append(c(h[e],e))}),E.sort(function(e,t){return e<t}).forEach(function(e){t.$wrapperEl.prepend(c(h[e],e))}),t.$wrapperEl.children(".swiper-slide").css(v,y+"px"),x()},renderSlide:function(e,t){var i=this.params.virtual;if(i.cache&&this.virtual.cache[t])return this.virtual.cache[t];var a=i.renderSlide?s(i.renderSlide.call(this,e,t)):s('<div class="'+this.params.slideClass+'" data-swiper-slide-index="'+t+'">'+e+"</div>");return a.attr("data-swiper-slide-index")||a.attr("data-swiper-slide-index",t),i.cache&&(this.virtual.cache[t]=a),a},appendSlide:function(e){this.virtual.slides.push(e),this.virtual.update(!0)},prependSlide:function(e){if(this.virtual.slides.unshift(e),this.params.virtual.cache){var t=this.virtual.cache,i={};Object.keys(t).forEach(function(e){i[e+1]=t[e]}),this.virtual.cache=i}this.virtual.update(!0),this.slideNext(0)}},B={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null}},create:function(){d.extend(this,{virtual:{update:Y.update.bind(this),appendSlide:Y.appendSlide.bind(this),prependSlide:Y.prependSlide.bind(this),renderSlide:Y.renderSlide.bind(this),slides:this.params.virtual.slides,cache:{}}})},on:{beforeInit:function(){if(this.params.virtual.enabled){this.classNames.push(this.params.containerModifierClass+"virtual");var e={watchSlidesProgress:!0};d.extend(this.params,e),d.extend(this.originalParams,e),this.virtual.update()}},setTranslate:function(){this.params.virtual.enabled&&this.virtual.update()}}},G={handle:function(i){var s=i;s.originalEvent&&(s=s.originalEvent);var a=s.keyCode||s.charCode;if(!this.allowSlideNext&&(this.isHorizontal()&&39===a||this.isVertical()&&40===a))return!1;if(!this.allowSlidePrev&&(this.isHorizontal()&&37===a||this.isVertical()&&38===a))return!1;if(!(s.shiftKey||s.altKey||s.ctrlKey||s.metaKey||e.activeElement&&e.activeElement.nodeName&&("input"===e.activeElement.nodeName.toLowerCase()||"textarea"===e.activeElement.nodeName.toLowerCase()))){if(this.params.keyboard.onlyInViewport&&(37===a||39===a||38===a||40===a)){var r=!1;if(this.$el.parents("."+this.params.slideClass).length>0&&0===this.$el.parents("."+this.params.slideActiveClass).length)return;var n=t.innerWidth,o=t.innerHeight,l=this.$el.offset();this.rtl&&(l.left-=this.$el[0].scrollLeft);for(var d=[[l.left,l.top],[l.left+this.width,l.top],[l.left,l.top+this.height],[l.left+this.width,l.top+this.height]],h=0;h<d.length;h+=1){var p=d[h];p[0]>=0&&p[0]<=n&&p[1]>=0&&p[1]<=o&&(r=!0)}if(!r)return}this.isHorizontal()?(37!==a&&39!==a||(s.preventDefault?s.preventDefault():s.returnValue=!1),(39===a&&!this.rtl||37===a&&this.rtl)&&this.slideNext(),(37===a&&!this.rtl||39===a&&this.rtl)&&this.slidePrev()):(38!==a&&40!==a||(s.preventDefault?s.preventDefault():s.returnValue=!1),40===a&&this.slideNext(),38===a&&this.slidePrev()),this.emit("keyPress",a)}},enable:function(){this.keyboard.enabled||(s(e).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){this.keyboard.enabled&&(s(e).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},V={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0}},create:function(){d.extend(this,{keyboard:{enabled:!1,enable:G.enable.bind(this),disable:G.disable.bind(this),handle:G.handle.bind(this)}})},on:{init:function(){this.params.keyboard.enabled&&this.keyboard.enable()},destroy:function(){this.keyboard.enabled&&this.keyboard.disable()}}};var R={lastScrollTime:d.now(),event:t.navigator.userAgent.indexOf("firefox")>-1?"DOMMouseScroll":function(){var t="onwheel"in e;if(!t){var i=e.createElement("div");i.setAttribute("onwheel","return;"),t="function"==typeof i.onwheel}return!t&&e.implementation&&e.implementation.hasFeature&&!0!==e.implementation.hasFeature("","")&&(t=e.implementation.hasFeature("Events.wheel","3.0")),t}()?"wheel":"mousewheel",normalize:function(e){var t=0,i=0,s=0,a=0;return"detail"in e&&(i=e.detail),"wheelDelta"in e&&(i=-e.wheelDelta/120),"wheelDeltaY"in e&&(i=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=i,i=0),s=10*t,a=10*i,"deltaY"in e&&(a=e.deltaY),"deltaX"in e&&(s=e.deltaX),(s||a)&&e.deltaMode&&(1===e.deltaMode?(s*=40,a*=40):(s*=800,a*=800)),s&&!t&&(t=s<1?-1:1),a&&!i&&(i=a<1?-1:1),{spinX:t,spinY:i,pixelX:s,pixelY:a}},handle:function(e){var i=e,s=this,a=s.params.mousewheel;i.originalEvent&&(i=i.originalEvent);var r=0,n=s.rtl?-1:1,o=R.normalize(i);if(a.forceToAxis)if(s.isHorizontal()){if(!(Math.abs(o.pixelX)>Math.abs(o.pixelY)))return!0;r=o.pixelX*n}else{if(!(Math.abs(o.pixelY)>Math.abs(o.pixelX)))return!0;r=o.pixelY}else r=Math.abs(o.pixelX)>Math.abs(o.pixelY)?-o.pixelX*n:-o.pixelY;if(0===r)return!0;if(a.invert&&(r=-r),s.params.freeMode){var l=s.getTranslate()+r*a.sensitivity,h=s.isBeginning,p=s.isEnd;if(l>=s.minTranslate()&&(l=s.minTranslate()),l<=s.maxTranslate()&&(l=s.maxTranslate()),s.setTransition(0),s.setTranslate(l),s.updateProgress(),s.updateActiveIndex(),s.updateSlidesClasses(),(!h&&s.isBeginning||!p&&s.isEnd)&&s.updateSlidesClasses(),s.params.freeModeSticky&&(clearTimeout(s.mousewheel.timeout),s.mousewheel.timeout=d.nextTick(function(){s.slideReset()},300)),s.emit("scroll",i),s.params.autoplay&&s.params.autoplayDisableOnInteraction&&s.stopAutoplay(),l===s.minTranslate()||l===s.maxTranslate())return!0}else{if(d.now()-s.mousewheel.lastScrollTime>60)if(r<0)if(s.isEnd&&!s.params.loop||s.animating){if(a.releaseOnEdges)return!0}else s.slideNext(),s.emit("scroll",i);else if(s.isBeginning&&!s.params.loop||s.animating){if(a.releaseOnEdges)return!0}else s.slidePrev(),s.emit("scroll",i);s.mousewheel.lastScrollTime=(new t.Date).getTime()}return i.preventDefault?i.preventDefault():i.returnValue=!1,!1},enable:function(){if(!R.event)return!1;if(this.mousewheel.enabled)return!1;var e=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(e=s(this.params.mousewheel.eventsTarged)),e.on(R.event,this.mousewheel.handle),this.mousewheel.enabled=!0,!0},disable:function(){if(!R.event)return!1;if(!this.mousewheel.enabled)return!1;var e=this.$el;return"container"!==this.params.mousewheel.eventsTarged&&(e=s(this.params.mousewheel.eventsTarged)),e.off(R.event,this.mousewheel.handle),this.mousewheel.enabled=!1,!0}},F={update:function(){var e=this.params.navigation;if(!this.params.loop){var t=this.navigation,i=t.$nextEl,s=t.$prevEl;s&&s.length>0&&(this.isBeginning?s.addClass(e.disabledClass):s.removeClass(e.disabledClass),s[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass)),i&&i.length>0&&(this.isEnd?i.addClass(e.disabledClass):i.removeClass(e.disabledClass),i[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](e.lockClass))}},init:function(){var e,t,i=this,a=i.params.navigation;(a.nextEl||a.prevEl)&&(a.nextEl&&(e=s(a.nextEl),i.params.uniqueNavElements&&"string"==typeof a.nextEl&&e.length>1&&1===i.$el.find(a.nextEl).length&&(e=i.$el.find(a.nextEl))),a.prevEl&&(t=s(a.prevEl),i.params.uniqueNavElements&&"string"==typeof a.prevEl&&t.length>1&&1===i.$el.find(a.prevEl).length&&(t=i.$el.find(a.prevEl))),e&&e.length>0&&e.on("click",function(e){e.preventDefault(),i.isEnd&&!i.params.loop||i.slideNext()}),t&&t.length>0&&t.on("click",function(e){e.preventDefault(),i.isBeginning&&!i.params.loop||i.slidePrev()}),d.extend(i.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;t&&t.length&&(t.off("click"),t.removeClass(this.params.navigation.disabledClass)),i&&i.length&&(i.off("click"),i.removeClass(this.params.navigation.disabledClass))}},W={update:function(){var e=this.rtl,t=this.params.pagination;if(t.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var i,a=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,r=this.pagination.$el,n=this.params.loop?Math.ceil((a-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length;if(this.params.loop?((i=Math.ceil((this.activeIndex-this.loopedSlides)/this.params.slidesPerGroup))>a-1-2*this.loopedSlides&&(i-=a-2*this.loopedSlides),i>n-1&&(i-=n),i<0&&"bullets"!==this.params.paginationType&&(i=n+i)):i=void 0!==this.snapIndex?this.snapIndex:this.activeIndex||0,"bullets"===t.type&&this.pagination.bullets&&this.pagination.bullets.length>0){var o,l,d,h=this.pagination.bullets;if(t.dynamicBullets&&(this.pagination.bulletSize=h.eq(0)[this.isHorizontal()?"outerWidth":"outerHeight"](!0),r.css(this.isHorizontal()?"width":"height",this.pagination.bulletSize*(t.dynamicMainBullets+4)+"px"),t.dynamicMainBullets>1&&void 0!==this.previousIndex&&(i>this.previousIndex&&this.pagination.dynamicBulletIndex<t.dynamicMainBullets-1?this.pagination.dynamicBulletIndex+=1:i<this.previousIndex&&this.pagination.dynamicBulletIndex>0&&(this.pagination.dynamicBulletIndex-=1)),o=i-this.pagination.dynamicBulletIndex,d=((l=o+(t.dynamicMainBullets-1))+o)/2),h.removeClass(t.bulletActiveClass+" "+t.bulletActiveClass+"-next "+t.bulletActiveClass+"-next-next "+t.bulletActiveClass+"-prev "+t.bulletActiveClass+"-prev-prev "+t.bulletActiveClass+"-main"),r.length>1)h.each(function(e,a){var r=s(a),n=r.index();n===i&&r.addClass(t.bulletActiveClass),t.dynamicBullets&&(n>=o&&n<=l&&r.addClass(t.bulletActiveClass+"-main"),n===o&&r.prev().addClass(t.bulletActiveClass+"-prev").prev().addClass(t.bulletActiveClass+"-prev-prev"),n===l&&r.next().addClass(t.bulletActiveClass+"-next").next().addClass(t.bulletActiveClass+"-next-next"))});else if(h.eq(i).addClass(t.bulletActiveClass),t.dynamicBullets){for(var p=h.eq(o),c=h.eq(l),u=o;u<=l;u+=1)h.eq(u).addClass(t.bulletActiveClass+"-main");p.prev().addClass(t.bulletActiveClass+"-prev").prev().addClass(t.bulletActiveClass+"-prev-prev"),c.next().addClass(t.bulletActiveClass+"-next").next().addClass(t.bulletActiveClass+"-next-next")}if(t.dynamicBullets){var v=Math.min(h.length,t.dynamicMainBullets+4),f=(this.pagination.bulletSize*v-this.pagination.bulletSize)/2-d*this.pagination.bulletSize,m=e?"right":"left";h.css(this.isHorizontal()?m:"top",f+"px")}}if("fraction"===t.type&&(r.find("."+t.currentClass).text(i+1),r.find("."+t.totalClass).text(n)),"progressbar"===t.type){var g=(i+1)/n,b=g,w=1;this.isHorizontal()||(w=g,b=1),r.find("."+t.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+b+") scaleY("+w+")").transition(this.params.speed)}"custom"===t.type&&t.renderCustom?(r.html(t.renderCustom(this,i+1,n)),this.emit("paginationRender",this,r[0])):this.emit("paginationUpdate",this,r[0]),r[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](t.lockClass)}},render:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.virtual&&this.params.virtual.enabled?this.virtual.slides.length:this.slides.length,i=this.pagination.$el,s="";if("bullets"===e.type){for(var a=this.params.loop?Math.ceil((t-2*this.loopedSlides)/this.params.slidesPerGroup):this.snapGrid.length,r=0;r<a;r+=1)e.renderBullet?s+=e.renderBullet.call(this,r,e.bulletClass):s+="<"+e.bulletElement+' class="'+e.bulletClass+'"></'+e.bulletElement+">";i.html(s),this.pagination.bullets=i.find("."+e.bulletClass)}"fraction"===e.type&&(s=e.renderFraction?e.renderFraction.call(this,e.currentClass,e.totalClass):'<span class="'+e.currentClass+'"></span> / <span class="'+e.totalClass+'"></span>',i.html(s)),"progressbar"===e.type&&(s=e.renderProgressbar?e.renderProgressbar.call(this,e.progressbarFillClass):'<span class="'+e.progressbarFillClass+'"></span>',i.html(s)),"custom"!==e.type&&this.emit("paginationRender",this.pagination.$el[0])}},init:function(){var e=this,t=e.params.pagination;if(t.el){var i=s(t.el);0!==i.length&&(e.params.uniqueNavElements&&"string"==typeof t.el&&i.length>1&&1===e.$el.find(t.el).length&&(i=e.$el.find(t.el)),"bullets"===t.type&&t.clickable&&i.addClass(t.clickableClass),i.addClass(t.modifierClass+t.type),"bullets"===t.type&&t.dynamicBullets&&(i.addClass(""+t.modifierClass+t.type+"-dynamic"),e.pagination.dynamicBulletIndex=0,t.dynamicMainBullets<1&&(t.dynamicMainBullets=1)),t.clickable&&i.on("click","."+t.bulletClass,function(t){t.preventDefault();var i=s(this).index()*e.params.slidesPerGroup;e.params.loop&&(i+=e.loopedSlides),e.slideTo(i)}),d.extend(e.pagination,{$el:i,el:i[0]}))}},destroy:function(){var e=this.params.pagination;if(e.el&&this.pagination.el&&this.pagination.$el&&0!==this.pagination.$el.length){var t=this.pagination.$el;t.removeClass(e.hiddenClass),t.removeClass(e.modifierClass+e.type),this.pagination.bullets&&this.pagination.bullets.removeClass(e.bulletActiveClass),e.clickable&&t.off("click","."+e.bulletClass)}}},q={setTranslate:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=this.rtl,i=this.progress,s=e.dragSize,a=e.trackSize,r=e.$dragEl,n=e.$el,o=this.params.scrollbar,l=s,d=(a-s)*i;t&&this.isHorizontal()?(d=-d)>0?(l=s-d,d=0):-d+s>a&&(l=a+d):d<0?(l=s+d,d=0):d+s>a&&(l=a-d),this.isHorizontal()?(h.transforms3d?r.transform("translate3d("+d+"px, 0, 0)"):r.transform("translateX("+d+"px)"),r[0].style.width=l+"px"):(h.transforms3d?r.transform("translate3d(0px, "+d+"px, 0)"):r.transform("translateY("+d+"px)"),r[0].style.height=l+"px"),o.hide&&(clearTimeout(this.scrollbar.timeout),n[0].style.opacity=1,this.scrollbar.timeout=setTimeout(function(){n[0].style.opacity=0,n.transition(400)},1e3))}},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){if(this.params.scrollbar.el&&this.scrollbar.el){var e=this.scrollbar,t=e.$dragEl,i=e.$el;t[0].style.width="",t[0].style.height="";var s,a=this.isHorizontal()?i[0].offsetWidth:i[0].offsetHeight,r=this.size/this.virtualSize,n=r*(a/this.size);s="auto"===this.params.scrollbar.dragSize?a*r:parseInt(this.params.scrollbar.dragSize,10),this.isHorizontal()?t[0].style.width=s+"px":t[0].style.height=s+"px",i[0].style.display=r>=1?"none":"",this.params.scrollbarHide&&(i[0].style.opacity=0),d.extend(e,{trackSize:a,divider:r,moveDivider:n,dragSize:s}),e.$el[this.params.watchOverflow&&this.isLocked?"addClass":"removeClass"](this.params.scrollbar.lockClass)}},setDragPosition:function(e){var t,i=this.scrollbar,s=i.$el,a=i.dragSize,r=i.trackSize;t=((this.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageX:e.pageX||e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageY:e.pageY||e.clientY)-s.offset()[this.isHorizontal()?"left":"top"]-a/2)/(r-a),t=Math.max(Math.min(t,1),0),this.rtl&&(t=1-t);var n=this.minTranslate()+(this.maxTranslate()-this.minTranslate())*t;this.updateProgress(n),this.setTranslate(n),this.updateActiveIndex(),this.updateSlidesClasses()},onDragStart:function(e){var t=this.params.scrollbar,i=this.scrollbar,s=this.$wrapperEl,a=i.$el,r=i.$dragEl;this.scrollbar.isTouched=!0,e.preventDefault(),e.stopPropagation(),s.transition(100),r.transition(100),i.setDragPosition(e),clearTimeout(this.scrollbar.dragTimeout),a.transition(0),t.hide&&a.css("opacity",1),this.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,i=this.$wrapperEl,s=t.$el,a=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),i.transition(0),s.transition(0),a.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this.params.scrollbar,i=this.scrollbar.$el;this.scrollbar.isTouched&&(this.scrollbar.isTouched=!1,t.hide&&(clearTimeout(this.scrollbar.dragTimeout),this.scrollbar.dragTimeout=d.nextTick(function(){i.css("opacity",0),i.transition(400)},1e3)),this.emit("scrollbarDragEnd",e),t.snapOnRelease&&this.slideReset())},enableDraggable:function(){if(this.params.scrollbar.el){var t=this.scrollbar,i=this.touchEvents,s=this.touchEventsDesktop,a=this.params,r=t.$el[0],n=!(!h.passiveListener||!a.passiveListener)&&{passive:!1,capture:!1},o=!(!h.passiveListener||!a.passiveListener)&&{passive:!0,capture:!1};h.touch||!h.pointerEvents&&!h.prefixedPointerEvents?(h.touch&&(r.addEventListener(i.start,this.scrollbar.onDragStart,n),r.addEventListener(i.move,this.scrollbar.onDragMove,n),r.addEventListener(i.end,this.scrollbar.onDragEnd,o)),(a.simulateTouch&&!y.ios&&!y.android||a.simulateTouch&&!h.touch&&y.ios)&&(r.addEventListener("mousedown",this.scrollbar.onDragStart,n),e.addEventListener("mousemove",this.scrollbar.onDragMove,n),e.addEventListener("mouseup",this.scrollbar.onDragEnd,o))):(r.addEventListener(s.start,this.scrollbar.onDragStart,n),e.addEventListener(s.move,this.scrollbar.onDragMove,n),e.addEventListener(s.end,this.scrollbar.onDragEnd,o))}},disableDraggable:function(){if(this.params.scrollbar.el){var t=this.scrollbar,i=this.touchEvents,s=this.touchEventsDesktop,a=this.params,r=t.$el[0],n=!(!h.passiveListener||!a.passiveListener)&&{passive:!1,capture:!1},o=!(!h.passiveListener||!a.passiveListener)&&{passive:!0,capture:!1};h.touch||!h.pointerEvents&&!h.prefixedPointerEvents?(h.touch&&(r.removeEventListener(i.start,this.scrollbar.onDragStart,n),r.removeEventListener(i.move,this.scrollbar.onDragMove,n),r.removeEventListener(i.end,this.scrollbar.onDragEnd,o)),(a.simulateTouch&&!y.ios&&!y.android||a.simulateTouch&&!h.touch&&y.ios)&&(r.removeEventListener("mousedown",this.scrollbar.onDragStart,n),e.removeEventListener("mousemove",this.scrollbar.onDragMove,n),e.removeEventListener("mouseup",this.scrollbar.onDragEnd,o))):(r.removeEventListener(s.start,this.scrollbar.onDragStart,n),e.removeEventListener(s.move,this.scrollbar.onDragMove,n),e.removeEventListener(s.end,this.scrollbar.onDragEnd,o))}},init:function(){if(this.params.scrollbar.el){var e=this.scrollbar,t=this.$el,i=this.params.scrollbar,a=s(i.el);this.params.uniqueNavElements&&"string"==typeof i.el&&a.length>1&&1===t.find(i.el).length&&(a=t.find(i.el));var r=a.find("."+this.params.scrollbar.dragClass);0===r.length&&(r=s('<div class="'+this.params.scrollbar.dragClass+'"></div>'),a.append(r)),d.extend(e,{$el:a,el:a[0],$dragEl:r,dragEl:r[0]}),i.draggable&&e.enableDraggable()}},destroy:function(){this.scrollbar.disableDraggable()}},j={setTransform:function(e,t){var i=this.rtl,a=s(e),r=i?-1:1,n=a.attr("data-swiper-parallax")||"0",o=a.attr("data-swiper-parallax-x"),l=a.attr("data-swiper-parallax-y"),d=a.attr("data-swiper-parallax-scale"),h=a.attr("data-swiper-parallax-opacity");if(o||l?(o=o||"0",l=l||"0"):this.isHorizontal()?(o=n,l="0"):(l=n,o="0"),o=o.indexOf("%")>=0?parseInt(o,10)*t*r+"%":o*t*r+"px",l=l.indexOf("%")>=0?parseInt(l,10)*t+"%":l*t+"px",void 0!==h&&null!==h){var p=h-(h-1)*(1-Math.abs(t));a[0].style.opacity=p}if(void 0===d||null===d)a.transform("translate3d("+o+", "+l+", 0px)");else{var c=d-(d-1)*(1-Math.abs(t));a.transform("translate3d("+o+", "+l+", 0px) scale("+c+")")}},setTranslate:function(){var e=this,t=e.$el,i=e.slides,a=e.progress,r=e.snapGrid;t.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(t,i){e.parallax.setTransform(i,a)}),i.each(function(t,i){var n=i.progress;e.params.slidesPerGroup>1&&"auto"!==e.params.slidesPerView&&(n+=Math.ceil(t/2)-a*(r.length-1)),n=Math.min(Math.max(n,-1),1),s(i).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(t,i){e.parallax.setTransform(i,n)})})},setTransition:function(e){void 0===e&&(e=this.params.speed);this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(t,i){var a=s(i),r=parseInt(a.attr("data-swiper-parallax-duration"),10)||e;0===e&&(r=0),a.transition(r)})}},K={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,s=e.targetTouches[1].pageX,a=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(s-t,2)+Math.pow(a-i,2))},onGestureStart:function(e){var t=this.params.zoom,i=this.zoom,a=i.gesture;if(i.fakeGestureTouched=!1,i.fakeGestureMoved=!1,!h.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;i.fakeGestureTouched=!0,a.scaleStart=K.getDistanceBetweenTouches(e)}a.$slideEl&&a.$slideEl.length||(a.$slideEl=s(e.target).closest(".swiper-slide"),0===a.$slideEl.length&&(a.$slideEl=this.slides.eq(this.activeIndex)),a.$imageEl=a.$slideEl.find("img, svg, canvas"),a.$imageWrapEl=a.$imageEl.parent("."+t.containerClass),a.maxRatio=a.$imageWrapEl.attr("data-swiper-zoom")||t.maxRatio,0!==a.$imageWrapEl.length)?(a.$imageEl.transition(0),this.zoom.isScaling=!0):a.$imageEl=void 0},onGestureChange:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(!h.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;i.fakeGestureMoved=!0,s.scaleMove=K.getDistanceBetweenTouches(e)}s.$imageEl&&0!==s.$imageEl.length&&(h.gestures?this.zoom.scale=e.scale*i.currentScale:i.scale=s.scaleMove/s.scaleStart*i.currentScale,i.scale>s.maxRatio&&(i.scale=s.maxRatio-1+Math.pow(i.scale-s.maxRatio+1,.5)),i.scale<t.minRatio&&(i.scale=t.minRatio+1-Math.pow(t.minRatio-i.scale+1,.5)),s.$imageEl.transform("translate3d(0,0,0) scale("+i.scale+")"))},onGestureEnd:function(e){var t=this.params.zoom,i=this.zoom,s=i.gesture;if(!h.gestures){if(!i.fakeGestureTouched||!i.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!y.android)return;i.fakeGestureTouched=!1,i.fakeGestureMoved=!1}s.$imageEl&&0!==s.$imageEl.length&&(i.scale=Math.max(Math.min(i.scale,s.maxRatio),t.minRatio),s.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale("+i.scale+")"),i.currentScale=i.scale,i.isScaling=!1,1===i.scale&&(s.$slideEl=void 0))},onTouchStart:function(e){var t=this.zoom,i=t.gesture,s=t.image;i.$imageEl&&0!==i.$imageEl.length&&(s.isTouched||(y.android&&e.preventDefault(),s.isTouched=!0,s.touchesStart.x="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesStart.y="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this.zoom,i=t.gesture,s=t.image,a=t.velocity;if(i.$imageEl&&0!==i.$imageEl.length&&(this.allowClick=!1,s.isTouched&&i.$slideEl)){s.isMoved||(s.width=i.$imageEl[0].offsetWidth,s.height=i.$imageEl[0].offsetHeight,s.startX=d.getTranslate(i.$imageWrapEl[0],"x")||0,s.startY=d.getTranslate(i.$imageWrapEl[0],"y")||0,i.slideWidth=i.$slideEl[0].offsetWidth,i.slideHeight=i.$slideEl[0].offsetHeight,i.$imageWrapEl.transition(0),this.rtl&&(s.startX=-s.startX),this.rtl&&(s.startY=-s.startY));var r=s.width*t.scale,n=s.height*t.scale;if(!(r<i.slideWidth&&n<i.slideHeight)){if(s.minX=Math.min(i.slideWidth/2-r/2,0),s.maxX=-s.minX,s.minY=Math.min(i.slideHeight/2-n/2,0),s.maxY=-s.minY,s.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,s.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!s.isMoved&&!t.isScaling){if(this.isHorizontal()&&(Math.floor(s.minX)===Math.floor(s.startX)&&s.touchesCurrent.x<s.touchesStart.x||Math.floor(s.maxX)===Math.floor(s.startX)&&s.touchesCurrent.x>s.touchesStart.x))return void(s.isTouched=!1);if(!this.isHorizontal()&&(Math.floor(s.minY)===Math.floor(s.startY)&&s.touchesCurrent.y<s.touchesStart.y||Math.floor(s.maxY)===Math.floor(s.startY)&&s.touchesCurrent.y>s.touchesStart.y))return void(s.isTouched=!1)}e.preventDefault(),e.stopPropagation(),s.isMoved=!0,s.currentX=s.touchesCurrent.x-s.touchesStart.x+s.startX,s.currentY=s.touchesCurrent.y-s.touchesStart.y+s.startY,s.currentX<s.minX&&(s.currentX=s.minX+1-Math.pow(s.minX-s.currentX+1,.8)),s.currentX>s.maxX&&(s.currentX=s.maxX-1+Math.pow(s.currentX-s.maxX+1,.8)),s.currentY<s.minY&&(s.currentY=s.minY+1-Math.pow(s.minY-s.currentY+1,.8)),s.currentY>s.maxY&&(s.currentY=s.maxY-1+Math.pow(s.currentY-s.maxY+1,.8)),a.prevPositionX||(a.prevPositionX=s.touchesCurrent.x),a.prevPositionY||(a.prevPositionY=s.touchesCurrent.y),a.prevTime||(a.prevTime=Date.now()),a.x=(s.touchesCurrent.x-a.prevPositionX)/(Date.now()-a.prevTime)/2,a.y=(s.touchesCurrent.y-a.prevPositionY)/(Date.now()-a.prevTime)/2,Math.abs(s.touchesCurrent.x-a.prevPositionX)<2&&(a.x=0),Math.abs(s.touchesCurrent.y-a.prevPositionY)<2&&(a.y=0),a.prevPositionX=s.touchesCurrent.x,a.prevPositionY=s.touchesCurrent.y,a.prevTime=Date.now(),i.$imageWrapEl.transform("translate3d("+s.currentX+"px, "+s.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,i=e.image,s=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!i.isTouched||!i.isMoved)return i.isTouched=!1,void(i.isMoved=!1);i.isTouched=!1,i.isMoved=!1;var a=300,r=300,n=s.x*a,o=i.currentX+n,l=s.y*r,d=i.currentY+l;0!==s.x&&(a=Math.abs((o-i.currentX)/s.x)),0!==s.y&&(r=Math.abs((d-i.currentY)/s.y));var h=Math.max(a,r);i.currentX=o,i.currentY=d;var p=i.width*e.scale,c=i.height*e.scale;i.minX=Math.min(t.slideWidth/2-p/2,0),i.maxX=-i.minX,i.minY=Math.min(t.slideHeight/2-c/2,0),i.maxY=-i.minY,i.currentX=Math.max(Math.min(i.currentX,i.maxX),i.minX),i.currentY=Math.max(Math.min(i.currentY,i.maxY),i.minY),t.$imageWrapEl.transition(h).transform("translate3d("+i.currentX+"px, "+i.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl.transform("translate3d(0,0,0)"),t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0,e.scale=1,e.currentScale=1)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,i,a,r,n,o,l,d,h,p,c,u,v,f,m,g,b=this.zoom,w=this.params.zoom,y=b.gesture,x=b.image;(y.$slideEl||(y.$slideEl=this.clickedSlide?s(this.clickedSlide):this.slides.eq(this.activeIndex),y.$imageEl=y.$slideEl.find("img, svg, canvas"),y.$imageWrapEl=y.$imageEl.parent("."+w.containerClass)),y.$imageEl&&0!==y.$imageEl.length)&&(y.$slideEl.addClass(""+w.zoomedSlideClass),void 0===x.touchesStart.x&&e?(t="touchend"===e.type?e.changedTouches[0].pageX:e.pageX,i="touchend"===e.type?e.changedTouches[0].pageY:e.pageY):(t=x.touchesStart.x,i=x.touchesStart.y),b.scale=y.$imageWrapEl.attr("data-swiper-zoom")||w.maxRatio,b.currentScale=y.$imageWrapEl.attr("data-swiper-zoom")||w.maxRatio,e?(m=y.$slideEl[0].offsetWidth,g=y.$slideEl[0].offsetHeight,a=y.$slideEl.offset().left+m/2-t,r=y.$slideEl.offset().top+g/2-i,l=y.$imageEl[0].offsetWidth,d=y.$imageEl[0].offsetHeight,h=l*b.scale,p=d*b.scale,v=-(c=Math.min(m/2-h/2,0)),f=-(u=Math.min(g/2-p/2,0)),n=a*b.scale,o=r*b.scale,n<c&&(n=c),n>v&&(n=v),o<u&&(o=u),o>f&&(o=f)):(n=0,o=0),y.$imageWrapEl.transition(300).transform("translate3d("+n+"px, "+o+"px,0)"),y.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+b.scale+")"))},out:function(){var e=this.zoom,t=this.params.zoom,i=e.gesture;i.$slideEl||(i.$slideEl=this.clickedSlide?s(this.clickedSlide):this.slides.eq(this.activeIndex),i.$imageEl=i.$slideEl.find("img, svg, canvas"),i.$imageWrapEl=i.$imageEl.parent("."+t.containerClass)),i.$imageEl&&0!==i.$imageEl.length&&(e.scale=1,e.currentScale=1,i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),i.$slideEl.removeClass(""+t.zoomedSlideClass),i.$slideEl=void 0)},enable:function(){var e=this.zoom;if(!e.enabled){e.enabled=!0;var t=!("touchstart"!==this.touchEvents.start||!h.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1};h.gestures?(this.$wrapperEl.on("gesturestart",".swiper-slide",e.onGestureStart,t),this.$wrapperEl.on("gesturechange",".swiper-slide",e.onGestureChange,t),this.$wrapperEl.on("gestureend",".swiper-slide",e.onGestureEnd,t)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.on(this.touchEvents.start,".swiper-slide",e.onGestureStart,t),this.$wrapperEl.on(this.touchEvents.move,".swiper-slide",e.onGestureChange,t),this.$wrapperEl.on(this.touchEvents.end,".swiper-slide",e.onGestureEnd,t)),this.$wrapperEl.on(this.touchEvents.move,"."+this.params.zoom.containerClass,e.onTouchMove)}},disable:function(){var e=this.zoom;if(e.enabled){this.zoom.enabled=!1;var t=!("touchstart"!==this.touchEvents.start||!h.passiveListener||!this.params.passiveListeners)&&{passive:!0,capture:!1};h.gestures?(this.$wrapperEl.off("gesturestart",".swiper-slide",e.onGestureStart,t),this.$wrapperEl.off("gesturechange",".swiper-slide",e.onGestureChange,t),this.$wrapperEl.off("gestureend",".swiper-slide",e.onGestureEnd,t)):"touchstart"===this.touchEvents.start&&(this.$wrapperEl.off(this.touchEvents.start,".swiper-slide",e.onGestureStart,t),this.$wrapperEl.off(this.touchEvents.move,".swiper-slide",e.onGestureChange,t),this.$wrapperEl.off(this.touchEvents.end,".swiper-slide",e.onGestureEnd,t)),this.$wrapperEl.off(this.touchEvents.move,"."+this.params.zoom.containerClass,e.onTouchMove)}}},U={loadInSlide:function(e,t){void 0===t&&(t=!0);var i=this,a=i.params.lazy;if(void 0!==e&&0!==i.slides.length){var r=i.virtual&&i.params.virtual.enabled?i.$wrapperEl.children("."+i.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):i.slides.eq(e),n=r.find("."+a.elementClass+":not(."+a.loadedClass+"):not(."+a.loadingClass+")");!r.hasClass(a.elementClass)||r.hasClass(a.loadedClass)||r.hasClass(a.loadingClass)||(n=n.add(r[0])),0!==n.length&&n.each(function(e,n){var o=s(n);o.addClass(a.loadingClass);var l=o.attr("data-background"),d=o.attr("data-src"),h=o.attr("data-srcset"),p=o.attr("data-sizes");i.loadImage(o[0],d||l,h,p,!1,function(){if(void 0!==i&&null!==i&&i&&(!i||i.params)&&!i.destroyed){if(l?(o.css("background-image",'url("'+l+'")'),o.removeAttr("data-background")):(h&&(o.attr("srcset",h),o.removeAttr("data-srcset")),p&&(o.attr("sizes",p),o.removeAttr("data-sizes")),d&&(o.attr("src",d),o.removeAttr("data-src"))),o.addClass(a.loadedClass).removeClass(a.loadingClass),r.find("."+a.preloaderClass).remove(),i.params.loop&&t){var e=r.attr("data-swiper-slide-index");if(r.hasClass(i.params.slideDuplicateClass)){var s=i.$wrapperEl.children('[data-swiper-slide-index="'+e+'"]:not(.'+i.params.slideDuplicateClass+")");i.lazy.loadInSlide(s.index(),!1)}else{var n=i.$wrapperEl.children("."+i.params.slideDuplicateClass+'[data-swiper-slide-index="'+e+'"]');i.lazy.loadInSlide(n.index(),!1)}}i.emit("lazyImageReady",r[0],o[0])}}),i.emit("lazyImageLoad",r[0],o[0])})}},load:function(){var e=this,t=e.$wrapperEl,i=e.params,a=e.slides,r=e.activeIndex,n=e.virtual&&i.virtual.enabled,o=i.lazy,l=i.slidesPerView;function d(e){if(n){if(t.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return!0}else if(a[e])return!0;return!1}function h(e){return n?s(e).attr("data-swiper-slide-index"):s(e).index()}if("auto"===l&&(l=0),e.lazy.initialImageLoaded||(e.lazy.initialImageLoaded=!0),e.params.watchSlidesVisibility)t.children("."+i.slideVisibleClass).each(function(t,i){var a=n?s(i).attr("data-swiper-slide-index"):s(i).index();e.lazy.loadInSlide(a)});else if(l>1)for(var p=r;p<r+l;p+=1)d(p)&&e.lazy.loadInSlide(p);else e.lazy.loadInSlide(r);if(o.loadPrevNext)if(l>1||o.loadPrevNextAmount&&o.loadPrevNextAmount>1){for(var c=o.loadPrevNextAmount,u=l,v=Math.min(r+u+Math.max(c,u),a.length),f=Math.max(r-Math.max(u,c),0),m=r+l;m<v;m+=1)d(m)&&e.lazy.loadInSlide(m);for(var g=f;g<r;g+=1)d(g)&&e.lazy.loadInSlide(g)}else{var b=t.children("."+i.slideNextClass);b.length>0&&e.lazy.loadInSlide(h(b));var w=t.children("."+i.slidePrevClass);w.length>0&&e.lazy.loadInSlide(h(w))}}},_={LinearSpline:function(e,t){var i,s,a,r,n,o=function(e,t){for(s=-1,i=e.length;i-s>1;)e[a=i+s>>1]<=t?s=a:i=a;return i};return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(n=o(this.x,e),r=n-1,(e-this.x[r])*(this.y[n]-this.y[r])/(this.x[n]-this.x[r])+this.y[r]):0},this},getInterpolateFunction:function(e){this.controller.spline||(this.controller.spline=this.params.loop?new _.LinearSpline(this.slidesGrid,e.slidesGrid):new _.LinearSpline(this.snapGrid,e.snapGrid))},setTranslate:function(e,t){var i,s,a=this,r=a.controller.control;function n(e){var t=e.rtl&&"horizontal"===e.params.direction?-a.translate:a.translate;"slide"===a.params.controller.by&&(a.controller.getInterpolateFunction(e),s=-a.controller.spline.interpolate(-t)),s&&"container"!==a.params.controller.by||(i=(e.maxTranslate()-e.minTranslate())/(a.maxTranslate()-a.minTranslate()),s=(t-a.minTranslate())*i+e.minTranslate()),a.params.controller.inverse&&(s=e.maxTranslate()-s),e.updateProgress(s),e.setTranslate(s,a),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(r))for(var o=0;o<r.length;o+=1)r[o]!==t&&r[o]instanceof I&&n(r[o]);else r instanceof I&&t!==r&&n(r)},setTransition:function(e,t){var i,s=this,a=s.controller.control;function r(t){t.setTransition(e,s),0!==e&&(t.transitionStart(),t.$wrapperEl.transitionEnd(function(){a&&(t.params.loop&&"slide"===s.params.controller.by&&t.loopFix(),t.transitionEnd())}))}if(Array.isArray(a))for(i=0;i<a.length;i+=1)a[i]!==t&&a[i]instanceof I&&r(a[i]);else a instanceof I&&t!==a&&r(a)}},Z={makeElFocusable:function(e){return e.attr("tabIndex","0"),e},addElRole:function(e,t){return e.attr("role",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var t=this.params.a11y;if(13===e.keyCode){var i=s(e.target);this.navigation&&this.navigation.$nextEl&&i.is(this.navigation.$nextEl)&&(this.isEnd&&!this.params.loop||this.slideNext(),this.isEnd?this.a11y.notify(t.lastSlideMessage):this.a11y.notify(t.nextSlideMessage)),this.navigation&&this.navigation.$prevEl&&i.is(this.navigation.$prevEl)&&(this.isBeginning&&!this.params.loop||this.slidePrev(),this.isBeginning?this.a11y.notify(t.firstSlideMessage):this.a11y.notify(t.prevSlideMessage)),this.pagination&&i.is("."+this.params.pagination.bulletClass)&&i[0].click()}},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){if(!this.params.loop){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;i&&i.length>0&&(this.isBeginning?this.a11y.disableEl(i):this.a11y.enableEl(i)),t&&t.length>0&&(this.isEnd?this.a11y.disableEl(t):this.a11y.enableEl(t))}},updatePagination:function(){var e=this,t=e.params.a11y;e.pagination&&e.params.pagination.clickable&&e.pagination.bullets&&e.pagination.bullets.length&&e.pagination.bullets.each(function(i,a){var r=s(a);e.a11y.makeElFocusable(r),e.a11y.addElRole(r,"button"),e.a11y.addElLabel(r,t.paginationBulletMessage.replace(//,r.index()+1))})},init:function(){this.$el.append(this.a11y.liveRegion);var e,t,i=this.params.a11y;this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&(this.a11y.makeElFocusable(e),this.a11y.addElRole(e,"button"),this.a11y.addElLabel(e,i.nextSlideMessage),e.on("keydown",this.a11y.onEnterKey)),t&&(this.a11y.makeElFocusable(t),this.a11y.addElRole(t,"button"),this.a11y.addElLabel(t,i.prevSlideMessage),t.on("keydown",this.a11y.onEnterKey)),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.on("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)},destroy:function(){var e,t;this.a11y.liveRegion&&this.a11y.liveRegion.length>0&&this.a11y.liveRegion.remove(),this.navigation&&this.navigation.$nextEl&&(e=this.navigation.$nextEl),this.navigation&&this.navigation.$prevEl&&(t=this.navigation.$prevEl),e&&e.off("keydown",this.a11y.onEnterKey),t&&t.off("keydown",this.a11y.onEnterKey),this.pagination&&this.params.pagination.clickable&&this.pagination.bullets&&this.pagination.bullets.length&&this.pagination.$el.off("keydown","."+this.params.pagination.bulletClass,this.a11y.onEnterKey)}},Q={init:function(){if(this.params.history){if(!t.history||!t.history.pushState)return this.params.history.enabled=!1,void(this.params.hashNavigation.enabled=!0);var e=this.history;e.initialized=!0,e.paths=Q.getPathValues(),(e.paths.key||e.paths.value)&&(e.scrollToSlide(0,e.paths.value,this.params.runCallbacksOnInit),this.params.history.replaceState||t.addEventListener("popstate",this.history.setHistoryPopState))}},destroy:function(){this.params.history.replaceState||t.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=Q.getPathValues(),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(){var e=t.location.pathname.slice(1).split("/").filter(function(e){return""!==e}),i=e.length;return{key:e[i-2],value:e[i-1]}},setHistory:function(e,i){if(this.history.initialized&&this.params.history.enabled){var s=this.slides.eq(i),a=Q.slugify(s.attr("data-history"));t.location.pathname.includes(e)||(a=e+"/"+a);var r=t.history.state;r&&r.value===a||(this.params.history.replaceState?t.history.replaceState({value:a},null,a):t.history.pushState({value:a},null,a))}},slugify:function(e){return e.toString().toLowerCase().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,i){if(t)for(var s=0,a=this.slides.length;s<a;s+=1){var r=this.slides.eq(s);if(Q.slugify(r.attr("data-history"))===t&&!r.hasClass(this.params.slideDuplicateClass)){var n=r.index();this.slideTo(n,e,i)}}else this.slideTo(0,e,i)}},J={onHashCange:function(){var t=e.location.hash.replace("#","");t!==this.slides.eq(this.activeIndex).attr("data-hash")&&this.slideTo(this.$wrapperEl.children("."+this.params.slideClass+'[data-hash="'+t+'"]').index())},setHash:function(){if(this.hashNavigation.initialized&&this.params.hashNavigation.enabled)if(this.params.hashNavigation.replaceState&&t.history&&t.history.replaceState)t.history.replaceState(null,null,"#"+this.slides.eq(this.activeIndex).attr("data-hash")||"");else{var i=this.slides.eq(this.activeIndex),s=i.attr("data-hash")||i.attr("data-history");e.location.hash=s||""}},init:function(){if(!(!this.params.hashNavigation.enabled||this.params.history&&this.params.history.enabled)){this.hashNavigation.initialized=!0;var i=e.location.hash.replace("#","");if(i)for(var a=0,r=this.slides.length;a<r;a+=1){var n=this.slides.eq(a);if((n.attr("data-hash")||n.attr("data-history"))===i&&!n.hasClass(this.params.slideDuplicateClass)){var o=n.index();this.slideTo(o,0,this.params.runCallbacksOnInit,!0)}}this.params.hashNavigation.watchState&&s(t).on("hashchange",this.hashNavigation.onHashCange)}},destroy:function(){this.params.hashNavigation.watchState&&s(t).off("hashchange",this.hashNavigation.onHashCange)}},ee={run:function(){var e=this,t=e.slides.eq(e.activeIndex),i=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(i=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),e.autoplay.timeout=d.nextTick(function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit("autoplay")):(e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit("autoplay")):(e.slideNext(e.params.speed,!0,!0),e.emit("autoplay"))},i)},start:function(){return void 0===this.autoplay.timeout&&(!this.autoplay.running&&(this.autoplay.running=!0,this.emit("autoplayStart"),this.autoplay.run(),!0))},stop:function(){return!!this.autoplay.running&&(void 0!==this.autoplay.timeout&&(this.autoplay.timeout&&(clearTimeout(this.autoplay.timeout),this.autoplay.timeout=void 0),this.autoplay.running=!1,this.emit("autoplayStop"),!0))},pause:function(e){var t=this;t.autoplay.running&&(t.autoplay.paused||(t.autoplay.timeout&&clearTimeout(t.autoplay.timeout),t.autoplay.paused=!0,0!==e&&t.params.autoplay.waitForTransition?t.$wrapperEl.transitionEnd(function(){t&&!t.destroyed&&(t.autoplay.paused=!1,t.autoplay.running?t.autoplay.run():t.autoplay.stop())}):(t.autoplay.paused=!1,t.autoplay.run())))}},te={setTranslate:function(){for(var e=this.slides,t=0;t<e.length;t+=1){var i=this.slides.eq(t),s=-i[0].swiperSlideOffset;this.params.virtualTranslate||(s-=this.translate);var a=0;this.isHorizontal()||(a=s,s=0);var r=this.params.fadeEffect.crossFade?Math.max(1-Math.abs(i[0].progress),0):1+Math.min(Math.max(i[0].progress,-1),0);i.css({opacity:r}).transform("translate3d("+s+"px, "+a+"px, 0px)")}},setTransition:function(e){var t=this,i=t.slides,s=t.$wrapperEl;if(i.transition(e),t.params.virtualTranslate&&0!==e){var a=!1;i.transitionEnd(function(){if(!a&&t&&!t.destroyed){a=!0,t.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],i=0;i<e.length;i+=1)s.trigger(e[i])}})}}},ie={setTranslate:function(){var e,t=this.$el,i=this.$wrapperEl,a=this.slides,r=this.width,n=this.height,o=this.rtl,l=this.size,d=this.params.cubeEffect,h=this.isHorizontal(),p=this.virtual&&this.params.virtual.enabled,c=0;d.shadow&&(h?(0===(e=i.find(".swiper-cube-shadow")).length&&(e=s('<div class="swiper-cube-shadow"></div>'),i.append(e)),e.css({height:r+"px"})):0===(e=t.find(".swiper-cube-shadow")).length&&(e=s('<div class="swiper-cube-shadow"></div>'),t.append(e)));for(var u=0;u<a.length;u+=1){var v=a.eq(u),f=u;p&&(f=parseInt(v.attr("data-swiper-slide-index"),10));var m=90*f,g=Math.floor(m/360);o&&(m=-m,g=Math.floor(-m/360));var b=Math.max(Math.min(v[0].progress,1),-1),w=0,y=0,x=0;f%4==0?(w=4*-g*l,x=0):(f-1)%4==0?(w=0,x=4*-g*l):(f-2)%4==0?(w=l+4*g*l,x=l):(f-3)%4==0&&(w=-l,x=3*l+4*l*g),o&&(w=-w),h||(y=w,w=0);var E="rotateX("+(h?0:-m)+"deg) rotateY("+(h?m:0)+"deg) translate3d("+w+"px, "+y+"px, "+x+"px)";if(b<=1&&b>-1&&(c=90*f+90*b,o&&(c=90*-f-90*b)),v.transform(E),d.slideShadows){var T=h?v.find(".swiper-slide-shadow-left"):v.find(".swiper-slide-shadow-top"),S=h?v.find(".swiper-slide-shadow-right"):v.find(".swiper-slide-shadow-bottom");0===T.length&&(T=s('<div class="swiper-slide-shadow-'+(h?"left":"top")+'"></div>'),v.append(T)),0===S.length&&(S=s('<div class="swiper-slide-shadow-'+(h?"right":"bottom")+'"></div>'),v.append(S)),T.length&&(T[0].style.opacity=Math.max(-b,0)),S.length&&(S[0].style.opacity=Math.max(b,0))}}if(i.css({"-webkit-transform-origin":"50% 50% -"+l/2+"px","-moz-transform-origin":"50% 50% -"+l/2+"px","-ms-transform-origin":"50% 50% -"+l/2+"px","transform-origin":"50% 50% -"+l/2+"px"}),d.shadow)if(h)e.transform("translate3d(0px, "+(r/2+d.shadowOffset)+"px, "+-r/2+"px) rotateX(90deg) rotateZ(0deg) scale("+d.shadowScale+")");else{var C=Math.abs(c)-90*Math.floor(Math.abs(c)/90),M=1.5-(Math.sin(2*C*Math.PI/360)/2+Math.cos(2*C*Math.PI/360)/2),z=d.shadowScale,k=d.shadowScale/M,$=d.shadowOffset;e.transform("scale3d("+z+", 1, "+k+") translate3d(0px, "+(n/2+$)+"px, "+-n/2/k+"px) rotateX(-90deg)")}var L=P.isSafari||P.isUiWebView?-l/2:0;i.transform("translate3d(0px,0,"+L+"px) rotateX("+(this.isHorizontal()?0:c)+"deg) rotateY("+(this.isHorizontal()?-c:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},se={setTranslate:function(){for(var e=this.slides,t=0;t<e.length;t+=1){var i=e.eq(t),a=i[0].progress;this.params.flipEffect.limitRotation&&(a=Math.max(Math.min(i[0].progress,1),-1));var r=-180*a,n=0,o=-i[0].swiperSlideOffset,l=0;if(this.isHorizontal()?this.rtl&&(r=-r):(l=o,o=0,n=-r,r=0),i[0].style.zIndex=-Math.abs(Math.round(a))+e.length,this.params.flipEffect.slideShadows){var d=this.isHorizontal()?i.find(".swiper-slide-shadow-left"):i.find(".swiper-slide-shadow-top"),h=this.isHorizontal()?i.find(".swiper-slide-shadow-right"):i.find(".swiper-slide-shadow-bottom");0===d.length&&(d=s('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"left":"top")+'"></div>'),i.append(d)),0===h.length&&(h=s('<div class="swiper-slide-shadow-'+(this.isHorizontal()?"right":"bottom")+'"></div>'),i.append(h)),d.length&&(d[0].style.opacity=Math.max(-a,0)),h.length&&(h[0].style.opacity=Math.max(a,0))}i.transform("translate3d("+o+"px, "+l+"px, 0px) rotateX("+n+"deg) rotateY("+r+"deg)")}},setTransition:function(e){var t=this,i=t.slides,s=t.activeIndex,a=t.$wrapperEl;if(i.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),t.params.virtualTranslate&&0!==e){var r=!1;i.eq(s).transitionEnd(function(){if(!r&&t&&!t.destroyed){r=!0,t.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],i=0;i<e.length;i+=1)a.trigger(e[i])}})}}},ae={setTranslate:function(){for(var e=this.width,t=this.height,i=this.slides,a=this.$wrapperEl,r=this.slidesSizesGrid,n=this.params.coverflowEffect,o=this.isHorizontal(),l=this.translate,d=o?e/2-l:t/2-l,p=o?n.rotate:-n.rotate,c=n.depth,u=0,v=i.length;u<v;u+=1){var f=i.eq(u),m=r[u],g=(d-f[0].swiperSlideOffset-m/2)/m*n.modifier,b=o?p*g:0,w=o?0:p*g,y=-c*Math.abs(g),x=o?0:n.stretch*g,E=o?n.stretch*g:0;Math.abs(E)<.001&&(E=0),Math.abs(x)<.001&&(x=0),Math.abs(y)<.001&&(y=0),Math.abs(b)<.001&&(b=0),Math.abs(w)<.001&&(w=0);var T="translate3d("+E+"px,"+x+"px,"+y+"px)  rotateX("+w+"deg) rotateY("+b+"deg)";if(f.transform(T),f[0].style.zIndex=1-Math.abs(Math.round(g)),n.slideShadows){var S=o?f.find(".swiper-slide-shadow-left"):f.find(".swiper-slide-shadow-top"),C=o?f.find(".swiper-slide-shadow-right"):f.find(".swiper-slide-shadow-bottom");0===S.length&&(S=s('<div class="swiper-slide-shadow-'+(o?"left":"top")+'"></div>'),f.append(S)),0===C.length&&(C=s('<div class="swiper-slide-shadow-'+(o?"right":"bottom")+'"></div>'),f.append(C)),S.length&&(S[0].style.opacity=g>0?g:0),C.length&&(C[0].style.opacity=-g>0?-g:0)}}(h.pointerEvents||h.prefixedPointerEvents)&&(a[0].style.perspectiveOrigin=d+"px 50%")},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},re=[D,O,A,H,X,B,V,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarged:"container"}},create:function(){d.extend(this,{mousewheel:{enabled:!1,enable:R.enable.bind(this),disable:R.disable.bind(this),handle:R.handle.bind(this),lastScrollTime:d.now()}})},on:{init:function(){this.params.mousewheel.enabled&&this.mousewheel.enable()},destroy:function(){this.mousewheel.enabled&&this.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){d.extend(this,{navigation:{init:F.init.bind(this),update:F.update.bind(this),destroy:F.destroy.bind(this)}})},on:{init:function(){this.navigation.init(),this.navigation.update()},toEdge:function(){this.navigation.update()},fromEdge:function(){this.navigation.update()},destroy:function(){this.navigation.destroy()},click:function(e){var t=this.navigation,i=t.$nextEl,a=t.$prevEl;!this.params.navigation.hideOnClick||s(e.target).is(a)||s(e.target).is(i)||(i&&i.toggleClass(this.params.navigation.hiddenClass),a&&a.toggleClass(this.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){d.extend(this,{pagination:{init:W.init.bind(this),render:W.render.bind(this),update:W.update.bind(this),destroy:W.destroy.bind(this),dynamicBulletIndex:0}})},on:{init:function(){this.pagination.init(),this.pagination.render(),this.pagination.update()},activeIndexChange:function(){this.params.loop?this.pagination.update():void 0===this.snapIndex&&this.pagination.update()},snapIndexChange:function(){this.params.loop||this.pagination.update()},slidesLengthChange:function(){this.params.loop&&(this.pagination.render(),this.pagination.update())},snapGridLengthChange:function(){this.params.loop||(this.pagination.render(),this.pagination.update())},destroy:function(){this.pagination.destroy()},click:function(e){this.params.pagination.el&&this.params.pagination.hideOnClick&&this.pagination.$el.length>0&&!s(e.target).hasClass(this.params.pagination.bulletClass)&&this.pagination.$el.toggleClass(this.params.pagination.hiddenClass)}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){d.extend(this,{scrollbar:{init:q.init.bind(this),destroy:q.destroy.bind(this),updateSize:q.updateSize.bind(this),setTranslate:q.setTranslate.bind(this),setTransition:q.setTransition.bind(this),enableDraggable:q.enableDraggable.bind(this),disableDraggable:q.disableDraggable.bind(this),setDragPosition:q.setDragPosition.bind(this),onDragStart:q.onDragStart.bind(this),onDragMove:q.onDragMove.bind(this),onDragEnd:q.onDragEnd.bind(this),isTouched:!1,timeout:null,dragTimeout:null}})},on:{init:function(){this.scrollbar.init(),this.scrollbar.updateSize(),this.scrollbar.setTranslate()},update:function(){this.scrollbar.updateSize()},resize:function(){this.scrollbar.updateSize()},observerUpdate:function(){this.scrollbar.updateSize()},setTranslate:function(){this.scrollbar.setTranslate()},setTransition:function(e){this.scrollbar.setTransition(e)},destroy:function(){this.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){d.extend(this,{parallax:{setTransform:j.setTransform.bind(this),setTranslate:j.setTranslate.bind(this),setTransition:j.setTransition.bind(this)}})},on:{beforeInit:function(){this.params.parallax.enabled&&(this.params.watchSlidesProgress=!0)},init:function(){this.params.parallax&&this.parallax.setTranslate()},setTranslate:function(){this.params.parallax&&this.parallax.setTranslate()},setTransition:function(e){this.params.parallax&&this.parallax.setTransition(e)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var e=this,t={enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}};"onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function(i){t[i]=K[i].bind(e)}),d.extend(e,{zoom:t})},on:{init:function(){this.params.zoom.enabled&&this.zoom.enable()},destroy:function(){this.zoom.disable()},touchStart:function(e){this.zoom.enabled&&this.zoom.onTouchStart(e)},touchEnd:function(e){this.zoom.enabled&&this.zoom.onTouchEnd(e)},doubleTap:function(e){this.params.zoom.enabled&&this.zoom.enabled&&this.params.zoom.toggle&&this.zoom.toggle(e)},transitionEnd:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){d.extend(this,{lazy:{initialImageLoaded:!1,load:U.load.bind(this),loadInSlide:U.loadInSlide.bind(this)}})},on:{beforeInit:function(){this.params.lazy.enabled&&this.params.preloadImages&&(this.params.preloadImages=!1)},init:function(){this.params.lazy.enabled&&!this.params.loop&&0===this.params.initialSlide&&this.lazy.load()},scroll:function(){this.params.freeMode&&!this.params.freeModeSticky&&this.lazy.load()},resize:function(){this.params.lazy.enabled&&this.lazy.load()},scrollbarDragMove:function(){this.params.lazy.enabled&&this.lazy.load()},transitionStart:function(){this.params.lazy.enabled&&(this.params.lazy.loadOnTransitionStart||!this.params.lazy.loadOnTransitionStart&&!this.lazy.initialImageLoaded)&&this.lazy.load()},transitionEnd:function(){this.params.lazy.enabled&&!this.params.lazy.loadOnTransitionStart&&this.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){d.extend(this,{controller:{control:this.params.controller.control,getInterpolateFunction:_.getInterpolateFunction.bind(this),setTranslate:_.setTranslate.bind(this),setTransition:_.setTransition.bind(this)}})},on:{update:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},resize:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},observerUpdate:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},setTranslate:function(e,t){this.controller.control&&this.controller.setTranslate(e,t)},setTransition:function(e,t){this.controller.control&&this.controller.setTransition(e,t)}}},{name:"a11y",params:{a11y:{enabled:!1,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide "}},create:function(){var e=this;d.extend(e,{a11y:{liveRegion:s('<span class="'+e.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')}}),Object.keys(Z).forEach(function(t){e.a11y[t]=Z[t].bind(e)})},on:{init:function(){this.params.a11y.enabled&&(this.a11y.init(),this.a11y.updateNavigation())},toEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},fromEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},paginationUpdate:function(){this.params.a11y.enabled&&this.a11y.updatePagination()},destroy:function(){this.params.a11y.enabled&&this.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){d.extend(this,{history:{init:Q.init.bind(this),setHistory:Q.setHistory.bind(this),setHistoryPopState:Q.setHistoryPopState.bind(this),scrollToSlide:Q.scrollToSlide.bind(this),destroy:Q.destroy.bind(this)}})},on:{init:function(){this.params.history.enabled&&this.history.init()},destroy:function(){this.params.history.enabled&&this.history.destroy()},transitionEnd:function(){this.history.initialized&&this.history.setHistory(this.params.history.key,this.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){d.extend(this,{hashNavigation:{initialized:!1,init:J.init.bind(this),destroy:J.destroy.bind(this),setHash:J.setHash.bind(this),onHashCange:J.onHashCange.bind(this)}})},on:{init:function(){this.params.hashNavigation.enabled&&this.hashNavigation.init()},destroy:function(){this.params.hashNavigation.enabled&&this.hashNavigation.destroy()},transitionEnd:function(){this.hashNavigation.initialized&&this.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){d.extend(this,{autoplay:{running:!1,paused:!1,run:ee.run.bind(this),start:ee.start.bind(this),stop:ee.stop.bind(this),pause:ee.pause.bind(this)}})},on:{init:function(){this.params.autoplay.enabled&&this.autoplay.start()},beforeTransitionStart:function(e,t){this.autoplay.running&&(t||!this.params.autoplay.disableOnInteraction?this.autoplay.pause(e):this.autoplay.stop())},sliderFirstMove:function(){this.autoplay.running&&(this.params.autoplay.disableOnInteraction?this.autoplay.stop():this.autoplay.pause())},destroy:function(){this.autoplay.running&&this.autoplay.stop()}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){d.extend(this,{fadeEffect:{setTranslate:te.setTranslate.bind(this),setTransition:te.setTransition.bind(this)}})},on:{beforeInit:function(){if("fade"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"fade");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};d.extend(this.params,e),d.extend(this.originalParams,e)}},setTranslate:function(){"fade"===this.params.effect&&this.fadeEffect.setTranslate()},setTransition:function(e){"fade"===this.params.effect&&this.fadeEffect.setTransition(e)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){d.extend(this,{cubeEffect:{setTranslate:ie.setTranslate.bind(this),setTransition:ie.setTransition.bind(this)}})},on:{beforeInit:function(){if("cube"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"cube"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0};d.extend(this.params,e),d.extend(this.originalParams,e)}},setTranslate:function(){"cube"===this.params.effect&&this.cubeEffect.setTranslate()},setTransition:function(e){"cube"===this.params.effect&&this.cubeEffect.setTransition(e)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){d.extend(this,{flipEffect:{setTranslate:se.setTranslate.bind(this),setTransition:se.setTransition.bind(this)}})},on:{beforeInit:function(){if("flip"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"flip"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};d.extend(this.params,e),d.extend(this.originalParams,e)}},setTranslate:function(){"flip"===this.params.effect&&this.flipEffect.setTranslate()},setTransition:function(e){"flip"===this.params.effect&&this.flipEffect.setTransition(e)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:!0}},create:function(){d.extend(this,{coverflowEffect:{setTranslate:ae.setTranslate.bind(this),setTransition:ae.setTransition.bind(this)}})},on:{beforeInit:function(){"coverflow"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"coverflow"),this.classNames.push(this.params.containerModifierClass+"3d"),this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},setTranslate:function(){"coverflow"===this.params.effect&&this.coverflowEffect.setTranslate()},setTransition:function(e){"coverflow"===this.params.effect&&this.coverflowEffect.setTransition(e)}}}];return void 0===I.use&&(I.use=I.Class.use,I.installModule=I.Class.installModule),I.use(re),I});//# sourceMappingURL=swiper.min.js.map]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/wowjs/wow_init.js"/>
      <url>/js/wowjs/wow_init.js</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>wow = new WOW({  boxClass: 'wow',  // 当用户滚动时显示隐藏框的类名称  animateClass: 'animate__animated',  // 触发 CSS 动画的类名称（动画库默认为"animate.css"库）  offset: 0,  // 定义浏览器视口底部与隐藏框顶部之间的距离。  // 当用户滚动并到达此距离时，将显示隐藏的框。  mobile: false,  // 在移动设备上打开/关闭wow.js。  // 经测试此项配置无效。  live: true  // 在页面上检查新的 wow.js元素。})wow.init();]]></content>
      
    </entry>
    
    
  
</search>
